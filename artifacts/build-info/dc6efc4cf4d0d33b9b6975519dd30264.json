{"id":"dc6efc4cf4d0d33b9b6975519dd30264","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@erc725/smart-contracts-v8/contracts/constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n// ERC165 INTERFACE IDs\nbytes4 constant _INTERFACEID_ERC725X = 0x7545acac;\nbytes4 constant _INTERFACEID_ERC725Y = 0x629aa694;\n\n// ERC725X OPERATION TYPES\nuint256 constant OPERATION_0_CALL = 0;\nuint256 constant OPERATION_1_CREATE = 1;\nuint256 constant OPERATION_2_CREATE2 = 2;\nuint256 constant OPERATION_3_STATICCALL = 3;\nuint256 constant OPERATION_4_DELEGATECALL = 4;\n"},"@erc725/smart-contracts-v8/contracts/ERC725Y.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {IERC725Y} from \"./interfaces/IERC725Y.sol\";\n\n// modules\nimport {ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\n// constants\nimport {_INTERFACEID_ERC725Y} from \"./constants.sol\";\n\n// errors\nimport {\n    ERC725Y_MsgValueDisallowed,\n    ERC725Y_DataKeysValuesLengthMismatch,\n    ERC725Y_DataKeysValuesEmptyArray,\n    OwnableCannotSetZeroAddressAsOwner\n} from \"./errors.sol\";\n\n/**\n * @title Deployable implementation with `constructor` of ERC725Y sub-standard, a generic data key/value store.\n * @author Fabian Vogelsteller <fabian@lukso.network> and <CJ42>, <YamenMerhi>, <B00ste>, <SkimaHarvey>\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\ncontract ERC725Y is Ownable, ERC165, IERC725Y {\n    /**\n     * @dev Map `bytes32` data keys to their `bytes` data values.\n     */\n    mapping(bytes32 => bytes) internal _store;\n\n    /**\n     * @notice Deploying an ERC725Y smart contract and setting address `initialOwner` as the contract owner.\n     * @dev Deploy a new ERC725Y contract with the provided `initialOwner` as the contract {owner}.\n     * @param initialOwner the owner of the contract.\n     *\n     * @custom:requirements\n     * - `initialOwner` CANNOT be the zero address.\n     */\n    constructor(address initialOwner) payable {\n        if (initialOwner == address(0)) {\n            revert OwnableCannotSetZeroAddressAsOwner();\n        }\n        Ownable._transferOwnership(initialOwner);\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     */\n    function getData(\n        bytes32 dataKey\n    ) public view virtual override returns (bytes memory dataValue) {\n        return _getData(dataKey);\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     */\n    function getDataBatch(\n        bytes32[] memory dataKeys\n    ) public view virtual override returns (bytes[] memory dataValues) {\n        dataValues = new bytes[](dataKeys.length);\n\n        for (uint256 i = 0; i < dataKeys.length; ) {\n            dataValues[i] = _getData(dataKeys[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n\n        return dataValues;\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     * @custom:requirements\n     * - SHOULD only be callable by the {owner}.\n     *\n     * @custom:warning\n     * **Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value\n     * (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**.\n     * If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\n     *\n     * @custom:events {DataChanged} event.\n     */\n    function setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) public payable virtual override onlyOwner {\n        if (msg.value != 0) revert ERC725Y_MsgValueDisallowed();\n        _setData(dataKey, dataValue);\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     * @custom:requirements\n     * - SHOULD only be callable by the {owner} of the contract.\n     *\n     * @custom:warning\n     * **Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value\n     * (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**.\n     * If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\n     *\n     * @custom:events {DataChanged} event **for each data key/value pair set**.\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) public payable virtual override onlyOwner {\n        /// @dev do not allow to send value by default when setting data in ERC725Y\n        if (msg.value != 0) revert ERC725Y_MsgValueDisallowed();\n        _setDataBatch(dataKeys, dataValues);\n    }\n\n    /**\n     * @dev Read the value stored under a specific `dataKey` inside the underlying ERC725Y storage,\n     * represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n     *\n     * ```solidity\n     * mapping(bytes32 => bytes) _store\n     * ```\n     *\n     * @param dataKey A bytes32 data key to read the associated `bytes` value from the store.\n     * @return dataValue The `bytes` value associated with the given `dataKey` in the ERC725Y storage.\n     */\n    function _getData(\n        bytes32 dataKey\n    ) internal view virtual returns (bytes memory dataValue) {\n        return _store[dataKey];\n    }\n\n    /**\n     * @dev Write a `dataValue` to the underlying ERC725Y storage, represented as a mapping of\n     * `bytes32` data keys mapped to their `bytes` data values.\n     *\n     * ```solidity\n     * mapping(bytes32 => bytes) _store\n     * ```\n     *\n     * @param dataKey A bytes32 data key to write the associated `bytes` value to the store.\n     * @param dataValue The `bytes` value to associate with the given `dataKey` in the ERC725Y storage.\n     *\n     * @custom:events {DataChanged} event emitted after a successful `setData` call.\n     */\n    function _setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual {\n        _store[dataKey] = dataValue;\n        emit DataChanged(dataKey, dataValue);\n    }\n\n    /**\n     * @dev Write a set of `dataValues` to the underlying ERC725Y storage for each associated `dataKeys`. The ERC725Y storage is\n     * represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n     *\n     * ```solidity\n     * mapping(bytes32 => bytes) _store\n     * ```\n     *\n     * @param dataKeys A bytes32 array of data keys to write the associated `bytes` value to the store.\n     * @param dataValues The `bytes` values to associate with each given `dataKeys` in the ERC725Y storage.\n     *\n     * @custom:events {DataChanged} event emitted for each successful data key-value pairs set.\n     */\n    function _setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) internal virtual {\n        if (dataKeys.length != dataValues.length) {\n            revert ERC725Y_DataKeysValuesLengthMismatch();\n        }\n\n        if (dataKeys.length == 0) {\n            revert ERC725Y_DataKeysValuesEmptyArray();\n        }\n\n        for (uint256 i = 0; i < dataKeys.length; ) {\n            _setData(dataKeys[i], dataValues[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @inheritdoc ERC165\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override returns (bool) {\n        return\n            interfaceId == _INTERFACEID_ERC725Y ||\n            super.supportsInterface(interfaceId);\n    }\n}\n"},"@erc725/smart-contracts-v8/contracts/errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev Reverts when trying to send more native tokens `value` than available in current `balance`.\n * @param balance The balance of native tokens of the ERC725X smart contract.\n * @param value The amount of native tokens sent via `ERC725X.execute(...)`/`ERC725X.executeBatch(...)` that is greater than the contract's `balance`.\n */\nerror ERC725X_InsufficientBalance(uint256 balance, uint256 value);\n\n/**\n * @dev Reverts when the `operationTypeProvided` is none of the default operation types available.\n * (CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4)\n * @param operationTypeProvided The unrecognised operation type number provided to `ERC725X.execute(...)`/`ERC725X.executeBatch(...)`.\n */\nerror ERC725X_UnknownOperationType(uint256 operationTypeProvided);\n\n/**\n * @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `staticcall` (`operationType == 3`).\n * Sending native tokens via `staticcall` is not allowed because it is a state changing operation.\n */\nerror ERC725X_MsgValueDisallowedInStaticCall();\n\n/**\n * @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `delegatecall` (`operationType == 4`).\n * Sending native tokens via `staticcall` is not allowed because `msg.value` is persisting.\n */\nerror ERC725X_MsgValueDisallowedInDelegateCall();\n\n/**\n * @dev Reverts when passing a `to` address that is not `address(0)` (= address zero) while deploying a contract via {execute} or {executeBatch} functions.\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_CreateOperationsRequireEmptyRecipientAddress();\n\n/**\n * @dev Reverts when contract deployment failed via {execute} or {executeBatch} functions,\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_ContractDeploymentFailed();\n\n/**\n * @dev Reverts when no contract bytecode was provided as parameter when trying to deploy a contract via {execute} or {executeBatch}.\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_NoContractBytecodeProvided();\n\n/**\n * @dev Reverts when there is not the same number of elements in the `operationTypes`, `targets` addresses, `values`, and `datas`\n * array parameters provided when calling the {executeBatch} function.\n */\nerror ERC725X_ExecuteParametersLengthMismatch();\n\n/**\n * @dev Reverts when one of the array parameter provided to the {executeBatch} function is an empty array.\n */\nerror ERC725X_ExecuteParametersEmptyArray();\n\n/**\n * @dev Reverts when there is not the same number of elements in the `datakeys` and `dataValues`\n * array parameters provided when calling the {setDataBatch} function.\n */\nerror ERC725Y_DataKeysValuesLengthMismatch();\n\n/**\n * @dev Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\n */\nerror ERC725Y_DataKeysValuesEmptyArray();\n\n/**\n * @dev Reverts when sending value to the {setData} or {setDataBatch} function.\n */\nerror ERC725Y_MsgValueDisallowed();\n\n/**\n * @dev Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it.\n */\nerror OwnableCannotSetZeroAddressAsOwner();\n"},"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol":{"content":"// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.0;\n\n/**\n * @title The interface for ERC725Y sub-standard, a generic data key/value store.\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\ninterface IERC725Y {\n    /**\n     * @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n     * @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n     * @param dataKey The data key for which a bytes value is set.\n     * @param dataValue The value to set for the given data key.\n     */\n    event DataChanged(bytes32 indexed dataKey, bytes dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n     * @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n     * @param dataKey The data key for which to retrieve the value.\n     * @return dataValue The bytes value stored under the specified data key.\n     */\n    function getData(\n        bytes32 dataKey\n    ) external view returns (bytes memory dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n     * @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n     * @param dataKeys The array of keys which values to retrieve\n     * @return dataValues The array of data stored at multiple keys\n     */\n    function getDataBatch(\n        bytes32[] memory dataKeys\n    ) external view returns (bytes[] memory dataValues);\n\n    /**\n     * @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n     *\n     * @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n     * The function is marked as payable to enable flexibility on child contracts. For instance to implement\n     * a fee mechanism for setting specific data.\n     *\n     * @param dataKey The data key for which to set a new value.\n     * @param dataValue The new bytes value to set.\n     */\n    function setData(bytes32 dataKey, bytes memory dataValue) external payable;\n\n    /**\n     * @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n     *\n     * @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n     *\n     * @param dataKeys An array of data keys to set bytes values for.\n     * @param dataValues An array of bytes values to set for each `dataKeys`.\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) external payable;\n}\n"},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"content":"// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.0;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/**\n * @title The interface for ERC725Y sub-standard, a generic data key/value store.\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\ninterface IERC725Y is IERC165 {\n    /**\n     * @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n     * @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n     * @param dataKey The data key for which a bytes value is set.\n     * @param dataValue The value to set for the given data key.\n     */\n    event DataChanged(bytes32 indexed dataKey, bytes dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n     * @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n     * @param dataKey The data key for which to retrieve the value.\n     * @return dataValue The bytes value stored under the specified data key.\n     */\n    function getData(\n        bytes32 dataKey\n    ) external view returns (bytes memory dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n     * @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n     * @param dataKeys The array of keys which values to retrieve\n     * @return dataValues The array of data stored at multiple keys\n     */\n    function getDataBatch(\n        bytes32[] memory dataKeys\n    ) external view returns (bytes[] memory dataValues);\n\n    /**\n     * @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n     *\n     * @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n     * The function is marked as payable to enable flexibility on child contracts. For instance to implement\n     * a fee mechanism for setting specific data.\n     *\n     * @param dataKey The data key for which to set a new value.\n     * @param dataValue The new bytes value to set.\n     */\n    function setData(bytes32 dataKey, bytes memory dataValue) external payable;\n\n    /**\n     * @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n     *\n     * @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n     *\n     * @param dataKeys An array of data keys to set bytes values for.\n     * @param dataValues An array of bytes values to set for each `dataKeys`.\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) external payable;\n}\n"},"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @title Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\n * @dev LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received.\n */\ninterface ILSP1UniversalReceiver {\n    /**\n     * @dev Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\n     * @notice Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\n     *\n     * @param from The address of the EOA or smart contract that called the {universalReceiver(...)} function.\n     * @param value The amount sent to the {universalReceiver(...)} function.\n     * @param typeId A `bytes32` unique identifier (= _\"hook\"_)that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\n     * @param receivedData Any arbitrary data that was sent to the {universalReceiver(...)} function.\n     * @param returnedValue The value returned by the {universalReceiver(...)} function.\n     */\n    event UniversalReceiver(\n        address indexed from,\n        uint256 indexed value,\n        bytes32 indexed typeId,\n        bytes receivedData,\n        bytes returnedValue\n    );\n\n    /**\n     * @dev Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\n     * @notice Reacted on received notification with `typeId` & `data`.\n     *\n     * @param typeId The hash of a specific standard or a hook.\n     * @param data The arbitrary data received with the call.\n     *\n     * @custom:events {UniversalReceiver} event.\n     */\n    function universalReceiver(\n        bytes32 typeId,\n        bytes calldata data\n    ) external payable returns (bytes memory);\n}\n"},"@lukso/lsp1-contracts/contracts/LSP1Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\nbytes4 constant _INTERFACEID_LSP1 = 0x6bb56a14;\nbytes4 constant _INTERFACEID_LSP1_DELEGATE = 0xa245bbda;\n\n// --- ERC725Y Data Keys\n\n// bytes10(keccak256('LSP1UniversalReceiverDelegate'))\nbytes10 constant _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX = 0x0cfc51aec37c55a4d0b1;\n\n// keccak256('LSP1UniversalReceiverDelegate')\nbytes32 constant _LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY = 0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47;\n"},"@lukso/lsp1-contracts/contracts/LSP1Utils.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// libraries\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\nimport {LSP2Utils} from \"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\";\n\n// constants\nimport {ILSP1UniversalReceiver as ILSP1} from \"./ILSP1UniversalReceiver.sol\";\n\n// constants\nimport {\n    _INTERFACEID_LSP1,\n    _LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY,\n    _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX\n} from \"./LSP1Constants.sol\";\n\n/**\n * @title LSP1 Utility library.\n * @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n * @dev LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract\n * that implements LSP1 and retrieve informations related to LSP1 `typeId`.\n * Based on LSP1 Universal Receiver standard.\n */\nlibrary LSP1Utils {\n    using ERC165Checker for address;\n\n    /**\n     * @dev Notify a contract at `lsp1Implementation` address by calling its `universalReceiver` function if this contract\n     * supports the LSP1 interface.\n     *\n     * @param lsp1Implementation The address of the contract to notify.\n     * @param typeId A `bytes32` typeId.\n     * @param data Any optional data to send to the `universalReceiver` function to the `lsp1Implementation` address.\n     */\n    function notifyUniversalReceiver(\n        address lsp1Implementation,\n        bytes32 typeId,\n        bytes memory data\n    ) internal {\n        if (\n            lsp1Implementation.supportsERC165InterfaceUnchecked(\n                _INTERFACEID_LSP1\n            )\n        ) {\n            ILSP1(lsp1Implementation).universalReceiver(typeId, data);\n        }\n    }\n\n    /**\n     * @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate`.\n     *\n     * @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n     * the value set under the `LSP1UniversalReceiverDelegate` data key.\n     *\n     * @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n     * @return The bytes value stored under the `LSP1UniversalReceiverDelegate` data key.\n     */\n    function getLSP1DelegateValue(\n        mapping(bytes32 => bytes) storage erc725YStorage\n    ) internal view returns (bytes memory) {\n        return erc725YStorage[_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY];\n    }\n\n    /**\n     * @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate:<type-id>` for a specific `typeId`.\n     *\n     * @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n     * the value set under the `LSP1UniversalReceiverDelegate:<bytes32>` data key for a specific LSP1 `typeId`.\n     *\n     * @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n     * @param typeId A bytes32 LSP1 `typeId`;\n     * @return The bytes value stored under the `LSP1UniversalReceiverDelegate:<bytes32>` data key.\n     */\n    function getLSP1DelegateValueForTypeId(\n        mapping(bytes32 => bytes) storage erc725YStorage,\n        bytes32 typeId\n    ) internal view returns (bytes memory) {\n        bytes32 lsp1TypeIdDataKey = LSP2Utils.generateMappingKey(\n            _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX,\n            bytes20(typeId)\n        );\n        return erc725YStorage[lsp1TypeIdDataKey];\n    }\n}\n"},"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\n\n// bytes4(keccack256(\"LSP17Extendable\"))\nbytes4 constant _INTERFACEID_LSP17_EXTENDABLE = 0xa918fa6b;\n\n// bytes4(keccack256(\"LSP17Extension\"))\nbytes4 constant _INTERFACEID_LSP17_EXTENSION = 0xcee78b40;\n\n// --- ERC725Y Data Keys\n\n// Extension Handler Prefix\n\n// bytes10(keccak256('LSP17Extension'))\nbytes10 constant _LSP17_EXTENSION_PREFIX = 0xcee78b4094da86011096;\n"},"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev reverts when there is no extension for the function selector being called with\n */\nerror NoExtensionFoundForFunctionSelector(bytes4 functionSelector);\n\n/**\n * @dev reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\n */\nerror InvalidFunctionSelector(bytes data);\n\n/**\n * @dev reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\n */\nerror InvalidExtensionAddress(bytes storedData);\n"},"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// modules\nimport {ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\n\n// constants\nimport {_INTERFACEID_LSP17_EXTENDABLE} from \"./LSP17Constants.sol\";\n\n// errors\nimport {NoExtensionFoundForFunctionSelector} from \"./LSP17Errors.sol\";\n\n/**\n * @title Module to add more functionalities to a contract using extensions.\n *\n * @dev Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard.\n * This module can be inherited to extend the functionality of the parent contract when\n * calling a function that doesn't exist on the parent contract via forwarding the call\n * to an extension mapped to the function selector being called, set originally by the parent contract\n */\nabstract contract LSP17Extendable is ERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override returns (bool) {\n        return\n            interfaceId == _INTERFACEID_LSP17_EXTENDABLE ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns whether the interfaceId being checked is supported in the extension of the\n     * {supportsInterface} selector.\n     *\n     * To be used by extendable contracts wishing to extend the ERC165 interfaceIds originally\n     * supported by reading whether the interfaceId queried is supported in the `supportsInterface`\n     * extension if the extension is set, if not it returns false.\n     */\n    function _supportsInterfaceInERC165Extension(\n        bytes4 interfaceId\n    ) internal view virtual returns (bool) {\n        (address erc165Extension, ) = _getExtensionAndForwardValue(\n            ERC165.supportsInterface.selector\n        );\n        if (erc165Extension == address(0)) return false;\n\n        return\n            ERC165Checker.supportsERC165InterfaceUnchecked(\n                erc165Extension,\n                interfaceId\n            );\n    }\n\n    /**\n     * @dev Returns the extension mapped to a specific function selector\n     * If no extension was found, return the address(0)\n     * To be overridden.\n     * Up to the implementer contract to return an extension based on a function selector\n     */\n    function _getExtensionAndForwardValue(\n        bytes4 functionSelector\n    ) internal view virtual returns (address, bool);\n\n    /**\n     * @dev Forwards the call to an extension mapped to a function selector.\n     *\n     * Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n     * called on the account. If there is no extension, the `address(0)` will be returned.\n     * Forwards the value if the extension is payable.\n     *\n     * Reverts if there is no extension for the function being called.\n     *\n     * If there is an extension for the function selector being called, it calls the extension with the\n     * `CALL` opcode, passing the `msg.data` appended with the 20 bytes of the {msg.sender} and 32 bytes of the `msg.value`.\n     *\n     * @custom:hint This function does not forward to the extension contract the `msg.value` received by the contract that inherits `LSP17Extendable`.\n     * If you would like to forward the `msg.value` to the extension contract, you can override the code of this internal function as follow:\n     *\n     * ```solidity\n     * (bool success, bytes memory result) = extension.call{value: msg.value}(\n     *     abi.encodePacked(callData, msg.sender, msg.value)\n     * );\n     * ```\n     */\n    function _fallbackLSP17Extendable(\n        bytes calldata callData\n    ) internal virtual returns (bytes memory) {\n        // If there is a function selector\n        (\n            address extension,\n            bool shouldForwardValue\n        ) = _getExtensionAndForwardValue(msg.sig);\n\n        // if no extension was found, revert\n        if (extension == address(0))\n            revert NoExtensionFoundForFunctionSelector(msg.sig);\n\n        (bool success, bytes memory result) = extension.call{\n            value: shouldForwardValue ? msg.value : 0\n        }(abi.encodePacked(callData, msg.sender, msg.value));\n\n        if (success) {\n            return result;\n        } else {\n            // `mload(result)` -> offset in memory where `result.length` is located\n            // `add(result, 32)` -> offset in memory where `result` data starts\n            // solhint-disable no-inline-assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let resultdata_size := mload(result)\n                revert(add(result, 32), resultdata_size)\n            }\n        }\n    }\n}\n"},"@lukso/lsp2-contracts/contracts/LSP2Utils.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {\n    IERC725Y\n} from \"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\";\n\n/**\n * @title LSP2 Utility library.\n * @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n * @dev LSP2Utils is a library of utility functions that can be used to encode data key of different key type\n * defined on the LSP2 standard.\n * Based on LSP2 ERC725Y JSON Schema standard.\n */\nlibrary LSP2Utils {\n    /**\n     * @dev Generates a data key of keyType Singleton by hashing the string `keyName`. As:\n     *\n     * ```\n     * keccak256(\"keyName\")\n     * ```\n     *\n     * @param keyName The string to hash to generate a Singleton data key.\n     *\n     * @return The generated `bytes32` data key of key type Singleton.\n     */\n    function generateSingletonKey(\n        string memory keyName\n    ) internal pure returns (bytes32) {\n        return keccak256(bytes(keyName));\n    }\n\n    /**\n     * @dev Generates a data key of keyType Array by hashing `arrayKeyName`. As:\n     *\n     * ```\n     * keccak256(\"arrayKeyName[]\")\n     * ```\n     *\n     * @param arrayKeyName The string that will be used to generate a data key of key type Array.\n     *\n     * @return The generated `bytes32` data key of key type Array.\n     *\n     * @custom:requirements\n     * - The `keyName` must include at the end of the string the square brackets `\"[]\"`.\n     */\n    function generateArrayKey(\n        string memory arrayKeyName\n    ) internal pure returns (bytes32) {\n        bytes memory dataKey = bytes(arrayKeyName);\n        require(dataKey.length >= 2, \"MUST be longer than 2 characters\");\n        require(\n            dataKey[dataKey.length - 2] == 0x5b && // \"[\" in utf8 encoded\n                dataKey[dataKey.length - 1] == 0x5d, // \"]\" in utf8\n            \"Missing empty square brackets '[]' at the end of the key name\"\n        );\n\n        return keccak256(dataKey);\n    }\n\n    /**\n     * @dev Generates an Array data key at a specific `index` by concatenating together the first 16 bytes of `arrayKey`\n     * with the 16 bytes of `index`. As:\n     *\n     * ```\n     * arrayKey[index]\n     * ```\n     *\n     * @param arrayKey The Array data key from which to generate the Array data key at a specific `index`.\n     * @param index The index number in the `arrayKey`.\n     *\n     * @return The generated `bytes32` data key of key type Array at a specific `index`.\n     */\n    function generateArrayElementKeyAtIndex(\n        bytes32 arrayKey,\n        uint128 index\n    ) internal pure returns (bytes32) {\n        bytes memory elementInArray = bytes.concat(\n            bytes16(arrayKey),\n            bytes16(index)\n        );\n        return bytes32(elementInArray);\n    }\n\n    /**\n     * @dev Generates a data key of key type Mapping that map `firstWord` to `lastWord`. This is done by hashing two strings words `firstWord` and `lastWord`. As:\n     *\n     * ```\n     * bytes10(firstWordHash):0000:bytes20(lastWordHash)\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 10 bytes of its hash.\n     * @param lastWord The word to retrieve the first 10 bytes of its hash.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific `lastWord`.\n     */\n    function generateMappingKey(\n        string memory firstWord,\n        string memory lastWord\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n        bytes32 lastWordHash = keccak256(bytes(lastWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes10(firstWordHash),\n            bytes2(0),\n            bytes20(lastWordHash)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generates a data key of key type Mapping that map `firstWord` to an address `addr`.\n     * This is done by hashing the string word `firstWord` and concatenating its first 10 bytes with `addr`. As:\n     *\n     * ```\n     * bytes10(firstWordHash):0000:<address>\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 10 bytes of its hash.\n     * @param addr An address to map `firstWord` to.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific address `addr`.\n     */\n    function generateMappingKey(\n        string memory firstWord,\n        address addr\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes10(firstWordHash),\n            bytes2(0),\n            bytes20(addr)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generate a data key of key type Mapping that map a 10 bytes `keyPrefix` to a `bytes20Value`. As:\n     *\n     * ```\n     * keyPrefix:bytes20Value\n     * ```\n     *\n     * @param keyPrefix The first part of the data key of key type Mapping.\n     * @param bytes20Value The second part of the data key of key type Mapping.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map a `keyPrefix` to a specific `bytes20Value`.\n     */\n    function generateMappingKey(\n        bytes10 keyPrefix,\n        bytes20 bytes20Value\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            bytes2(0),\n            bytes20Value\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping by using two strings `firstWord`\n     * mapped to a `secondWord` mapped itself to a specific address `addr`. As:\n     *\n     * ```\n     * bytes6(keccak256(\"firstWord\")):bytes4(keccak256(\"secondWord\")):0000:<address>\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 6 bytes of its hash.\n     * @param secondWord The word to retrieve the first 4 bytes of its hash.\n     * @param addr The address that makes the last part of the MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `firstWord` to a `secondWord` to a specific address `addr`.\n     */\n    function generateMappingWithGroupingKey(\n        string memory firstWord,\n        string memory secondWord,\n        address addr\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n        bytes32 secondWordHash = keccak256(bytes(secondWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes6(firstWordHash),\n            bytes4(secondWordHash),\n            bytes2(0),\n            bytes20(addr)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping that map a `keyPrefix` to an other `mapPrefix` to a specific `subMapKey`. As:\n     *\n     * ```\n     * keyPrefix:mapPrefix:0000:subMapKey\n     * ```\n     *\n     * @param keyPrefix The first part (6 bytes) of the data key of keyType MappingWithGrouping.\n     * @param mapPrefix The second part (4 bytes) of the data key of keyType MappingWithGrouping.\n     * @param subMapKey The last part (bytes20) of the data key of keyType MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix` to a `mapPrefix` to a specific `subMapKey`.\n     */\n    function generateMappingWithGroupingKey(\n        bytes6 keyPrefix,\n        bytes4 mapPrefix,\n        bytes20 subMapKey\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            mapPrefix,\n            bytes2(0),\n            subMapKey\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping that map a 10 bytes `keyPrefix` to a specific `bytes20Value`. As:\n     *\n     * @param keyPrefix The first part of the data key of keyType MappingWithGrouping.\n     * @param bytes20Value The last of the data key of keyType MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix`\n     * (containing the first and second mapped word) to a specific `bytes20Value`.\n     */\n    function generateMappingWithGroupingKey(\n        bytes10 keyPrefix,\n        bytes20 bytes20Value\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            bytes2(0),\n            bytes20Value\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a JSONURL value content.\n     * @param hashFunction The function used to hash the JSON file.\n     * @param json Bytes value of the JSON file.\n     * @param url The URL where the JSON file is hosted.\n     */\n    function generateJSONURLValue(\n        string memory hashFunction,\n        string memory json,\n        string memory url\n    ) internal pure returns (bytes memory) {\n        bytes32 hashFunctionDigest = keccak256(bytes(hashFunction));\n        bytes32 jsonDigest = keccak256(bytes(json));\n\n        return abi.encodePacked(bytes4(hashFunctionDigest), jsonDigest, url);\n    }\n\n    /**\n     * @dev Generate a ASSETURL value content.\n     *\n     * @param hashFunction The function used to hash the JSON file.\n     * @param assetBytes Bytes value of the JSON file.\n     * @param url The URL where the JSON file is hosted.\n     *\n     * @return The encoded value as an `ASSETURL`.\n     */\n    function generateASSETURLValue(\n        string memory hashFunction,\n        string memory assetBytes,\n        string memory url\n    ) internal pure returns (bytes memory) {\n        bytes32 hashFunctionDigest = keccak256(bytes(hashFunction));\n        bytes32 jsonDigest = keccak256(bytes(assetBytes));\n\n        return abi.encodePacked(bytes4(hashFunctionDigest), jsonDigest, url);\n    }\n\n    /**\n     * @dev Verify if `data` is a valid array of value encoded as a `CompactBytesArray` according to the LSP2 `CompactBytesArray` valueType specification.\n     *\n     * @param compactBytesArray The bytes value to verify.\n     *\n     * @return `true` if the `data` is correctly encoded CompactBytesArray, `false` otherwise.\n     */\n    function isCompactBytesArray(\n        bytes memory compactBytesArray\n    ) internal pure returns (bool) {\n        /**\n         * Pointer will always land on these values:\n         *\n         * ↓↓↓↓\n         * 0003 a00000\n         * 0005 fff83a0011\n         * 0020 aa0000000000000000000000000000000000000000000000000000000000cafe\n         * 0012 bb000000000000000000000000000000beef\n         * 0019 cc00000000000000000000000000000000000000000000deed\n         * ↑↑↑↑\n         *\n         * The pointer can only land on the length of the following bytes value.\n         */\n        uint256 pointer = 0;\n\n        /**\n         * Check each length byte and make sure that when you reach the last length byte.\n         * Make sure that the last length describes exactly the last bytes value and you do not get out of bounds.\n         */\n        while (pointer < compactBytesArray.length) {\n            if (pointer + 1 >= compactBytesArray.length) return false;\n            uint256 elementLength = uint16(\n                bytes2(\n                    abi.encodePacked(\n                        compactBytesArray[pointer],\n                        compactBytesArray[pointer + 1]\n                    )\n                )\n            );\n            pointer += elementLength + 2;\n        }\n        if (pointer == compactBytesArray.length) return true;\n        return false;\n    }\n\n    /**\n     * @dev Validates if the bytes `arrayLength` are exactly 16 bytes long, and are of the exact size of an LSP2 Array length value\n     *\n     * @param arrayLength Plain bytes that should be validated.\n     *\n     * @return `true` if the value is 16 bytes long, `false` otherwise.\n     */\n    function isValidLSP2ArrayLengthValue(\n        bytes memory arrayLength\n    ) internal pure returns (bool) {\n        if (arrayLength.length == 16) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @dev Generates Data Key/Value pairs for removing the last element from an LSP2 Array and a mapping Data Key.\n     *\n     * @param arrayKey The Data Key of Key Type Array.\n     * @param newArrayLength The new Array Length for the `arrayKey`.\n     * @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n     * @param removedElementMapKey The Data Key of a mapping to be removed.\n     */\n    function removeLastElementFromArrayAndMap(\n        bytes32 arrayKey,\n        uint128 newArrayLength,\n        bytes32 removedElementIndexKey,\n        bytes32 removedElementMapKey\n    )\n        internal\n        pure\n        returns (bytes32[] memory dataKeys, bytes[] memory dataValues)\n    {\n        dataKeys = new bytes32[](3);\n        dataValues = new bytes[](3);\n\n        // store the number of received assets decremented by 1\n        dataKeys[0] = arrayKey;\n        dataValues[0] = abi.encodePacked(newArrayLength);\n\n        // remove the data value for the map key of the element\n        dataKeys[1] = removedElementMapKey;\n        dataValues[1] = \"\";\n\n        // remove the data value for the map key of the element\n        dataKeys[2] = removedElementIndexKey;\n        dataValues[2] = \"\";\n    }\n\n    /**\n     * @dev Generates Data Key/Value pairs for removing an element from an LSP2 Array and a mapping Data Key.\n     *\n     * @custom:info The function assumes that the Data Value stored under the mapping Data Key is of length 20 where the last 16 bytes are the index of the element in the array.\n     *\n     * @param erc725YContract The ERC725Y contract.\n     * @param arrayKey The Data Key of Key Type Array.\n     * @param newArrayLength The new Array Length for the `arrayKey`.\n     * @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n     * @param removedElementIndex the index of the removed element.\n     * @param removedElementMapKey The Data Key of a mapping to be removed.\n     */\n    function removeElementFromArrayAndMap(\n        IERC725Y erc725YContract,\n        bytes32 arrayKey,\n        uint128 newArrayLength,\n        bytes32 removedElementIndexKey,\n        uint128 removedElementIndex,\n        bytes32 removedElementMapKey\n    )\n        internal\n        view\n        returns (bytes32[] memory dataKeys, bytes[] memory dataValues)\n    {\n        dataKeys = new bytes32[](5);\n        dataValues = new bytes[](5);\n\n        // store the number of received assets decremented by 1\n        dataKeys[0] = arrayKey;\n        dataValues[0] = abi.encodePacked(newArrayLength);\n\n        // remove the data value for the map key of the element\n        dataKeys[1] = removedElementMapKey;\n        dataValues[1] = \"\";\n\n        // Generate the key of the last element in the array\n        bytes32 lastElementIndexKey = LSP2Utils.generateArrayElementKeyAtIndex(\n            arrayKey,\n            newArrayLength\n        );\n\n        // Get the data value from the key of the last element in the array\n        bytes20 lastElementIndexValue = bytes20(\n            erc725YContract.getData(lastElementIndexKey)\n        );\n\n        // Set data value of the last element instead of the element from the array that will be removed\n        dataKeys[2] = removedElementIndexKey;\n        dataValues[2] = bytes.concat(lastElementIndexValue);\n\n        // Remove the data value for the swapped array element\n        dataKeys[3] = lastElementIndexKey;\n        dataValues[3] = \"\";\n\n        // Generate mapping key for the swapped array element\n        bytes32 lastElementMapKey = LSP2Utils.generateMappingKey(\n            bytes10(removedElementMapKey),\n            lastElementIndexValue\n        );\n\n        // Generate the mapping value for the swapped array element\n        bytes memory lastElementMapValue = abi.encodePacked(\n            bytes4(erc725YContract.getData(lastElementMapKey)),\n            removedElementIndex\n        );\n\n        // Update the map value of the swapped array element to the new index\n        dataKeys[4] = lastElementMapKey;\n        dataValues[4] = lastElementMapValue;\n    }\n}\n"},"@lukso/lsp4-contracts/contracts/LSP4Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// Token types\nuint256 constant _LSP4_TOKEN_TYPE_TOKEN = 0;\nuint256 constant _LSP4_TOKEN_TYPE_NFT = 1;\nuint256 constant _LSP4_TOKEN_TYPE_COLLECTION = 2;\n\n// --- ERC725Y entries\n\n// bytes10(keccak256('SupportedStandards')) + bytes2(0) + bytes20(keccak256('LSP4DigitalAsset'))\nbytes32 constant _LSP4_SUPPORTED_STANDARDS_KEY = 0xeafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c;\n\n// bytes4(keccak256('LSP4DigitalAsset'))\nbytes constant _LSP4_SUPPORTED_STANDARDS_VALUE = hex\"a4d96624\";\n\n// keccak256('LSP4TokenName')\nbytes32 constant _LSP4_TOKEN_NAME_KEY = 0xdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1;\n\n// keccak256('LSP4TokenSymbol')\nbytes32 constant _LSP4_TOKEN_SYMBOL_KEY = 0x2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756;\n\n// keccak256('LSP4TokenType')\nbytes32 constant _LSP4_TOKEN_TYPE_KEY = 0xe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb3;\n\n// keccak256('LSP4Creators[]')\nbytes32 constant _LSP4_CREATORS_ARRAY_KEY = 0x114bd03b3a46d48759680d81ebb2b414fda7d030a7105a851867accf1c2352e7;\n\n// bytes10(keccak256('LSP4CreatorsMap'))\nbytes10 constant _LSP4_CREATORS_MAP_KEY_PREFIX = 0x6de85eaf5d982b4e5da0;\n\n// keccak256('LSP4Metadata')\nbytes32 constant _LSP4_METADATA_KEY = 0x9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e;\n"},"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// modules\nimport {ERC725Y} from \"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\";\n\n// constants\nimport {\n    _LSP4_SUPPORTED_STANDARDS_KEY,\n    _LSP4_SUPPORTED_STANDARDS_VALUE,\n    _LSP4_TOKEN_NAME_KEY,\n    _LSP4_TOKEN_SYMBOL_KEY,\n    _LSP4_TOKEN_TYPE_KEY\n} from \"./LSP4Constants.sol\";\n\n// errors\nimport {\n    LSP4TokenNameNotEditable,\n    LSP4TokenSymbolNotEditable,\n    LSP4TokenTypeNotEditable\n} from \"./LSP4Errors.sol\";\n\n/**\n * @title Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\n * @author Matthew Stevens\n * @dev Standard Implementation of the LSP4 standard.\n */\nabstract contract LSP4DigitalAssetMetadata is ERC725Y {\n    /**\n     * @notice Deploying a digital asset `name_` with the `symbol_` symbol.\n     *\n     * @param name_ The name of the token.\n     * @param symbol_ The symbol of the token.\n     * @param initialOwner_ The owner of the token contract.\n     * @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address initialOwner_,\n        uint256 lsp4TokenType_\n    ) ERC725Y(initialOwner_) {\n        // set data key SupportedStandards:LSP4DigitalAsset\n        ERC725Y._setData(\n            _LSP4_SUPPORTED_STANDARDS_KEY,\n            _LSP4_SUPPORTED_STANDARDS_VALUE\n        );\n\n        ERC725Y._setData(_LSP4_TOKEN_NAME_KEY, bytes(name_));\n        ERC725Y._setData(_LSP4_TOKEN_SYMBOL_KEY, bytes(symbol_));\n        ERC725Y._setData(_LSP4_TOKEN_TYPE_KEY, abi.encode(lsp4TokenType_));\n    }\n\n    /**\n     * @dev The ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol` cannot be changed\n     * via this function once the digital asset contract has been deployed.\n     */\n    function _setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual override {\n        if (dataKey == _LSP4_TOKEN_NAME_KEY) {\n            revert LSP4TokenNameNotEditable();\n        } else if (dataKey == _LSP4_TOKEN_SYMBOL_KEY) {\n            revert LSP4TokenSymbolNotEditable();\n        } else if (dataKey == _LSP4_TOKEN_TYPE_KEY) {\n            revert LSP4TokenTypeNotEditable();\n        } else {\n            _store[dataKey] = dataValue;\n\n            emit DataChanged(dataKey, dataValue);\n        }\n    }\n}\n"},"@lukso/lsp4-contracts/contracts/LSP4Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized.\n * The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n * It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\n */\nerror LSP4TokenNameNotEditable();\n\n/**\n * @dev Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized.\n * The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n * It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\n */\nerror LSP4TokenSymbolNotEditable();\n\n/**\n * @dev Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized.\n * The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n * It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\n */\nerror LSP4TokenTypeNotEditable();\n"},"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @title Interface of the LSP7 - Digital Asset standard, a fungible digital asset.\n */\ninterface ILSP7DigitalAsset {\n    // --- Events\n\n    /**\n     * @dev Emitted when the `from` transferred successfully `amount` of tokens to `to`.\n     * @param operator The address of the operator that executed the transfer.\n     * @param from The address which tokens were sent from (balance decreased by `-amount`).\n     * @param to The address that received the tokens (balance increased by `+amount`).\n     * @param amount The amount of tokens transferred.\n     * @param force if the transferred enforced the `to` recipient address to be a contract that implements the LSP1 standard or not.\n     * @param data Any additional data included by the caller during the transfer, and sent in the LSP1 hooks to the `from` and `to` addresses.\n     */\n    event Transfer(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 amount,\n        bool force,\n        bytes data\n    );\n\n    /**\n     * @dev Emitted when `tokenOwner` enables `operator` for `amount` tokens.\n     * @param operator The address authorized as an operator\n     * @param tokenOwner The token owner\n     * @param amount The amount of tokens `operator` address has access to from `tokenOwner`\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     */\n    event OperatorAuthorizationChanged(\n        address indexed operator,\n        address indexed tokenOwner,\n        uint256 indexed amount,\n        bytes operatorNotificationData\n    );\n\n    /**\n     * @dev Emitted when `tokenOwner` disables `operator` for `amount` tokens and set its {`authorizedAmountFor(...)`} to `0`.\n     * @param operator The address revoked from operating\n     * @param tokenOwner The token owner\n     * @param notified Bool indicating whether the operator has been notified or not\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     */\n    event OperatorRevoked(\n        address indexed operator,\n        address indexed tokenOwner,\n        bool indexed notified,\n        bytes operatorNotificationData\n    );\n\n    // --- Token queries\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * If the asset contract has been set to be non-divisible via the `isNonDivisible_` parameter in\n     * the `constructor`, the decimals returned will be `0`. Otherwise `18` is the common value.\n     *\n     * @custom:notice This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {balanceOf} and {transfer}.\n     *\n     * @return the number of decimals. If `0` is returned, the asset is non-divisible.\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev Returns the number of existing tokens that have been minted in this contract.\n     * @return The number of existing tokens.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // --- Token owner queries\n\n    /**\n     * @dev Get the number of tokens owned by `tokenOwner`.\n     * If the token is divisible (the {decimals} function returns `18`), the amount returned should be divided\n     * by 1e18 to get a better picture of the actual balance of the `tokenOwner`.\n     *\n     * _Example:_\n     *\n     * ```\n     * balanceOf(someAddress) -> 42_000_000_000_000_000_000 / 1e18 = 42 tokens\n     * ```\n     *\n     * @param tokenOwner The address of the token holder to query the balance for.\n     * @return The amount of tokens owned by `tokenOwner`.\n     */\n    function balanceOf(address tokenOwner) external view returns (uint256);\n\n    // --- Operator functionality\n\n    /**\n     * @dev Sets an `amount` of tokens that an `operator` has access from the caller's balance (allowance). See {authorizedAmountFor}.\n     * Notify the operator based on the LSP1-UniversalReceiver standard\n     *\n     * @param operator The address to authorize as an operator.\n     * @param amount The allowance amount of tokens operator has access to.\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     *\n     * @custom:requirements\n     * - `operator` cannot be the zero address.\n     *\n     * @custom:events {OperatorAuthorizationChanged} when allowance is given to a new operator or\n     * an existing operator's allowance is updated.\n     */\n    function authorizeOperator(\n        address operator,\n        uint256 amount,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @dev Enables `tokenOwner` to remove `operator` for its tokens, disallowing it to send any amount of tokens on its behalf.\n     * This function also allows the `operator` to remove itself if it is the caller of this function\n     *\n     * @param operator The address to revoke as an operator.\n     * @param tokenOwner The address of the token owner.\n     * @param notify Boolean indicating whether to notify the operator or not.\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     *\n     * @custom:requirements\n     * - caller MUST be `operator` or `tokenOwner`\n     * - `operator` cannot be the zero address.\n     *\n     * @custom:events {OperatorRevoked} event with address of the operator being revoked for the caller (token holder).\n     */\n    function revokeOperator(\n        address operator,\n        address tokenOwner,\n        bool notify,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @custom:info This function in the LSP7 contract can be used as a prevention mechanism\n     * against double spending allowance vulnerability.\n     *\n     * @notice Increase the allowance of `operator` by +`addedAmount`\n     *\n     * @dev Atomically increases the allowance granted to `operator` by the caller.\n     * This is an alternative approach to {authorizeOperator} that can be used as a mitigation\n     * for the double spending allowance problem.\n     * Notify the operator based on the LSP1-UniversalReceiver standard\n     *\n     * @param operator The operator to increase the allowance for `msg.sender`\n     * @param addedAmount The additional amount to add on top of the current operator's allowance\n     *\n     * @custom:requirements\n     *  - `operator` cannot be the same address as `msg.sender`\n     *  - `operator` cannot be the zero address.\n     *\n     * @custom:events {OperatorAuthorizationChanged} indicating the updated allowance\n     */\n    function increaseAllowance(\n        address operator,\n        uint256 addedAmount,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @custom:info This function in the LSP7 contract can be used as a prevention mechanism\n     * against the double spending allowance vulnerability.\n     *\n     * @notice Decrease the allowance of `operator` by -`subtractedAmount`\n     *\n     * @dev Atomically decreases the allowance granted to `operator` by the caller.\n     * This is an alternative approach to {authorizeOperator} that can be used as a mitigation\n     * for the double spending allowance problem.\n     * Notify the operator based on the LSP1-UniversalReceiver standard\n     *\n     * @custom:events\n     *  - {OperatorAuthorizationChanged} event indicating the updated allowance after decreasing it.\n     *  - {OperatorRevoked} event if `subtractedAmount` is the full allowance,\n     *    indicating `operator` does not have any alauthorizedAmountForlowance left for `msg.sender`.\n     *\n     * @param operator The operator to decrease allowance for `msg.sender`\n     * @param tokenOwner The address of the token owner.\n     * @param subtractedAmount The amount to decrease by in the operator's allowance.\n     *\n     * @custom:requirements\n     *  - `operator` cannot be the zero address.\n     *  - `operator` must have allowance for the caller of at least `subtractedAmount`.\n     */\n    function decreaseAllowance(\n        address operator,\n        address tokenOwner,\n        uint256 subtractedAmount,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @dev Get the amount of tokens `operator` address has access to from `tokenOwner`.\n     * Operators can send and burn tokens on behalf of their owners.\n     *\n     * @param operator The operator's address to query the authorized amount for.\n     * @param tokenOwner The token owner that `operator` has allowance on.\n     *\n     * @return The amount of tokens the `operator`'s address has access on the `tokenOwner`'s balance.\n     *\n     * @custom:info If this function is called with the same address for `operator` and `tokenOwner`, it will simply read the `tokenOwner`'s balance\n     * (since a tokenOwner is its own operator).\n     */\n    function authorizedAmountFor(\n        address operator,\n        address tokenOwner\n    ) external view returns (uint256);\n\n    /**\n     * @dev Returns all `operator` addresses that are allowed to transfer or burn on behalf of `tokenOwner`.\n     *\n     * @param tokenOwner The token owner to get the operators for.\n     * @return An array of operators allowed to transfer or burn tokens on behalf of `tokenOwner`.\n     */\n    function getOperatorsOf(\n        address tokenOwner\n    ) external view returns (address[] memory);\n\n    // --- Transfer functionality\n\n    /**\n     * @dev Transfers an `amount` of tokens from the `from` address to the `to` address and notify both sender and recipients via the LSP1 {`universalReceiver(...)`} function.\n     * If the tokens are transferred by an operator on behalf of a token holder, the allowance for the operator will be decreased by `amount` once the token transfer\n     * has been completed (See {authorizedAmountFor}).\n     *\n     * @param from The sender address.\n     * @param to The recipient address.\n     * @param amount The amount of tokens to transfer.\n     * @param force When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\n     *\n     * @custom:requirements\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` and `to` cannot be the same address (`from` cannot send tokens to itself).\n     * - `from` MUST have a balance of at least `amount` tokens.\n     * - If the caller is not `from`, it must be an operator for `from` with an allowance of at least `amount` of tokens.\n     *\n     * @custom:events\n     * - {Transfer} event when tokens get successfully transferred.\n     * - if the transfer is triggered by an operator, either the {OperatorAuthorizationChanged} event will be emitted with the updated allowance or the {OperatorRevoked}\n     * event will be emitted if the operator has no more allowance left.\n     *\n     * @custom:hint The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs)\n     * or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\n     *\n     * @custom:info if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\n     *\n     * @custom:warning Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified.\n     * This even if the `force` was set to `true`.\n     */\n    function transfer(\n        address from,\n        address to,\n        uint256 amount,\n        bool force,\n        bytes memory data\n    ) external;\n\n    /**\n     * @dev Same as {`transfer(...)`} but transfer multiple tokens based on the arrays of `from`, `to`, `amount`.\n     *\n     * @custom:info If any transfer in the batch fail or revert, the whole call will revert.\n     *\n     * @param from An array of sending addresses.\n     * @param to An array of receiving addresses.\n     * @param amount An array of amount of tokens to transfer for each `from -> to` transfer.\n     * @param force For each transfer, when set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n     * @param data An array of additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\n     *\n     * @custom:requirements\n     * - `from`, `to`, `amount` lists MUST be of the same length.\n     * - no values in `from` can be the zero address.\n     * - no values in `to` can be the zero address.\n     * - each `amount` tokens MUST be owned by `from`.\n     * - for each transfer, if the caller is not `from`, it MUST be an operator for `from` with access to at least `amount` tokens.\n     *\n     * @custom:events {Transfer} event **for each token transfer**.\n     */\n    function transferBatch(\n        address[] memory from,\n        address[] memory to,\n        uint256[] memory amount,\n        bool[] memory force,\n        bytes[] memory data\n    ) external;\n\n    /**\n     * @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n     *\n     * @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n     * @param data An array of ABI encoded function calls to be called on the contract.\n     * @return results An array of abi-encoded data returned by the functions executed.\n     */\n    function batchCalls(\n        bytes[] calldata data\n    ) external returns (bytes[] memory results);\n}\n"},"@lukso/lsp7-contracts/contracts/LSP7Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\nbytes4 constant _INTERFACEID_LSP7 = 0xc52d6008;\n\nbytes4 constant _INTERFACEID_LSP7_V0_12_0 = 0xdaa746b7;\n\nbytes4 constant _INTERFACEID_LSP7_V0_14_0 = 0xb3c4928f;\n\n// --- Token Hooks\n\n// keccak256('LSP7Tokens_DelegatorNotification')\nbytes32 constant _TYPEID_LSP7_DELEGATOR = 0x997bd66a7e7823b09383ec7ce65fc306af29b8f82a45627f8efc0408475de016;\n\n// keccak256('LSP7Tokens_DelegateeNotification')\nbytes32 constant _TYPEID_LSP7_DELEGATEE = 0x03fae98a28026f93c23e2c9438c2ef0faa101585127a89919d18f067d907b319;\n\n// keccak256('LSP7Tokens_SenderNotification')\nbytes32 constant _TYPEID_LSP7_TOKENSSENDER = 0x429ac7a06903dbc9c13dfcb3c9d11df8194581fa047c96d7a4171fc7402958ea;\n\n// keccak256('LSP7Tokens_RecipientNotification')\nbytes32 constant _TYPEID_LSP7_TOKENSRECIPIENT = 0x20804611b3e2ea21c480dc465142210acf4a2485947541770ec1fb87dee4a55c;\n\n// keccak256('LSP7Tokens_OperatorNotification')\nbytes32 constant _TYPEID_LSP7_TOKENOPERATOR = 0x386072cc5a58e61263b434c722725f21031cd06e7c552cfaa06db5de8a320dbc;\n"},"@lukso/lsp7-contracts/contracts/LSP7DigitalAsset.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {\n    ILSP1UniversalReceiver as ILSP1\n} from \"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\";\nimport {ILSP7DigitalAsset} from \"./ILSP7DigitalAsset.sol\";\n\n// modules\nimport {\n    EnumerableSet\n} from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\nimport {\n    LSP4DigitalAssetMetadata,\n    ERC725Y\n} from \"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\";\nimport {\n    LSP17Extendable\n} from \"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\";\n\n// libraries\nimport {LSP1Utils} from \"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\";\nimport {LSP2Utils} from \"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\";\n\n// constants\nimport {\n    _INTERFACEID_LSP1\n} from \"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\";\nimport {\n    _LSP17_EXTENSION_PREFIX\n} from \"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\";\nimport {\n    _INTERFACEID_LSP7,\n    _TYPEID_LSP7_TOKENOPERATOR,\n    _TYPEID_LSP7_TOKENSSENDER,\n    _TYPEID_LSP7_TOKENSRECIPIENT\n} from \"./LSP7Constants.sol\";\n\n// errors\nimport {\n    NoExtensionFoundForFunctionSelector,\n    InvalidFunctionSelector,\n    InvalidExtensionAddress\n} from \"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\";\nimport {\n    LSP7TokenContractCannotHoldValue,\n    LSP7AmountExceedsAuthorizedAmount,\n    LSP7InvalidTransferBatch,\n    LSP7AmountExceedsBalance,\n    LSP7DecreasedAllowanceBelowZero,\n    LSP7CannotUseAddressZeroAsOperator,\n    LSP7TokenOwnerCannotBeOperator,\n    LSP7CannotSendWithAddressZero,\n    LSP7NotifyTokenReceiverContractMissingLSP1Interface,\n    LSP7NotifyTokenReceiverIsEOA,\n    OperatorAllowanceCannotBeIncreasedFromZero,\n    LSP7BatchCallFailed,\n    LSP7RevokeOperatorNotAuthorized,\n    LSP7DecreaseAllowanceNotAuthorized\n} from \"./LSP7Errors.sol\";\n\n/**\n * @title Implementation of the LSP7 Digital Asset standard, a contract that represents a fungible token.\n * @author Matthew Stevens\n */\nabstract contract LSP7DigitalAsset is\n    ILSP7DigitalAsset,\n    LSP4DigitalAssetMetadata,\n    LSP17Extendable\n{\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    // --- Storage\n\n    bool internal _isNonDivisible;\n\n    uint256 internal _existingTokens;\n\n    // Mapping from `tokenOwner` to an `amount` of tokens\n    mapping(address => uint256) internal _tokenOwnerBalances;\n\n    // Mapping an `address` to its authorized operator addresses.\n    mapping(address => EnumerableSet.AddressSet) internal _operators;\n\n    // Mapping a `tokenOwner` to an `operator` to `amount` of tokens.\n    mapping(address => mapping(address => uint256))\n        internal _operatorAuthorizedAmount;\n\n    /**\n     * @notice Sets the token-Metadata\n     * @param name_ The name of the token.\n     * @param symbol_ The symbol of the token.\n     * @param newOwner_ The owner of the the token-Metadata.\n     * @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\n     * @param isNonDivisible_ Specify if the LSP7 token is a fungible or non-fungible token.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address newOwner_,\n        uint256 lsp4TokenType_,\n        bool isNonDivisible_\n    ) LSP4DigitalAssetMetadata(name_, symbol_, newOwner_, lsp4TokenType_) {\n        _isNonDivisible = isNonDivisible_;\n    }\n\n    // fallback functions\n\n    /**\n     * @notice The `fallback` function was called with the following amount of native tokens: `msg.value`; and the following calldata: `callData`.\n     *\n     * @dev Achieves the goal of [LSP-17-ContractExtension] standard by extending the contract to handle calls of functions that do not exist natively,\n     * forwarding the function call to the extension address mapped to the function being called.\n     *\n     * This function is executed when:\n     *    - Sending data of length less than 4 bytes to the contract.\n     *    - The first 4 bytes of the calldata do not match any publicly callable functions from the contract ABI.\n     *    - Receiving native tokens\n     *\n     * 1. If the data is equal or longer than 4 bytes, the [ERC-725Y] storage is queried with the following data key: [_LSP17_EXTENSION_PREFIX] + `bytes4(msg.sig)` (Check [LSP-2-ERC725YJSONSchema] for encoding the data key)\n     *\n     *   - If there is no address stored under the following data key, revert with {NoExtensionFoundForFunctionSelector(bytes4)}. The data key relative to `bytes4(0)` is an exception, where no reverts occurs if there is no extension address stored under. This exception is made to allow users to send random data (graffiti) to the account and to be able to react on it.\n     *\n     *   - If there is an address, forward the `msg.data` to the extension using the CALL opcode, appending 52 bytes (20 bytes of `msg.sender` and 32 bytes of `msg.value`). Return what the calls returns, or revert if the call failed.\n     *\n     * 2. If the data sent to this function is of length less than 4 bytes (not a function selector), revert.\n     */\n    // solhint-disable-next-line no-complex-fallback\n    fallback(\n        bytes calldata callData\n    ) external payable virtual returns (bytes memory) {\n        if (msg.data.length < 4) {\n            revert InvalidFunctionSelector(callData);\n        }\n        return _fallbackLSP17Extendable(callData);\n    }\n\n    /**\n     * @dev Reverts whenever someone tries to send native tokens to a LSP7 contract.\n     * @notice LSP7 contract cannot receive native tokens.\n     */\n    // solhint-disable-next-line no-complex-fallback\n    receive() external payable virtual {\n        // revert on empty calls with no value\n        if (msg.value == 0) {\n            revert InvalidFunctionSelector(hex\"00000000\");\n        }\n\n        revert LSP7TokenContractCannotHoldValue();\n    }\n\n    /**\n     * @dev Forwards the call with the received value to an extension mapped to a function selector.\n     *\n     * Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n     * called on the account. If there is no extension, the address(0) will be returned.\n     * Forwards the value if the extension is payable.\n     *\n     * Reverts if there is no extension for the function being called.\n     *\n     * If there is an extension for the function selector being called, it calls the extension with the\n     * CALL opcode, passing the {msg.data} appended with the 20 bytes of the {msg.sender} and\n     * 32 bytes of the {msg.value}\n     *\n     * @custom:info The LSP7 Token contract should not hold any native tokens. Any native tokens received by the contract\n     * will be forwarded to the extension address mapped to the selector from `msg.sig`.\n     */\n    function _fallbackLSP17Extendable(\n        bytes calldata callData\n    ) internal virtual override returns (bytes memory) {\n        // If there is a function selector\n        (address extension, ) = _getExtensionAndForwardValue(msg.sig);\n\n        // if no extension was found, revert\n        if (extension == address(0))\n            revert NoExtensionFoundForFunctionSelector(msg.sig);\n\n        (bool success, bytes memory result) = extension.call{value: msg.value}(\n            abi.encodePacked(callData, msg.sender, msg.value)\n        );\n\n        if (success) {\n            return result;\n        } else {\n            // `mload(result)` -> offset in memory where `result.length` is located\n            // `add(result, 32)` -> offset in memory where `result` data starts\n            /// @solidity memory-safe-assembly\n            // solhint-disable-next-line no-inline-assembly\n            assembly {\n                let resultdata_size := mload(result)\n                revert(add(result, 32), resultdata_size)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the extension address stored under the following data key:\n     * - {_LSP17_EXTENSION_PREFIX} + `<bytes4>` (Check [LSP2-ERC725YJSONSchema] for encoding the data key).\n     * - If no extension is stored, returns the address(0).\n     * - we do not check that payable bool as in lsp7 standard we will always forward the value to the extension\n     */\n    function _getExtensionAndForwardValue(\n        bytes4 functionSelector\n    ) internal view virtual override returns (address, bool) {\n        // Generate the data key relevant for the functionSelector being called\n        bytes32 mappedExtensionDataKey = LSP2Utils.generateMappingKey(\n            _LSP17_EXTENSION_PREFIX,\n            functionSelector\n        );\n\n        // Check if there is an extension stored under the generated data key\n        bytes memory extensionAddress = _getData(mappedExtensionDataKey);\n        if (extensionAddress.length != 20 && extensionAddress.length != 0)\n            revert InvalidExtensionAddress(extensionAddress);\n\n        return (address(bytes20(extensionAddress)), true);\n    }\n\n    /**\n     * @inheritdoc LSP17Extendable\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override(ERC725Y, LSP17Extendable) returns (bool) {\n        return\n            interfaceId == _INTERFACEID_LSP7 ||\n            super.supportsInterface(interfaceId) ||\n            LSP17Extendable._supportsInterfaceInERC165Extension(interfaceId);\n    }\n\n    // --- Token queries\n\n    /**\n     * @inheritdoc ILSP7DigitalAsset\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return _isNonDivisible ? 0 : 18;\n    }\n\n    /**\n     * @inheritdoc ILSP7DigitalAsset\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _existingTokens;\n    }\n\n    // --- Token owner queries\n\n    /**\n     * @inheritdoc ILSP7DigitalAsset\n     */\n    function balanceOf(\n        address tokenOwner\n    ) public view virtual override returns (uint256) {\n        return _tokenOwnerBalances[tokenOwner];\n    }\n\n    // --- General functionality\n\n    /**\n     * @inheritdoc ILSP7DigitalAsset\n     *\n     * @custom:info It's not possible to send value along the functions call due to the use of `delegatecall`.\n     */\n    function batchCalls(\n        bytes[] calldata data\n    ) public virtual override returns (bytes[] memory results) {\n        results = new bytes[](data.length);\n        for (uint256 i; i < data.length; ) {\n            (bool success, bytes memory result) = address(this).delegatecall(\n                data[i]\n            );\n\n            if (!success) {\n                // Look for revert reason and bubble it up if present\n                if (result.length != 0) {\n                    // The easiest way to bubble the revert reason is using memory via assembly\n                    // solhint-disable no-inline-assembly\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        let returndata_size := mload(result)\n                        revert(add(32, result), returndata_size)\n                    }\n                } else {\n                    revert LSP7BatchCallFailed({callIndex: i});\n                }\n            }\n\n            results[i] = result;\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    // --- Operator functionality\n\n    /**\n     * @inheritdoc ILSP7DigitalAsset\n     *\n     * @custom:danger To avoid front-running and Allowance Double-Spend Exploit when\n     * increasing or decreasing the authorized amount of an operator, it is advised to\n     * use the {increaseAllowance} and {decreaseAllowance} functions.\n     *\n     * For more information, see:\n     * https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/\n     */\n    function authorizeOperator(\n        address operator,\n        uint256 amount,\n        bytes memory operatorNotificationData\n    ) public virtual override {\n        _updateOperator(\n            msg.sender,\n            operator,\n            amount,\n            true,\n            operatorNotificationData\n        );\n\n        bytes memory lsp1Data = abi.encode(\n            msg.sender,\n            amount,\n            operatorNotificationData\n        );\n\n        _notifyTokenOperator(operator, lsp1Data);\n    }\n\n    /**\n     * @inheritdoc ILSP7DigitalAsset\n     */\n    function revokeOperator(\n        address operator,\n        address tokenOwner,\n        bool notify,\n        bytes memory operatorNotificationData\n    ) public virtual override {\n        if (msg.sender != tokenOwner && msg.sender != operator) {\n            revert LSP7RevokeOperatorNotAuthorized(\n                msg.sender,\n                tokenOwner,\n                operator\n            );\n        }\n\n        _updateOperator(\n            tokenOwner,\n            operator,\n            0,\n            notify,\n            operatorNotificationData\n        );\n\n        if (notify) {\n            bytes memory lsp1Data = abi.encode(\n                tokenOwner,\n                0,\n                operatorNotificationData\n            );\n\n            _notifyTokenOperator(operator, lsp1Data);\n        }\n    }\n\n    /**\n     * @inheritdoc ILSP7DigitalAsset\n     */\n    function authorizedAmountFor(\n        address operator,\n        address tokenOwner\n    ) public view virtual override returns (uint256) {\n        if (tokenOwner == operator) {\n            return _tokenOwnerBalances[tokenOwner];\n        } else {\n            return _operatorAuthorizedAmount[tokenOwner][operator];\n        }\n    }\n\n    /**\n     * @inheritdoc ILSP7DigitalAsset\n     */\n    function getOperatorsOf(\n        address tokenOwner\n    ) public view virtual override returns (address[] memory) {\n        return _operators[tokenOwner].values();\n    }\n\n    /**\n     * @inheritdoc ILSP7DigitalAsset\n     */\n    function increaseAllowance(\n        address operator,\n        uint256 addedAmount,\n        bytes memory operatorNotificationData\n    ) public virtual override {\n        uint256 oldAllowance = authorizedAmountFor(operator, msg.sender);\n        if (oldAllowance == 0)\n            revert OperatorAllowanceCannotBeIncreasedFromZero(operator);\n\n        uint256 newAllowance = oldAllowance + addedAmount;\n\n        _updateOperator(\n            msg.sender,\n            operator,\n            newAllowance,\n            true,\n            operatorNotificationData\n        );\n\n        bytes memory lsp1Data = abi.encode(\n            msg.sender,\n            newAllowance,\n            operatorNotificationData\n        );\n\n        _notifyTokenOperator(operator, lsp1Data);\n    }\n\n    /**\n     * @inheritdoc ILSP7DigitalAsset\n     */\n    function decreaseAllowance(\n        address operator,\n        address tokenOwner,\n        uint256 subtractedAmount,\n        bytes memory operatorNotificationData\n    ) public virtual override {\n        if (msg.sender != tokenOwner && msg.sender != operator) {\n            revert LSP7DecreaseAllowanceNotAuthorized(\n                msg.sender,\n                tokenOwner,\n                operator\n            );\n        }\n\n        uint256 currentAllowance = authorizedAmountFor(operator, tokenOwner);\n        if (currentAllowance < subtractedAmount) {\n            revert LSP7DecreasedAllowanceBelowZero();\n        }\n\n        uint256 newAllowance;\n        unchecked {\n            newAllowance = currentAllowance - subtractedAmount;\n            _updateOperator(\n                tokenOwner,\n                operator,\n                newAllowance,\n                true,\n                operatorNotificationData\n            );\n        }\n\n        bytes memory lsp1Data = abi.encode(\n            tokenOwner,\n            newAllowance,\n            operatorNotificationData\n        );\n\n        _notifyTokenOperator(operator, lsp1Data);\n    }\n\n    // --- Transfer functionality\n\n    /**\n     * @inheritdoc ILSP7DigitalAsset\n     */\n    function transfer(\n        address from,\n        address to,\n        uint256 amount,\n        bool force,\n        bytes memory data\n    ) public virtual override {\n        if (msg.sender != from) {\n            _spendAllowance({\n                operator: msg.sender,\n                tokenOwner: from,\n                amountToSpend: amount\n            });\n        }\n\n        _transfer(from, to, amount, force, data);\n    }\n\n    /**\n     * @inheritdoc ILSP7DigitalAsset\n     */\n    function transferBatch(\n        address[] memory from,\n        address[] memory to,\n        uint256[] memory amount,\n        bool[] memory force,\n        bytes[] memory data\n    ) public virtual override {\n        uint256 fromLength = from.length;\n        if (\n            fromLength != to.length ||\n            fromLength != amount.length ||\n            fromLength != force.length ||\n            fromLength != data.length\n        ) {\n            revert LSP7InvalidTransferBatch();\n        }\n\n        for (uint256 i; i < fromLength; ) {\n            // using the public transfer function to handle updates to operator authorized amounts\n            transfer(from[i], to[i], amount[i], force[i], data[i]);\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @dev Changes token `amount` the `operator` has access to from `tokenOwner` tokens.\n     * If the amount is zero the operator is removed from the list of operators, otherwise he is added to the list of operators.\n     * If the amount is zero then the operator is being revoked, otherwise the operator amount is being modified.\n     *\n     * @param tokenOwner The address that will give `operator` an allowance for on its balance.\n     * @param operator The address to grant an allowance to spend.\n     * @param allowance The maximum amount of token that `operator` can spend from the `tokenOwner`'s balance.\n     * @param notified Boolean indicating whether the operator has been notified about the change of allowance\n     * @param operatorNotificationData The data to send to the universalReceiver function of the operator in case of notifying\n     *\n     * @custom:events\n     * - {OperatorRevoked} event when operator's allowance is set to `0`.\n     * - {OperatorAuthorizationChanged} event when operator's allowance is set to any other amount.\n     *\n     * @custom:requirements\n     * - `operator` cannot be the zero address.\n     * - `operator` cannot be the same address as `tokenOwner`.\n     */\n    function _updateOperator(\n        address tokenOwner,\n        address operator,\n        uint256 allowance,\n        bool notified,\n        bytes memory operatorNotificationData\n    ) internal virtual {\n        if (operator == address(0)) {\n            revert LSP7CannotUseAddressZeroAsOperator();\n        }\n\n        if (operator == tokenOwner) {\n            revert LSP7TokenOwnerCannotBeOperator();\n        }\n\n        _operatorAuthorizedAmount[tokenOwner][operator] = allowance;\n\n        if (allowance != 0) {\n            _operators[tokenOwner].add(operator);\n            emit OperatorAuthorizationChanged(\n                operator,\n                tokenOwner,\n                allowance,\n                operatorNotificationData\n            );\n        } else {\n            _operators[tokenOwner].remove(operator);\n            emit OperatorRevoked(\n                operator,\n                tokenOwner,\n                notified,\n                operatorNotificationData\n            );\n        }\n    }\n\n    /**\n     * @dev Mints `amount` of tokens and transfers it to `to`.\n     *\n     * @custom:info Any logic in the:\n     * - {_beforeTokenTransfer} function will run before updating the balances.\n     * - {_afterTokenTransfer} function will run after updating the balances, **but before notifying the recipient via LSP1**.\n     *\n     * @param to The address to mint tokens for.\n     * @param amount The amount of tokens to mint.\n     * @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n     * @param data Additional data the caller wants included in the emitted {Transfer} event, and sent in the LSP1 hook to the `to` address.\n     *\n     * @custom:requirements\n     * - `to` cannot be the zero address.\n     *\n     * @custom:events {Transfer} event with `address(0)` as `from`.\n     */\n    function _mint(\n        address to,\n        uint256 amount,\n        bool force,\n        bytes memory data\n    ) internal virtual {\n        if (to == address(0)) {\n            revert LSP7CannotSendWithAddressZero();\n        }\n\n        _beforeTokenTransfer(address(0), to, amount, force, data);\n\n        _update(address(0), to, amount, force, data);\n\n        _afterTokenTransfer(address(0), to, amount, force, data);\n\n        bytes memory lsp1Data = abi.encode(\n            msg.sender,\n            address(0),\n            to,\n            amount,\n            data\n        );\n        _notifyTokenReceiver(to, force, lsp1Data);\n    }\n\n    /**\n     * @dev Burns (= destroys) `amount` of tokens, decrease the `from` balance. This is done by sending them to the zero address.\n     *\n     * Both the sender and recipient will be notified of the token transfer through the LSP1 {universalReceiver}\n     * function, if they are contracts that support the LSP1 interface. Their `universalReceiver` function will receive\n     * all the parameters in the calldata packed encoded.\n     *\n     * @custom:info Any logic in the:\n     * - {_beforeTokenTransfer} function will run before updating the balances.\n     * - {_afterTokenTransfer} function will run after updating the balances, **but before notifying the sender via LSP1**.\n     *\n     * @param from The address to burn tokens from its balance.\n     * @param amount The amount of tokens to burn.\n     * @param data Additional data the caller wants included in the emitted event, and sent in the LSP1 hook to the `from` and `to` address.\n     *\n     * @custom:hint In dApps, you can know which address is burning tokens by listening for the `Transfer` event and filter with the zero address as `to`.\n     *\n     * @custom:requirements\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens.\n     * - If the caller is not `from`, it must be an operator for `from` with access to at least\n     * `amount` tokens.\n     *\n     * @custom:events {Transfer} event with `address(0)` as the `to` address\n     */\n    function _burn(\n        address from,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        if (from == address(0)) {\n            revert LSP7CannotSendWithAddressZero();\n        }\n\n        _beforeTokenTransfer(from, address(0), amount, false, data);\n\n        _update(from, address(0), amount, false, data);\n\n        _afterTokenTransfer(from, address(0), amount, false, data);\n\n        bytes memory lsp1Data = abi.encode(\n            msg.sender,\n            from,\n            address(0),\n            amount,\n            data\n        );\n        _notifyTokenSender(from, lsp1Data);\n    }\n\n    /**\n     * @dev Spend `amountToSpend` from the `operator`'s authorized on behalf of the `tokenOwner`.\n     *\n     * @param operator The address of the operator to decrease the allowance of.\n     * @param tokenOwner The address that granted an allowance on its balance to `operator`.\n     * @param amountToSpend The amount of tokens to subtract in allowance of `operator`.\n     *\n     * @custom:events\n     * - {OperatorRevoked} event when operator's allowance is set to `0`.\n     * - {OperatorAuthorizationChanged} event when operator's allowance is set to any other amount.\n     *\n     * @custom:requirements\n     * - The `amountToSpend` MUST be at least the allowance granted to `operator` (accessible via {`authorizedAmountFor}`)\n     * - `operator` cannot be the zero address.\n     * - `operator` cannot be the same address as `tokenOwner`.\n     */\n    function _spendAllowance(\n        address operator,\n        address tokenOwner,\n        uint256 amountToSpend\n    ) internal virtual {\n        uint256 authorizedAmount = _operatorAuthorizedAmount[tokenOwner][\n            operator\n        ];\n\n        if (authorizedAmount == 0 || amountToSpend > authorizedAmount) {\n            revert LSP7AmountExceedsAuthorizedAmount(\n                tokenOwner,\n                authorizedAmount,\n                operator,\n                amountToSpend\n            );\n        }\n\n        _updateOperator({\n            tokenOwner: tokenOwner,\n            operator: operator,\n            allowance: authorizedAmount - amountToSpend,\n            notified: false,\n            operatorNotificationData: \"\"\n        });\n    }\n\n    /**\n     * @dev Transfer tokens from `from` to `to` by decreasing the balance of `from` by `-amount` and increasing the balance\n     * of `to` by `+amount`.\n     *\n     * Both the sender and recipient will be notified of the token transfer through the LSP1 {universalReceiver}\n     * function, if they are contracts that support the LSP1 interface. Their `universalReceiver` function will receive\n     * all the parameters in the calldata packed encoded.\n     *\n     * @custom:info Any logic in the:\n     * - {_beforeTokenTransfer} function will run before updating the balances.\n     * - {_afterTokenTransfer} function will run after updating the balances, **but before notifying the sender/recipient via LSP1**.\n     *\n     * @param from The address to decrease the balance.\n     * @param to The address to increase the balance.\n     * @param amount The amount of tokens to transfer from `from` to `to`.\n     * @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n     * @param data Additional data the caller wants included in the emitted event, and sent in the LSP1 hook to the `from` and `to` address.\n     *\n     * @custom:requirements\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have at least `amount` of tokens.\n     *\n     * @custom:events {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount,\n        bool force,\n        bytes memory data\n    ) internal virtual {\n        if (from == address(0) || to == address(0)) {\n            revert LSP7CannotSendWithAddressZero();\n        }\n\n        _beforeTokenTransfer(from, to, amount, force, data);\n\n        _update(from, to, amount, force, data);\n\n        _afterTokenTransfer(from, to, amount, force, data);\n\n        bytes memory lsp1Data = abi.encode(msg.sender, from, to, amount, data);\n\n        _notifyTokenSender(from, lsp1Data);\n        _notifyTokenReceiver(to, force, lsp1Data);\n    }\n\n    /**\n     * @dev Transfers `amount` of tokens from `from` to `to`.\n     * Alternatively mints or burns if `from` or `to` is the zero address.\n     *\n     * @custom:info All customizations to transfers, mints, and burns should be done by overriding this function.\n     *\n     * @custom:events {Transfer} event.\n     */\n    function _update(\n        address from,\n        address to,\n        uint256 amount,\n        bool force,\n        bytes memory data\n    ) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _existingTokens += amount;\n        } else {\n            uint256 fromBalance = _tokenOwnerBalances[from];\n\n            if (fromBalance < amount) {\n                revert LSP7AmountExceedsBalance(fromBalance, from, amount);\n            }\n\n            unchecked {\n                // Overflow not possible: amount <= fromBalance <= totalSupply.\n                _tokenOwnerBalances[from] = fromBalance - amount;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: amount <= totalSupply or amount <= fromBalance <= totalSupply.\n                _existingTokens -= amount;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + amount is at most totalSupply, which we know fits into a uint256.\n                _tokenOwnerBalances[to] += amount;\n            }\n        }\n\n        emit Transfer({\n            operator: msg.sender,\n            from: from,\n            to: to,\n            amount: amount,\n            force: force,\n            data: data\n        });\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer, including minting and burning.\n     * Allows to run custom logic before updating balances and notifying sender/recipient by overriding this function.\n     *\n     * @param from The sender address\n     * @param to The recipient address\n     * @param amount The amount of token to transfer\n     * @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n     * @param data The data sent alongside the transfer\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount,\n        bool force,\n        bytes memory data // solhint-disable-next-line no-empty-blocks\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer, including minting and burning.\n     * Allows to run custom logic after updating balances, but **before notifying sender/recipient** by overriding this function.\n     *\n     * @param from The sender address\n     * @param to The recipient address\n     * @param amount The amount of token to transfer\n     * @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n     * @param data The data sent alongside the transfer\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount,\n        bool force,\n        bytes memory data // solhint-disable-next-line no-empty-blocks\n    ) internal virtual {}\n\n    /**\n     * @dev Attempt to notify the operator `operator` about the `amount` tokens being authorized with.\n     * This is done by calling its {universalReceiver} function with the `_TYPEID_LSP7_TOKENOPERATOR` as typeId, if `operator` is a contract that supports the LSP1 interface.\n     * If `operator` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n\n     * @param operator The address to call the {universalReceiver} function on.\n     * @param lsp1Data the data to be sent to the `operator` address in the `universalReceiver` call.\n     */\n    function _notifyTokenOperator(\n        address operator,\n        bytes memory lsp1Data\n    ) internal virtual {\n        LSP1Utils.notifyUniversalReceiver(\n            operator,\n            _TYPEID_LSP7_TOKENOPERATOR,\n            lsp1Data\n        );\n    }\n\n    /**\n     * @dev Attempt to notify the token sender `from` about the `amount` of tokens being transferred.\n     * This is done by calling its {universalReceiver} function with the `_TYPEID_LSP7_TOKENSSENDER` as typeId, if `from` is a contract that supports the LSP1 interface.\n     * If `from` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n\n     * @param from The address to call the {universalReceiver} function on.\n     * @param lsp1Data the data to be sent to the `from` address in the `universalReceiver` call.\n     */\n    function _notifyTokenSender(\n        address from,\n        bytes memory lsp1Data\n    ) internal virtual {\n        LSP1Utils.notifyUniversalReceiver(\n            from,\n            _TYPEID_LSP7_TOKENSSENDER,\n            lsp1Data\n        );\n    }\n\n    /**\n     * @dev Attempt to notify the token receiver `to` about the `amount` tokens being received.\n     * This is done by calling its {universalReceiver} function with the `_TYPEID_LSP7_TOKENSRECIPIENT` as typeId, if `to` is a contract that supports the LSP1 interface.\n     *\n     * If `to` is is an EOA or a contract that does not support the LSP1 interface, the behaviour will depend on the `force` boolean flag.\n     * - if `force` is set to `true`, nothing will happen and no notification will be sent.\n     * - if `force` is set to `false, the transaction will revert.\n     *\n     * @param to The address to call the {universalReceiver} function on.\n     * @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n     * @param lsp1Data The data to be sent to the `to` address in the `universalReceiver(...)` call.\n     */\n    function _notifyTokenReceiver(\n        address to,\n        bool force,\n        bytes memory lsp1Data\n    ) internal virtual {\n        if (\n            ERC165Checker.supportsERC165InterfaceUnchecked(\n                to,\n                _INTERFACEID_LSP1\n            )\n        ) {\n            ILSP1(to).universalReceiver(_TYPEID_LSP7_TOKENSRECIPIENT, lsp1Data);\n        } else if (!force) {\n            if (to.code.length != 0) {\n                revert LSP7NotifyTokenReceiverContractMissingLSP1Interface(to);\n            } else {\n                revert LSP7NotifyTokenReceiverIsEOA(to);\n            }\n        }\n    }\n}\n"},"@lukso/lsp7-contracts/contracts/LSP7Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- Errors\n\n/**\n * @dev reverts when sending an `amount` of tokens larger than the current `balance` of the `tokenOwner`.\n */\nerror LSP7AmountExceedsBalance(\n    uint256 balance,\n    address tokenOwner,\n    uint256 amount\n);\n\n/**\n * @dev reverts when `operator` of `tokenOwner` send an `amount` of tokens\n * larger than the `authorizedAmount`.\n */\nerror LSP7AmountExceedsAuthorizedAmount(\n    address tokenOwner,\n    uint256 authorizedAmount,\n    address operator,\n    uint256 amount\n);\n\n/**\n * @dev reverts when trying to set the zero address as an operator.\n */\nerror LSP7CannotUseAddressZeroAsOperator();\n\n/**\n * @dev reverts when trying to:\n * - mint tokens to the zero address.\n * - burn tokens from the zero address.\n * - transfer tokens from or to the zero address.\n */\nerror LSP7CannotSendWithAddressZero();\n\n/**\n * @dev reverts when the array parameters used in {transferBatch} have different lengths.\n */\nerror LSP7InvalidTransferBatch();\n\n/**\n * @dev reverts if the `tokenReceiver` does not implement LSP1\n * when minting or transferring tokens with `bool force` set as `false`.\n */\nerror LSP7NotifyTokenReceiverContractMissingLSP1Interface(\n    address tokenReceiver\n);\n\n/**\n * @dev reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\n */\nerror LSP7NotifyTokenReceiverIsEOA(address tokenReceiver);\n\n/**\n * @dev reverts when trying to authorize or revoke the token's owner as an operator.\n */\nerror LSP7TokenOwnerCannotBeOperator();\n\n/**\n * @dev Reverts when trying to decrease an operator's allowance to more than its current allowance.\n */\nerror LSP7DecreasedAllowanceBelowZero();\n\n/**\n * @dev Error occurs when sending native tokens to the LSP7 contract without sending any data.\n *\n * E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\n *\n * @notice LSP7 contract cannot receive native tokens.\n */\nerror LSP7TokenContractCannotHoldValue();\n\n/**\n * @dev Reverts when token owner call {increaseAllowance} for an operator that does not have any allowance\n */\nerror OperatorAllowanceCannotBeIncreasedFromZero(address operator);\n\n/**\n * @dev Reverts when a batch call failed.\n * @notice Batch call failed.\n */\nerror LSP7BatchCallFailed(uint256 callIndex);\n\n/**\n * @dev Reverts when the call to revoke operator is not authorized.\n */\nerror LSP7RevokeOperatorNotAuthorized(\n    address caller,\n    address tokenOwner,\n    address operator\n);\n\n/**\n * @dev Reverts when the call to decrease allowance is not authorized.\n */\nerror LSP7DecreaseAllowanceNotAuthorized(\n    address caller,\n    address tokenOwner,\n    address operator\n);\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/introspection/ERC165Checker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Library used to query support of an interface declared via {IERC165}.\n *\n * Note that these functions return the actual result of the query: they do not\n * `revert` if an interface is not supported. It is up to the caller to decide\n * what to do in these cases.\n */\nlibrary ERC165Checker {\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\n    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;\n\n    /**\n     * @dev Returns true if `account` supports the {IERC165} interface.\n     */\n    function supportsERC165(address account) internal view returns (bool) {\n        // Any contract that implements ERC165 must explicitly indicate support of\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\n        return\n            supportsERC165InterfaceUnchecked(account, type(IERC165).interfaceId) &&\n            !supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID);\n    }\n\n    /**\n     * @dev Returns true if `account` supports the interface defined by\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\n        // query support of both ERC165 as per the spec and support of _interfaceId\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\n    }\n\n    /**\n     * @dev Returns a boolean array where each value corresponds to the\n     * interfaces passed in and whether they're supported or not. This allows\n     * you to batch check interfaces for a contract where your expectation\n     * is that some interfaces may not be supported.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * _Available since v3.4._\n     */\n    function getSupportedInterfaces(\n        address account,\n        bytes4[] memory interfaceIds\n    ) internal view returns (bool[] memory) {\n        // an array of booleans corresponding to interfaceIds and whether they're supported or not\n        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);\n\n        // query support of ERC165 itself\n        if (supportsERC165(account)) {\n            // query support of each interface in interfaceIds\n            for (uint256 i = 0; i < interfaceIds.length; i++) {\n                interfaceIdsSupported[i] = supportsERC165InterfaceUnchecked(account, interfaceIds[i]);\n            }\n        }\n\n        return interfaceIdsSupported;\n    }\n\n    /**\n     * @dev Returns true if `account` supports all the interfaces defined in\n     * `interfaceIds`. Support for {IERC165} itself is queried automatically.\n     *\n     * Batch-querying can lead to gas savings by skipping repeated checks for\n     * {IERC165} support.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {\n        // query support of ERC165 itself\n        if (!supportsERC165(account)) {\n            return false;\n        }\n\n        // query support of each interface in interfaceIds\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            if (!supportsERC165InterfaceUnchecked(account, interfaceIds[i])) {\n                return false;\n            }\n        }\n\n        // all interfaces supported\n        return true;\n    }\n\n    /**\n     * @notice Query if a contract implements an interface, does not check ERC165 support\n     * @param account The address of the contract to query for support of an interface\n     * @param interfaceId The interface identifier, as specified in ERC-165\n     * @return true if the contract at account indicates support of the interface with\n     * identifier interfaceId, false otherwise\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\n     * the behavior of this method is undefined. This precondition can be checked\n     * with {supportsERC165}.\n     *\n     * Some precompiled contracts will falsely indicate support for a given interface, so caution\n     * should be exercised when using this function.\n     *\n     * Interface identification is specified in ERC-165.\n     */\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\n        // prepare call\n        bytes memory encodedParams = abi.encodeWithSelector(IERC165.supportsInterface.selector, interfaceId);\n\n        // perform static call\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly {\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0x00)\n        }\n\n        return success && returnSize >= 0x20 && returnValue > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/ama.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@lukso/lsp7-contracts/contracts/LSP7DigitalAsset.sol\";\n\ncontract SimpleAMA is LSP7DigitalAsset {\n    struct Question {\n        address sender;\n        string questionText;\n        string answerText;\n        bool answered;\n    }\n\n    address public profileOwner;\n    uint256 public questionCounter;\n    mapping(uint256 => Question) public questions;\n    mapping(address => bool) public hasReceivedToken;\n\n    constructor(\n        address newOwner\n    ) LSP7DigitalAsset(\"Free Question Token\", \"FQT\", newOwner, 0, false) {\n        profileOwner = newOwner;\n    }\n\n    // each visitor gets one token\n    function claimFreeToken() public {\n        require(!hasReceivedToken[msg.sender], \"Already claimed a free token\");\n\n        hasReceivedToken[msg.sender] = true;\n        _mint(msg.sender, 1 * 10 ** 18, true, \"Free token for AMA question\");\n    }\n\n    // this will burn the visitors token after submitting a question\n    function submitQuestion(string memory _questionText) public {\n        require(\n            balanceOf(msg.sender) >= 1 * 10 ** 18,\n            \"You need a token to submit a question\"\n        );\n\n        questionCounter++;\n        questions[questionCounter] = Question(\n            msg.sender,\n            _questionText,\n            \"\",\n            false\n        );\n\n        _burn(msg.sender, 1 * 10 ** 18, \"Burn token to submit a question\");\n    }\n\n    // lets owner of contract anwser questions\n    function answerQuestion(\n        uint256 _questionId,\n        string memory _answerText\n    ) public {\n        require(\n            msg.sender == profileOwner,\n            \"Only the profile owner can answer questions\"\n        );\n        require(_questionId <= questionCounter, \"Invalid question ID\");\n\n        Question storage question = questions[_questionId];\n        question.answerText = _answerText;\n        question.answered = true;\n    }\n\n    function getAllQuestions() public view returns (Question[] memory) {\n        Question[] memory allQuestions = new Question[](questionCounter);\n        for (uint256 i = 1; i <= questionCounter; i++) {\n            allQuestions[i - 1] = questions[i];\n        }\n\n        return allQuestions;\n    }\n\n    // checks if address already submitted\n    function hasSubmittedQuestion(address user) public view returns (bool) {\n        for (uint256 i = 1; i <= questionCounter; i++) {\n            if (questions[i].sender == user) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // token balance of user\n    function getFQTBalance(address user) public view returns (uint256) {\n        return balanceOf(user);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@erc725/smart-contracts-v8/contracts/ERC725Y.sol":{"ast":{"absolutePath":"@erc725/smart-contracts-v8/contracts/ERC725Y.sol","exportedSymbols":{"ERC165":[3387],"ERC725Y":[269],"ERC725Y_DataKeysValuesEmptyArray":[333],"ERC725Y_DataKeysValuesLengthMismatch":[330],"ERC725Y_MsgValueDisallowed":[336],"IERC725Y":[386],"Ownable":[3333],"OwnableCannotSetZeroAddressAsOwner":[339],"_INTERFACEID_ERC725Y":[277]},"id":270,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:0"},{"absolutePath":"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol","file":"./interfaces/IERC725Y.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":270,"sourceUnit":387,"src":"78:51:0","symbolAliases":[{"foreign":{"id":2,"name":"IERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"86:8:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":270,"sourceUnit":3388,"src":"142:78:0","symbolAliases":[{"foreign":{"id":4,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"150:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":270,"sourceUnit":3334,"src":"221:67:0","symbolAliases":[{"foreign":{"id":6,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"229:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts-v8/contracts/constants.sol","file":"./constants.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":270,"sourceUnit":293,"src":"303:53:0","symbolAliases":[{"foreign":{"id":8,"name":"_INTERFACEID_ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"311:20:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts-v8/contracts/errors.sol","file":"./errors.sol","id":14,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":270,"sourceUnit":340,"src":"368:182:0","symbolAliases":[{"foreign":{"id":10,"name":"ERC725Y_MsgValueDisallowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"381:26:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":11,"name":"ERC725Y_DataKeysValuesLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"413:36:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":12,"name":"ERC725Y_DataKeysValuesEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"455:32:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":13,"name":"OwnableCannotSetZeroAddressAsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"493:34:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":16,"name":"Ownable","nameLocations":["1029:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3333,"src":"1029:7:0"},"id":17,"nodeType":"InheritanceSpecifier","src":"1029:7:0"},{"baseName":{"id":18,"name":"ERC165","nameLocations":["1038:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":3387,"src":"1038:6:0"},"id":19,"nodeType":"InheritanceSpecifier","src":"1038:6:0"},{"baseName":{"id":20,"name":"IERC725Y","nameLocations":["1046:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":386,"src":"1046:8:0"},"id":21,"nodeType":"InheritanceSpecifier","src":"1046:8:0"}],"canonicalName":"ERC725Y","contractDependencies":[],"contractKind":"contract","documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"552:456:0","text":" @title Deployable implementation with `constructor` of ERC725Y sub-standard, a generic data key/value store.\n @author Fabian Vogelsteller <fabian@lukso.network> and <CJ42>, <YamenMerhi>, <B00ste>, <SkimaHarvey>\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."},"fullyImplemented":true,"id":269,"linearizedBaseContracts":[269,386,3387,3593,3333,3363],"name":"ERC725Y","nameLocation":"1018:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1061:77:0","text":" @dev Map `bytes32` data keys to their `bytes` data values."},"id":26,"mutability":"mutable","name":"_store","nameLocation":"1178:6:0","nodeType":"VariableDeclaration","scope":269,"src":"1143:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":25,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1151:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1143:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"name":"bytes","nodeType":"ElementaryTypeName","src":"1162:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"},{"body":{"id":49,"nodeType":"Block","src":"1599:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":32,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1613:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":35,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1637:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":34,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1629:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":33,"name":"address","nodeType":"ElementaryTypeName","src":"1629:7:0","typeDescriptions":{}}},"id":36,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1629:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1613:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":42,"nodeType":"IfStatement","src":"1609:100:0","trueBody":{"id":41,"nodeType":"Block","src":"1641:68:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":38,"name":"OwnableCannotSetZeroAddressAsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"1662:34:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":40,"nodeType":"RevertStatement","src":"1655:43:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1745:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":43,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"1718:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ownable_$3333_$","typeString":"type(contract Ownable)"}},"id":45,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:18:0","memberName":"_transferOwnership","nodeType":"MemberAccess","referencedDeclaration":3332,"src":"1718:26:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1718:40:0"}]},"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"1191:361:0","text":" @notice Deploying an ERC725Y smart contract and setting address `initialOwner` as the contract owner.\n @dev Deploy a new ERC725Y contract with the provided `initialOwner` as the contract {owner}.\n @param initialOwner the owner of the contract.\n @custom:requirements\n - `initialOwner` CANNOT be the zero address."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"initialOwner","nameLocation":"1577:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1569:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"1569:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1568:22:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"1599:0:0"},"scope":269,"src":"1557:208:0","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[357],"body":{"id":63,"nodeType":"Block","src":"1925:41:0","statements":[{"expression":{"arguments":[{"id":60,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"1951:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":59,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1942:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":61,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1942:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":58,"id":62,"nodeType":"Return","src":"1935:24:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1771:39:0","text":" @inheritdoc IERC725Y"},"functionSelector":"54f6127f","id":64,"implemented":true,"kind":"function","modifiers":[],"name":"getData","nameLocation":"1824:7:0","nodeType":"FunctionDefinition","overrides":{"id":55,"nodeType":"OverrideSpecifier","overrides":[],"src":"1883:8:0"},"parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"dataKey","nameLocation":"1849:7:0","nodeType":"VariableDeclaration","scope":64,"src":"1841:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":52,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1831:31:0"},"returnParameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"dataValue","nameLocation":"1914:9:0","nodeType":"VariableDeclaration","scope":64,"src":"1901:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56,"name":"bytes","nodeType":"ElementaryTypeName","src":"1901:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1900:24:0"},"scope":269,"src":"1815:151:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[367],"body":{"id":110,"nodeType":"Block","src":"2144:330:0","statements":[{"expression":{"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":75,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"2154:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":79,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2179:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2188:6:0","memberName":"length","nodeType":"MemberAccess","src":"2179:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":78,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2167:11:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":76,"name":"bytes","nodeType":"ElementaryTypeName","src":"2171:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":77,"nodeType":"ArrayTypeName","src":"2171:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2167:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"2154:41:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":83,"nodeType":"ExpressionStatement","src":"2154:41:0"},{"body":{"id":106,"nodeType":"Block","src":"2249:191:0","statements":[{"expression":{"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":92,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"2263:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":94,"indexExpression":{"id":93,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2274:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2263:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":96,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2288:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":98,"indexExpression":{"id":97,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2297:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2288:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":95,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"2279:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2279:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"2263:37:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":101,"nodeType":"ExpressionStatement","src":"2263:37:0"},{"id":105,"nodeType":"UncheckedBlock","src":"2384:46:0","statements":[{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2412:3:0","subExpression":{"id":102,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2414:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":104,"nodeType":"ExpressionStatement","src":"2412:3:0"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":88,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2226:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":89,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2230:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:6:0","memberName":"length","nodeType":"MemberAccess","src":"2230:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2226:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":107,"initializationExpression":{"assignments":[85],"declarations":[{"constant":false,"id":85,"mutability":"mutable","name":"i","nameLocation":"2219:1:0","nodeType":"VariableDeclaration","scope":107,"src":"2211:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"2211:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":87,"initialValue":{"hexValue":"30","id":86,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2223:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2211:13:0"},"nodeType":"ForStatement","src":"2206:234:0"},{"expression":{"id":108,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"2457:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":74,"id":109,"nodeType":"Return","src":"2450:17:0"}]},"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"1972:39:0","text":" @inheritdoc IERC725Y"},"functionSelector":"dedff9c6","id":111,"implemented":true,"kind":"function","modifiers":[],"name":"getDataBatch","nameLocation":"2025:12:0","nodeType":"FunctionDefinition","overrides":{"id":70,"nodeType":"OverrideSpecifier","overrides":[],"src":"2099:8:0"},"parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68,"mutability":"mutable","name":"dataKeys","nameLocation":"2064:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2047:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":66,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2047:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":67,"nodeType":"ArrayTypeName","src":"2047:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2037:41:0"},"returnParameters":{"id":74,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"dataValues","nameLocation":"2132:10:0","nodeType":"VariableDeclaration","scope":111,"src":"2117:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":71,"name":"bytes","nodeType":"ElementaryTypeName","src":"2117:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":72,"nodeType":"ArrayTypeName","src":"2117:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"2116:27:0"},"scope":269,"src":"2016:458:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[375],"body":{"id":135,"nodeType":"Block","src":"3198:110:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":122,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3212:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3216:5:0","memberName":"value","nodeType":"MemberAccess","src":"3212:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3225:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3212:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3208:55:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":126,"name":"ERC725Y_MsgValueDisallowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3235:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3235:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":128,"nodeType":"RevertStatement","src":"3228:35:0"}},{"expression":{"arguments":[{"id":131,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"3282:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":132,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"3291:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":130,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"3273:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3273:28:0"}]},"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"2480:591:0","text":" @inheritdoc IERC725Y\n @custom:requirements\n - SHOULD only be callable by the {owner}.\n @custom:warning\n **Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value\n (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**.\n If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\n @custom:events {DataChanged} event."},"functionSelector":"7f23690c","id":136,"implemented":true,"kind":"function","modifiers":[{"id":120,"kind":"modifierInvocation","modifierName":{"id":119,"name":"onlyOwner","nameLocations":["3188:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":3252,"src":"3188:9:0"},"nodeType":"ModifierInvocation","src":"3188:9:0"}],"name":"setData","nameLocation":"3085:7:0","nodeType":"FunctionDefinition","overrides":{"id":118,"nodeType":"OverrideSpecifier","overrides":[],"src":"3179:8:0"},"parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"dataKey","nameLocation":"3110:7:0","nodeType":"VariableDeclaration","scope":136,"src":"3102:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":113,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"dataValue","nameLocation":"3140:9:0","nodeType":"VariableDeclaration","scope":136,"src":"3127:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":115,"name":"bytes","nodeType":"ElementaryTypeName","src":"3127:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3092:63:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"3198:0:0"},"scope":269,"src":"3076:232:0","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[385],"body":{"id":162,"nodeType":"Block","src":"4103:201:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":149,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4201:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4205:5:0","memberName":"value","nodeType":"MemberAccess","src":"4201:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4214:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4201:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":"@dev do not allow to send value by default when setting data in ERC725Y","id":156,"nodeType":"IfStatement","src":"4197:55:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":153,"name":"ERC725Y_MsgValueDisallowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"4224:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4224:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":155,"nodeType":"RevertStatement","src":"4217:35:0"}},{"expression":{"arguments":[{"id":158,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"4276:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":159,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"4286:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}],"id":157,"name":"_setDataBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"4262:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes32[] memory,bytes memory[] memory)"}},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":161,"nodeType":"ExpressionStatement","src":"4262:35:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3314:644:0","text":" @inheritdoc IERC725Y\n @custom:requirements\n - SHOULD only be callable by the {owner} of the contract.\n @custom:warning\n **Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value\n (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**.\n If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\n @custom:events {DataChanged} event **for each data key/value pair set**."},"functionSelector":"97902421","id":163,"implemented":true,"kind":"function","modifiers":[{"id":147,"kind":"modifierInvocation","modifierName":{"id":146,"name":"onlyOwner","nameLocations":["4093:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":3252,"src":"4093:9:0"},"nodeType":"ModifierInvocation","src":"4093:9:0"}],"name":"setDataBatch","nameLocation":"3972:12:0","nodeType":"FunctionDefinition","overrides":{"id":145,"nodeType":"OverrideSpecifier","overrides":[],"src":"4084:8:0"},"parameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"dataKeys","nameLocation":"4011:8:0","nodeType":"VariableDeclaration","scope":163,"src":"3994:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3994:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":139,"nodeType":"ArrayTypeName","src":"3994:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"dataValues","nameLocation":"4044:10:0","nodeType":"VariableDeclaration","scope":163,"src":"4029:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":141,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":142,"nodeType":"ArrayTypeName","src":"4029:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3984:76:0"},"returnParameters":{"id":148,"nodeType":"ParameterList","parameters":[],"src":"4103:0:0"},"scope":269,"src":"3963:341:0","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":175,"nodeType":"Block","src":"4903:39:0","statements":[{"expression":{"baseExpression":{"id":171,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"4920:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":173,"indexExpression":{"id":172,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"4927:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4920:15:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":170,"id":174,"nodeType":"Return","src":"4913:22:0"}]},"documentation":{"id":164,"nodeType":"StructuredDocumentation","src":"4310:484:0","text":" @dev Read the value stored under a specific `dataKey` inside the underlying ERC725Y storage,\n represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n ```solidity\n mapping(bytes32 => bytes) _store\n ```\n @param dataKey A bytes32 data key to read the associated `bytes` value from the store.\n @return dataValue The `bytes` value associated with the given `dataKey` in the ERC725Y storage."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_getData","nameLocation":"4808:8:0","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"dataKey","nameLocation":"4834:7:0","nodeType":"VariableDeclaration","scope":176,"src":"4826:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4826:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4816:31:0"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"dataValue","nameLocation":"4892:9:0","nodeType":"VariableDeclaration","scope":176,"src":"4879:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":168,"name":"bytes","nodeType":"ElementaryTypeName","src":"4879:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4878:24:0"},"scope":269,"src":"4799:143:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":195,"nodeType":"Block","src":"5594:90:0","statements":[{"expression":{"id":188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":184,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":186,"indexExpression":{"id":185,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"5611:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5604:15:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":187,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"5622:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5604:27:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":189,"nodeType":"ExpressionStatement","src":"5604:27:0"},{"eventCall":{"arguments":[{"id":191,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"5658:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":192,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"5667:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":190,"name":"DataChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"5646:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5646:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":194,"nodeType":"EmitStatement","src":"5641:36:0"}]},"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"4948:543:0","text":" @dev Write a `dataValue` to the underlying ERC725Y storage, represented as a mapping of\n `bytes32` data keys mapped to their `bytes` data values.\n ```solidity\n mapping(bytes32 => bytes) _store\n ```\n @param dataKey A bytes32 data key to write the associated `bytes` value to the store.\n @param dataValue The `bytes` value to associate with the given `dataKey` in the ERC725Y storage.\n @custom:events {DataChanged} event emitted after a successful `setData` call."},"id":196,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"5505:8:0","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"dataKey","nameLocation":"5531:7:0","nodeType":"VariableDeclaration","scope":196,"src":"5523:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5523:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":181,"mutability":"mutable","name":"dataValue","nameLocation":"5561:9:0","nodeType":"VariableDeclaration","scope":196,"src":"5548:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":180,"name":"bytes","nodeType":"ElementaryTypeName","src":"5548:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5513:63:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5594:0:0"},"scope":269,"src":"5496:188:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":248,"nodeType":"Block","src":"6442:473:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":206,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"6456:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6465:6:0","memberName":"length","nodeType":"MemberAccess","src":"6456:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":208,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"6475:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6486:6:0","memberName":"length","nodeType":"MemberAccess","src":"6475:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6456:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":215,"nodeType":"IfStatement","src":"6452:112:0","trueBody":{"id":214,"nodeType":"Block","src":"6494:70:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":211,"name":"ERC725Y_DataKeysValuesLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"6515:36:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6515:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":213,"nodeType":"RevertStatement","src":"6508:45:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":216,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"6578:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6587:6:0","memberName":"length","nodeType":"MemberAccess","src":"6578:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6578:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":224,"nodeType":"IfStatement","src":"6574:92:0","trueBody":{"id":223,"nodeType":"Block","src":"6600:66:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":220,"name":"ERC725Y_DataKeysValuesEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"6621:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6621:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":222,"nodeType":"RevertStatement","src":"6614:41:0"}]}},{"body":{"id":246,"nodeType":"Block","src":"6719:190:0","statements":[{"expression":{"arguments":[{"baseExpression":{"id":234,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"6742:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":236,"indexExpression":{"id":235,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"6751:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6742:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":237,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"6755:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":239,"indexExpression":{"id":238,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"6766:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6755:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":233,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"6733:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6733:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":241,"nodeType":"ExpressionStatement","src":"6733:36:0"},{"id":245,"nodeType":"UncheckedBlock","src":"6853:46:0","statements":[{"expression":{"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6881:3:0","subExpression":{"id":242,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"6883:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":244,"nodeType":"ExpressionStatement","src":"6881:3:0"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":229,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"6696:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":230,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"6700:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6709:6:0","memberName":"length","nodeType":"MemberAccess","src":"6700:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6696:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":247,"initializationExpression":{"assignments":[226],"declarations":[{"constant":false,"id":226,"mutability":"mutable","name":"i","nameLocation":"6689:1:0","nodeType":"VariableDeclaration","scope":247,"src":"6681:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"6681:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":228,"initialValue":{"hexValue":"30","id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6693:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6681:13:0"},"nodeType":"ForStatement","src":"6676:233:0"}]},"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"5690:631:0","text":" @dev Write a set of `dataValues` to the underlying ERC725Y storage for each associated `dataKeys`. The ERC725Y storage is\n represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n ```solidity\n mapping(bytes32 => bytes) _store\n ```\n @param dataKeys A bytes32 array of data keys to write the associated `bytes` value to the store.\n @param dataValues The `bytes` values to associate with each given `dataKeys` in the ERC725Y storage.\n @custom:events {DataChanged} event emitted for each successful data key-value pairs set."},"id":249,"implemented":true,"kind":"function","modifiers":[],"name":"_setDataBatch","nameLocation":"6335:13:0","nodeType":"FunctionDefinition","parameters":{"id":204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"dataKeys","nameLocation":"6375:8:0","nodeType":"VariableDeclaration","scope":249,"src":"6358:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6358:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":199,"nodeType":"ArrayTypeName","src":"6358:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":203,"mutability":"mutable","name":"dataValues","nameLocation":"6408:10:0","nodeType":"VariableDeclaration","scope":249,"src":"6393:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":201,"name":"bytes","nodeType":"ElementaryTypeName","src":"6393:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":202,"nodeType":"ArrayTypeName","src":"6393:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6348:76:0"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"6442:0:0"},"scope":269,"src":"6326:589:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[3386],"body":{"id":267,"nodeType":"Block","src":"7068:123:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":258,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"7097:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":259,"name":"_INTERFACEID_ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"7112:20:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"7097:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":263,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"7172:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":261,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7148:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC725Y_$269_$","typeString":"type(contract super ERC725Y)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7154:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3386,"src":"7148:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7148:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7097:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":257,"id":266,"nodeType":"Return","src":"7078:106:0"}]},"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"6921:37:0","text":" @inheritdoc ERC165"},"functionSelector":"01ffc9a7","id":268,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"6972:17:0","nodeType":"FunctionDefinition","overrides":{"id":254,"nodeType":"OverrideSpecifier","overrides":[],"src":"7044:8:0"},"parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"interfaceId","nameLocation":"7006:11:0","nodeType":"VariableDeclaration","scope":268,"src":"6999:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":251,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6999:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"6989:34:0"},"returnParameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":268,"src":"7062:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":255,"name":"bool","nodeType":"ElementaryTypeName","src":"7062:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7061:6:0"},"scope":269,"src":"6963:228:0","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":270,"src":"1009:6184:0","usedErrors":[330,333,336,339]}],"src":"39:7155:0"},"id":0},"@erc725/smart-contracts-v8/contracts/constants.sol":{"ast":{"absolutePath":"@erc725/smart-contracts-v8/contracts/constants.sol","exportedSymbols":{"OPERATION_0_CALL":[280],"OPERATION_1_CREATE":[283],"OPERATION_2_CREATE2":[286],"OPERATION_3_STATICCALL":[289],"OPERATION_4_DELEGATECALL":[292],"_INTERFACEID_ERC725X":[274],"_INTERFACEID_ERC725Y":[277]},"id":293,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":271,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:1"},{"constant":true,"id":274,"mutability":"constant","name":"_INTERFACEID_ERC725X","nameLocation":"104:20:1","nodeType":"VariableDeclaration","scope":293,"src":"88:49:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":272,"name":"bytes4","nodeType":"ElementaryTypeName","src":"88:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783735343561636163","id":273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"127:10:1","typeDescriptions":{"typeIdentifier":"t_rational_1967500460_by_1","typeString":"int_const 1967500460"},"value":"0x7545acac"},"visibility":"internal"},{"constant":true,"id":277,"mutability":"constant","name":"_INTERFACEID_ERC725Y","nameLocation":"155:20:1","nodeType":"VariableDeclaration","scope":293,"src":"139:49:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":275,"name":"bytes4","nodeType":"ElementaryTypeName","src":"139:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783632396161363934","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"178:10:1","typeDescriptions":{"typeIdentifier":"t_rational_1654302356_by_1","typeString":"int_const 1654302356"},"value":"0x629aa694"},"visibility":"internal"},{"constant":true,"id":280,"mutability":"constant","name":"OPERATION_0_CALL","nameLocation":"235:16:1","nodeType":"VariableDeclaration","scope":293,"src":"218:37:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"218:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"254:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":283,"mutability":"constant","name":"OPERATION_1_CREATE","nameLocation":"274:18:1","nodeType":"VariableDeclaration","scope":293,"src":"257:39:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"257:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"295:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":286,"mutability":"constant","name":"OPERATION_2_CREATE2","nameLocation":"315:19:1","nodeType":"VariableDeclaration","scope":293,"src":"298:40:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"298:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"337:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":289,"mutability":"constant","name":"OPERATION_3_STATICCALL","nameLocation":"357:22:1","nodeType":"VariableDeclaration","scope":293,"src":"340:43:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"340:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"382:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":292,"mutability":"constant","name":"OPERATION_4_DELEGATECALL","nameLocation":"402:24:1","nodeType":"VariableDeclaration","scope":293,"src":"385:45:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"385:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34","id":291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"429:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"internal"}],"src":"39:393:1"},"id":1},"@erc725/smart-contracts-v8/contracts/errors.sol":{"ast":{"absolutePath":"@erc725/smart-contracts-v8/contracts/errors.sol","exportedSymbols":{"ERC725X_ContractDeploymentFailed":[318],"ERC725X_CreateOperationsRequireEmptyRecipientAddress":[315],"ERC725X_ExecuteParametersEmptyArray":[327],"ERC725X_ExecuteParametersLengthMismatch":[324],"ERC725X_InsufficientBalance":[301],"ERC725X_MsgValueDisallowedInDelegateCall":[312],"ERC725X_MsgValueDisallowedInStaticCall":[309],"ERC725X_NoContractBytecodeProvided":[321],"ERC725X_UnknownOperationType":[306],"ERC725Y_DataKeysValuesEmptyArray":[333],"ERC725Y_DataKeysValuesLengthMismatch":[330],"ERC725Y_MsgValueDisallowed":[336],"OwnableCannotSetZeroAddressAsOwner":[339]},"id":340,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":294,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:2"},{"documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"64:336:2","text":" @dev Reverts when trying to send more native tokens `value` than available in current `balance`.\n @param balance The balance of native tokens of the ERC725X smart contract.\n @param value The amount of native tokens sent via `ERC725X.execute(...)`/`ERC725X.executeBatch(...)` that is greater than the contract's `balance`."},"errorSelector":"0df9a8f8","id":301,"name":"ERC725X_InsufficientBalance","nameLocation":"407:27:2","nodeType":"ErrorDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"balance","nameLocation":"443:7:2","nodeType":"VariableDeclaration","scope":301,"src":"435:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"value","nameLocation":"460:5:2","nodeType":"VariableDeclaration","scope":301,"src":"452:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"434:32:2"},"src":"401:66:2"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"469:314:2","text":" @dev Reverts when the `operationTypeProvided` is none of the default operation types available.\n (CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4)\n @param operationTypeProvided The unrecognised operation type number provided to `ERC725X.execute(...)`/`ERC725X.executeBatch(...)`."},"errorSelector":"7583b3bc","id":306,"name":"ERC725X_UnknownOperationType","nameLocation":"790:28:2","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"operationTypeProvided","nameLocation":"827:21:2","nodeType":"VariableDeclaration","scope":306,"src":"819:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:31:2"},"src":"784:66:2"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"852:282:2","text":" @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `staticcall` (`operationType == 3`).\n Sending native tokens via `staticcall` is not allowed because it is a state changing operation."},"errorSelector":"72f2bc6a","id":309,"name":"ERC725X_MsgValueDisallowedInStaticCall","nameLocation":"1141:38:2","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"1179:2:2"},"src":"1135:47:2"},{"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"1184:277:2","text":" @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `delegatecall` (`operationType == 4`).\n Sending native tokens via `staticcall` is not allowed because `msg.value` is persisting."},"errorSelector":"5ac83135","id":312,"name":"ERC725X_MsgValueDisallowedInDelegateCall","nameLocation":"1468:40:2","nodeType":"ErrorDefinition","parameters":{"id":311,"nodeType":"ParameterList","parameters":[],"src":"1508:2:2"},"src":"1462:49:2"},{"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"1513:246:2","text":" @dev Reverts when passing a `to` address that is not `address(0)` (= address zero) while deploying a contract via {execute} or {executeBatch} functions.\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"errorSelector":"3041824a","id":315,"name":"ERC725X_CreateOperationsRequireEmptyRecipientAddress","nameLocation":"1766:52:2","nodeType":"ErrorDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[],"src":"1818:2:2"},"src":"1760:61:2"},{"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"1823:181:2","text":" @dev Reverts when contract deployment failed via {execute} or {executeBatch} functions,\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"errorSelector":"0b07489b","id":318,"name":"ERC725X_ContractDeploymentFailed","nameLocation":"2011:32:2","nodeType":"ErrorDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[],"src":"2043:2:2"},"src":"2005:41:2"},{"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"2048:224:2","text":" @dev Reverts when no contract bytecode was provided as parameter when trying to deploy a contract via {execute} or {executeBatch}.\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"errorSelector":"b81cd8d9","id":321,"name":"ERC725X_NoContractBytecodeProvided","nameLocation":"2279:34:2","nodeType":"ErrorDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[],"src":"2313:2:2"},"src":"2273:43:2"},{"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"2318:208:2","text":" @dev Reverts when there is not the same number of elements in the `operationTypes`, `targets` addresses, `values`, and `datas`\n array parameters provided when calling the {executeBatch} function."},"errorSelector":"3ff55f4d","id":324,"name":"ERC725X_ExecuteParametersLengthMismatch","nameLocation":"2533:39:2","nodeType":"ErrorDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[],"src":"2572:2:2"},"src":"2527:48:2"},{"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"2577:114:2","text":" @dev Reverts when one of the array parameter provided to the {executeBatch} function is an empty array."},"errorSelector":"e9ad2b5f","id":327,"name":"ERC725X_ExecuteParametersEmptyArray","nameLocation":"2698:35:2","nodeType":"ErrorDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"2733:2:2"},"src":"2692:44:2"},{"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"2738:175:2","text":" @dev Reverts when there is not the same number of elements in the `datakeys` and `dataValues`\n array parameters provided when calling the {setDataBatch} function."},"errorSelector":"3bcc8979","id":330,"name":"ERC725Y_DataKeysValuesLengthMismatch","nameLocation":"2920:36:2","nodeType":"ErrorDefinition","parameters":{"id":329,"nodeType":"ParameterList","parameters":[],"src":"2956:2:2"},"src":"2914:45:2"},{"documentation":{"id":331,"nodeType":"StructuredDocumentation","src":"2961:110:2","text":" @dev Reverts when one of the array parameter provided to {setDataBatch} function is an empty array."},"errorSelector":"97da5f95","id":333,"name":"ERC725Y_DataKeysValuesEmptyArray","nameLocation":"3078:32:2","nodeType":"ErrorDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[],"src":"3110:2:2"},"src":"3072:41:2"},{"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"3115:87:2","text":" @dev Reverts when sending value to the {setData} or {setDataBatch} function."},"errorSelector":"f36ba737","id":336,"name":"ERC725Y_MsgValueDisallowed","nameLocation":"3209:26:2","nodeType":"ErrorDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"3235:2:2"},"src":"3203:35:2"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"3240:125:2","text":" @dev Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it."},"errorSelector":"1ad8836c","id":339,"name":"OwnableCannotSetZeroAddressAsOwner","nameLocation":"3372:34:2","nodeType":"ErrorDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"3406:2:2"},"src":"3366:43:2"}],"src":"39:3371:2"},"id":2},"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol":{"ast":{"absolutePath":"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol","exportedSymbols":{"IERC725Y":[386]},"id":387,"license":"CC0-1.0","nodeType":"SourceUnit","nodes":[{"id":341,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"36:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC725Y","contractDependencies":[],"contractKind":"interface","documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"61:322:3","text":" @title The interface for ERC725Y sub-standard, a generic data key/value store.\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."},"fullyImplemented":false,"id":386,"linearizedBaseContracts":[386],"name":"IERC725Y","nameLocation":"394:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":343,"nodeType":"StructuredDocumentation","src":"409:373:3","text":" @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n @param dataKey The data key for which a bytes value is set.\n @param dataValue The value to set for the given data key."},"eventSelector":"ece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2","id":349,"name":"DataChanged","nameLocation":"793:11:3","nodeType":"EventDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"indexed":true,"mutability":"mutable","name":"dataKey","nameLocation":"821:7:3","nodeType":"VariableDeclaration","scope":349,"src":"805:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"805:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":347,"indexed":false,"mutability":"mutable","name":"dataValue","nameLocation":"836:9:3","nodeType":"VariableDeclaration","scope":349,"src":"830:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":346,"name":"bytes","nodeType":"ElementaryTypeName","src":"830:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"804:42:3"},"src":"787:60:3"},{"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"853:361:3","text":" @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n @param dataKey The data key for which to retrieve the value.\n @return dataValue The bytes value stored under the specified data key."},"functionSelector":"54f6127f","id":357,"implemented":false,"kind":"function","modifiers":[],"name":"getData","nameLocation":"1228:7:3","nodeType":"FunctionDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"dataKey","nameLocation":"1253:7:3","nodeType":"VariableDeclaration","scope":357,"src":"1245:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1245:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1235:31:3"},"returnParameters":{"id":356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"dataValue","nameLocation":"1303:9:3","nodeType":"VariableDeclaration","scope":357,"src":"1290:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":354,"name":"bytes","nodeType":"ElementaryTypeName","src":"1290:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1289:24:3"},"scope":386,"src":"1219:95:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"1320:353:3","text":" @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n @param dataKeys The array of keys which values to retrieve\n @return dataValues The array of data stored at multiple keys"},"functionSelector":"dedff9c6","id":367,"implemented":false,"kind":"function","modifiers":[],"name":"getDataBatch","nameLocation":"1687:12:3","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"dataKeys","nameLocation":"1726:8:3","nodeType":"VariableDeclaration","scope":367,"src":"1709:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1709:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":360,"nodeType":"ArrayTypeName","src":"1709:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1699:41:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"dataValues","nameLocation":"1779:10:3","nodeType":"VariableDeclaration","scope":367,"src":"1764:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":363,"name":"bytes","nodeType":"ElementaryTypeName","src":"1764:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":364,"nodeType":"ArrayTypeName","src":"1764:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1763:27:3"},"scope":386,"src":"1678:113:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"1797:536:3","text":" @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n The function is marked as payable to enable flexibility on child contracts. For instance to implement\n a fee mechanism for setting specific data.\n @param dataKey The data key for which to set a new value.\n @param dataValue The new bytes value to set."},"functionSelector":"7f23690c","id":375,"implemented":false,"kind":"function","modifiers":[],"name":"setData","nameLocation":"2347:7:3","nodeType":"FunctionDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"dataKey","nameLocation":"2363:7:3","nodeType":"VariableDeclaration","scope":375,"src":"2355:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2355:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"dataValue","nameLocation":"2385:9:3","nodeType":"VariableDeclaration","scope":375,"src":"2372:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":371,"name":"bytes","nodeType":"ElementaryTypeName","src":"2372:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2354:41:3"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[],"src":"2412:0:3"},"scope":386,"src":"2338:75:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"2419:478:3","text":" @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n @param dataKeys An array of data keys to set bytes values for.\n @param dataValues An array of bytes values to set for each `dataKeys`."},"functionSelector":"97902421","id":385,"implemented":false,"kind":"function","modifiers":[],"name":"setDataBatch","nameLocation":"2911:12:3","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"dataKeys","nameLocation":"2950:8:3","nodeType":"VariableDeclaration","scope":385,"src":"2933:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2933:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":378,"nodeType":"ArrayTypeName","src":"2933:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":382,"mutability":"mutable","name":"dataValues","nameLocation":"2983:10:3","nodeType":"VariableDeclaration","scope":385,"src":"2968:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":380,"name":"bytes","nodeType":"ElementaryTypeName","src":"2968:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":381,"nodeType":"ArrayTypeName","src":"2968:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"2923:76:3"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[],"src":"3016:0:3"},"scope":386,"src":"2902:115:3","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":387,"src":"384:2635:3","usedErrors":[]}],"src":"36:2984:3"},"id":3},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","exportedSymbols":{"IERC165":[3593],"IERC725Y":[437]},"id":438,"license":"CC0-1.0","nodeType":"SourceUnit","nodes":[{"id":388,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"36:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":390,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":438,"sourceUnit":3594,"src":"75:80:4","symbolAliases":[{"foreign":{"id":389,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"83:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":392,"name":"IERC165","nameLocations":["502:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":3593,"src":"502:7:4"},"id":393,"nodeType":"InheritanceSpecifier","src":"502:7:4"}],"canonicalName":"IERC725Y","contractDependencies":[],"contractKind":"interface","documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"157:322:4","text":" @title The interface for ERC725Y sub-standard, a generic data key/value store.\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."},"fullyImplemented":false,"id":437,"linearizedBaseContracts":[437,3593],"name":"IERC725Y","nameLocation":"490:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"516:373:4","text":" @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n @param dataKey The data key for which a bytes value is set.\n @param dataValue The value to set for the given data key."},"eventSelector":"ece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2","id":400,"name":"DataChanged","nameLocation":"900:11:4","nodeType":"EventDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"indexed":true,"mutability":"mutable","name":"dataKey","nameLocation":"928:7:4","nodeType":"VariableDeclaration","scope":400,"src":"912:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"912:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":398,"indexed":false,"mutability":"mutable","name":"dataValue","nameLocation":"943:9:4","nodeType":"VariableDeclaration","scope":400,"src":"937:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":397,"name":"bytes","nodeType":"ElementaryTypeName","src":"937:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"911:42:4"},"src":"894:60:4"},{"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"960:361:4","text":" @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n @param dataKey The data key for which to retrieve the value.\n @return dataValue The bytes value stored under the specified data key."},"functionSelector":"54f6127f","id":408,"implemented":false,"kind":"function","modifiers":[],"name":"getData","nameLocation":"1335:7:4","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"dataKey","nameLocation":"1360:7:4","nodeType":"VariableDeclaration","scope":408,"src":"1352:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1352:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1342:31:4"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"dataValue","nameLocation":"1410:9:4","nodeType":"VariableDeclaration","scope":408,"src":"1397:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":405,"name":"bytes","nodeType":"ElementaryTypeName","src":"1397:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1396:24:4"},"scope":437,"src":"1326:95:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":409,"nodeType":"StructuredDocumentation","src":"1427:353:4","text":" @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n @param dataKeys The array of keys which values to retrieve\n @return dataValues The array of data stored at multiple keys"},"functionSelector":"dedff9c6","id":418,"implemented":false,"kind":"function","modifiers":[],"name":"getDataBatch","nameLocation":"1794:12:4","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"dataKeys","nameLocation":"1833:8:4","nodeType":"VariableDeclaration","scope":418,"src":"1816:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1816:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":411,"nodeType":"ArrayTypeName","src":"1816:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1806:41:4"},"returnParameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"dataValues","nameLocation":"1886:10:4","nodeType":"VariableDeclaration","scope":418,"src":"1871:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":414,"name":"bytes","nodeType":"ElementaryTypeName","src":"1871:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":415,"nodeType":"ArrayTypeName","src":"1871:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1870:27:4"},"scope":437,"src":"1785:113:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"1904:536:4","text":" @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n The function is marked as payable to enable flexibility on child contracts. For instance to implement\n a fee mechanism for setting specific data.\n @param dataKey The data key for which to set a new value.\n @param dataValue The new bytes value to set."},"functionSelector":"7f23690c","id":426,"implemented":false,"kind":"function","modifiers":[],"name":"setData","nameLocation":"2454:7:4","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"dataKey","nameLocation":"2470:7:4","nodeType":"VariableDeclaration","scope":426,"src":"2462:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2462:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":423,"mutability":"mutable","name":"dataValue","nameLocation":"2492:9:4","nodeType":"VariableDeclaration","scope":426,"src":"2479:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":422,"name":"bytes","nodeType":"ElementaryTypeName","src":"2479:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2461:41:4"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"2519:0:4"},"scope":437,"src":"2445:75:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"2526:478:4","text":" @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n @param dataKeys An array of data keys to set bytes values for.\n @param dataValues An array of bytes values to set for each `dataKeys`."},"functionSelector":"97902421","id":436,"implemented":false,"kind":"function","modifiers":[],"name":"setDataBatch","nameLocation":"3018:12:4","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"dataKeys","nameLocation":"3057:8:4","nodeType":"VariableDeclaration","scope":436,"src":"3040:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3040:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":429,"nodeType":"ArrayTypeName","src":"3040:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"dataValues","nameLocation":"3090:10:4","nodeType":"VariableDeclaration","scope":436,"src":"3075:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":431,"name":"bytes","nodeType":"ElementaryTypeName","src":"3075:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":432,"nodeType":"ArrayTypeName","src":"3075:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3030:76:4"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"3123:0:4"},"scope":437,"src":"3009:115:4","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":438,"src":"480:2646:4","usedErrors":[]}],"src":"36:3091:4"},"id":4},"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol":{"ast":{"absolutePath":"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol","exportedSymbols":{"ILSP1UniversalReceiver":[464]},"id":465,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":439,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"ILSP1UniversalReceiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"64:257:5","text":" @title Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\n @dev LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received."},"fullyImplemented":false,"id":464,"linearizedBaseContracts":[464],"name":"ILSP1UniversalReceiver","nameLocation":"332:22:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"361:893:5","text":" @dev Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\n @notice Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\n @param from The address of the EOA or smart contract that called the {universalReceiver(...)} function.\n @param value The amount sent to the {universalReceiver(...)} function.\n @param typeId A `bytes32` unique identifier (= _\"hook\"_)that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\n @param receivedData Any arbitrary data that was sent to the {universalReceiver(...)} function.\n @param returnedValue The value returned by the {universalReceiver(...)} function."},"eventSelector":"9c3ba68eb5742b8e3961aea0afc7371a71bf433c8a67a831803b64c064a178c2","id":453,"name":"UniversalReceiver","nameLocation":"1265:17:5","nodeType":"EventDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1308:4:5","nodeType":"VariableDeclaration","scope":453,"src":"1292:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"1292:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":445,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"1338:5:5","nodeType":"VariableDeclaration","scope":453,"src":"1322:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"1322:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":447,"indexed":true,"mutability":"mutable","name":"typeId","nameLocation":"1369:6:5","nodeType":"VariableDeclaration","scope":453,"src":"1353:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1353:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":449,"indexed":false,"mutability":"mutable","name":"receivedData","nameLocation":"1391:12:5","nodeType":"VariableDeclaration","scope":453,"src":"1385:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":448,"name":"bytes","nodeType":"ElementaryTypeName","src":"1385:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":451,"indexed":false,"mutability":"mutable","name":"returnedValue","nameLocation":"1419:13:5","nodeType":"VariableDeclaration","scope":453,"src":"1413:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":450,"name":"bytes","nodeType":"ElementaryTypeName","src":"1413:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1282:156:5"},"src":"1259:180:5"},{"documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"1445:517:5","text":" @dev Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\n @notice Reacted on received notification with `typeId` & `data`.\n @param typeId The hash of a specific standard or a hook.\n @param data The arbitrary data received with the call.\n @custom:events {UniversalReceiver} event."},"functionSelector":"6bb56a14","id":463,"implemented":false,"kind":"function","modifiers":[],"name":"universalReceiver","nameLocation":"1976:17:5","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":456,"mutability":"mutable","name":"typeId","nameLocation":"2011:6:5","nodeType":"VariableDeclaration","scope":463,"src":"2003:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2003:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"data","nameLocation":"2042:4:5","nodeType":"VariableDeclaration","scope":463,"src":"2027:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":457,"name":"bytes","nodeType":"ElementaryTypeName","src":"2027:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1993:59:5"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":463,"src":"2079:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":460,"name":"bytes","nodeType":"ElementaryTypeName","src":"2079:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2078:14:5"},"scope":464,"src":"1967:126:5","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":465,"src":"322:1773:5","usedErrors":[]}],"src":"39:2057:5"},"id":5},"@lukso/lsp1-contracts/contracts/LSP1Constants.sol":{"ast":{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Constants.sol","exportedSymbols":{"_INTERFACEID_LSP1":[469],"_INTERFACEID_LSP1_DELEGATE":[472],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY":[478],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX":[475]},"id":479,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":466,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:6"},{"constant":true,"id":469,"mutability":"constant","name":"_INTERFACEID_LSP1","nameLocation":"108:17:6","nodeType":"VariableDeclaration","scope":479,"src":"92:46:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":467,"name":"bytes4","nodeType":"ElementaryTypeName","src":"92:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783662623536613134","id":468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"128:10:6","typeDescriptions":{"typeIdentifier":"t_rational_1807051284_by_1","typeString":"int_const 1807051284"},"value":"0x6bb56a14"},"visibility":"internal"},{"constant":true,"id":472,"mutability":"constant","name":"_INTERFACEID_LSP1_DELEGATE","nameLocation":"156:26:6","nodeType":"VariableDeclaration","scope":479,"src":"140:55:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":470,"name":"bytes4","nodeType":"ElementaryTypeName","src":"140:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786132343562626461","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"185:10:6","typeDescriptions":{"typeIdentifier":"t_rational_2722479066_by_1","typeString":"int_const 2722479066"},"value":"0xa245bbda"},"visibility":"internal"},{"constant":true,"id":475,"mutability":"constant","name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nameLocation":"296:40:6","nodeType":"VariableDeclaration","scope":479,"src":"279:82:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":473,"name":"bytes10","nodeType":"ElementaryTypeName","src":"279:7:6","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30783063666335316165633337633535613464306231","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"339:22:6","typeDescriptions":{"typeIdentifier":"t_rational_61322863157712349614257_by_1","typeString":"int_const 61322863157712349614257"},"value":"0x0cfc51aec37c55a4d0b1"},"visibility":"internal"},{"constant":true,"id":478,"mutability":"constant","name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nameLocation":"427:37:6","nodeType":"VariableDeclaration","scope":479,"src":"410:123:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"410:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830636663353161656333376335356134643062316136356336323535633462663266626466363237376633636330373330633435623832386236646238623437","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"467:66:6","typeDescriptions":{"typeIdentifier":"t_rational_5873563396395204772354203425660447968463963513255343663932314865640255753031_by_1","typeString":"int_const 5873...(68 digits omitted)...3031"},"value":"0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47"},"visibility":"internal"}],"src":"39:496:6"},"id":6},"@lukso/lsp1-contracts/contracts/LSP1Utils.sol":{"ast":{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Utils.sol","exportedSymbols":{"ERC165Checker":[3581],"ILSP1":[464],"LSP1Utils":[563],"LSP2Utils":[1462],"_INTERFACEID_LSP1":[469],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY":[478],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX":[475]},"id":564,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":480,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":482,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":564,"sourceUnit":3582,"src":"77:98:7","symbolAliases":[{"foreign":{"id":481,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"90:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","file":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","id":484,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":564,"sourceUnit":1463,"src":"176:72:7","symbolAliases":[{"foreign":{"id":483,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"184:9:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol","file":"./ILSP1UniversalReceiver.sol","id":486,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":564,"sourceUnit":465,"src":"263:77:7","symbolAliases":[{"foreign":{"id":485,"name":"ILSP1UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"271:22:7","typeDescriptions":{}},"local":"ILSP1","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Constants.sol","file":"./LSP1Constants.sol","id":490,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":564,"sourceUnit":479,"src":"355:149:7","symbolAliases":[{"foreign":{"id":487,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"368:17:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":488,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"391:37:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":489,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"434:40:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LSP1Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"506:370:7","text":" @title LSP1 Utility library.\n @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n @dev LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract\n that implements LSP1 and retrieve informations related to LSP1 `typeId`.\n Based on LSP1 Universal Receiver standard."},"fullyImplemented":true,"id":563,"linearizedBaseContracts":[563],"name":"LSP1Utils","nameLocation":"885:9:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":494,"libraryName":{"id":492,"name":"ERC165Checker","nameLocations":["907:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":3581,"src":"907:13:7"},"nodeType":"UsingForDirective","src":"901:32:7","typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":518,"nodeType":"Block","src":"1487:226:7","statements":[{"condition":{"arguments":[{"id":506,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"1583:17:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":504,"name":"lsp1Implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"1514:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1533:32:7","memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":3580,"src":"1514:51:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1514:100:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":517,"nodeType":"IfStatement","src":"1497:210:7","trueBody":{"id":516,"nodeType":"Block","src":"1625:82:7","statements":[{"expression":{"arguments":[{"id":512,"name":"typeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"1683:6:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":513,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"1691:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":509,"name":"lsp1Implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"1645:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":508,"name":"ILSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"1639:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP1UniversalReceiver_$464_$","typeString":"type(contract ILSP1UniversalReceiver)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1639:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILSP1UniversalReceiver_$464","typeString":"contract ILSP1UniversalReceiver"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1665:17:7","memberName":"universalReceiver","nodeType":"MemberAccess","referencedDeclaration":463,"src":"1639:43:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes memory) payable external returns (bytes memory)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1639:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":515,"nodeType":"ExpressionStatement","src":"1639:57:7"}]}}]},"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"939:408:7","text":" @dev Notify a contract at `lsp1Implementation` address by calling its `universalReceiver` function if this contract\n supports the LSP1 interface.\n @param lsp1Implementation The address of the contract to notify.\n @param typeId A `bytes32` typeId.\n @param data Any optional data to send to the `universalReceiver` function to the `lsp1Implementation` address."},"id":519,"implemented":true,"kind":"function","modifiers":[],"name":"notifyUniversalReceiver","nameLocation":"1361:23:7","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"lsp1Implementation","nameLocation":"1402:18:7","nodeType":"VariableDeclaration","scope":519,"src":"1394:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":496,"name":"address","nodeType":"ElementaryTypeName","src":"1394:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"typeId","nameLocation":"1438:6:7","nodeType":"VariableDeclaration","scope":519,"src":"1430:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1430:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"data","nameLocation":"1467:4:7","nodeType":"VariableDeclaration","scope":519,"src":"1454:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":500,"name":"bytes","nodeType":"ElementaryTypeName","src":"1454:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1384:93:7"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"1487:0:7"},"scope":563,"src":"1352:361:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":533,"nodeType":"Block","src":"2326:77:7","statements":[{"expression":{"baseExpression":{"id":529,"name":"erc725YStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"2343:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":531,"indexExpression":{"id":530,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"2358:37:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2343:53:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":528,"id":532,"nodeType":"Return","src":"2336:60:7"}]},"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"1719:471:7","text":" @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate`.\n @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n the value set under the `LSP1UniversalReceiverDelegate` data key.\n @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n @return The bytes value stored under the `LSP1UniversalReceiverDelegate` data key."},"id":534,"implemented":true,"kind":"function","modifiers":[],"name":"getLSP1DelegateValue","nameLocation":"2204:20:7","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"erc725YStorage","nameLocation":"2268:14:7","nodeType":"VariableDeclaration","scope":534,"src":"2234:48:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":523,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2242:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2234:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":522,"name":"bytes","nodeType":"ElementaryTypeName","src":"2253:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"}],"src":"2224:64:7"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":534,"src":"2312:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":526,"name":"bytes","nodeType":"ElementaryTypeName","src":"2312:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2311:14:7"},"scope":563,"src":"2195:208:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":561,"nodeType":"Block","src":"3178:216:7","statements":[{"assignments":[547],"declarations":[{"constant":false,"id":547,"mutability":"mutable","name":"lsp1TypeIdDataKey","nameLocation":"3196:17:7","nodeType":"VariableDeclaration","scope":561,"src":"3188:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3188:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":556,"initialValue":{"arguments":[{"id":550,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"3258:40:7","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"id":553,"name":"typeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"3320:6:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3312:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":551,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3312:7:7","typeDescriptions":{}}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3312:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":548,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"3216:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1462_$","typeString":"type(library LSP2Utils)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3226:18:7","memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":952,"src":"3216:28:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3216:121:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3188:149:7"},{"expression":{"baseExpression":{"id":557,"name":"erc725YStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"3354:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":559,"indexExpression":{"id":558,"name":"lsp1TypeIdDataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"3369:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3354:33:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":545,"id":560,"nodeType":"Return","src":"3347:40:7"}]},"documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"2409:600:7","text":" @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate:<type-id>` for a specific `typeId`.\n @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n the value set under the `LSP1UniversalReceiverDelegate:<bytes32>` data key for a specific LSP1 `typeId`.\n @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n @param typeId A bytes32 LSP1 `typeId`;\n @return The bytes value stored under the `LSP1UniversalReceiverDelegate:<bytes32>` data key."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"getLSP1DelegateValueForTypeId","nameLocation":"3023:29:7","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"mutability":"mutable","name":"erc725YStorage","nameLocation":"3096:14:7","nodeType":"VariableDeclaration","scope":562,"src":"3062:48:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":538,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3070:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3062:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":537,"name":"bytes","nodeType":"ElementaryTypeName","src":"3081:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"typeId","nameLocation":"3128:6:7","nodeType":"VariableDeclaration","scope":562,"src":"3120:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3120:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3052:88:7"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":562,"src":"3164:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":543,"name":"bytes","nodeType":"ElementaryTypeName","src":"3164:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3163:14:7"},"scope":563,"src":"3014:380:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":564,"src":"877:2519:7","usedErrors":[]}],"src":"39:3358:7"},"id":7},"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol":{"ast":{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","exportedSymbols":{"_INTERFACEID_LSP17_EXTENDABLE":[568],"_INTERFACEID_LSP17_EXTENSION":[571],"_LSP17_EXTENSION_PREFIX":[574]},"id":575,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":565,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:8"},{"constant":true,"id":568,"mutability":"constant","name":"_INTERFACEID_LSP17_EXTENDABLE","nameLocation":"150:29:8","nodeType":"VariableDeclaration","scope":575,"src":"134:58:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":566,"name":"bytes4","nodeType":"ElementaryTypeName","src":"134:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786139313866613662","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"182:10:8","typeDescriptions":{"typeIdentifier":"t_rational_2836986475_by_1","typeString":"int_const 2836986475"},"value":"0xa918fa6b"},"visibility":"internal"},{"constant":true,"id":571,"mutability":"constant","name":"_INTERFACEID_LSP17_EXTENSION","nameLocation":"251:28:8","nodeType":"VariableDeclaration","scope":575,"src":"235:57:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":569,"name":"bytes4","nodeType":"ElementaryTypeName","src":"235:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786365653738623430","id":570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"282:10:8","typeDescriptions":{"typeIdentifier":"t_rational_3471280960_by_1","typeString":"int_const 3471280960"},"value":"0xcee78b40"},"visibility":"internal"},{"constant":true,"id":574,"mutability":"constant","name":"_LSP17_EXTENSION_PREFIX","nameLocation":"407:23:8","nodeType":"VariableDeclaration","scope":575,"src":"390:65:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":572,"name":"bytes10","nodeType":"ElementaryTypeName","src":"390:7:8","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30786365653738623430393464613836303131303936","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"433:22:8","typeDescriptions":{"typeIdentifier":"t_rational_977078727535809873907862_by_1","typeString":"int_const 977078727535809873907862"},"value":"0xcee78b4094da86011096"},"visibility":"internal"}],"src":"39:418:8"},"id":8},"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol":{"ast":{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol","exportedSymbols":{"InvalidExtensionAddress":[591],"InvalidFunctionSelector":[586],"NoExtensionFoundForFunctionSelector":[581]},"id":592,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":576,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:9"},{"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"64:94:9","text":" @dev reverts when there is no extension for the function selector being called with"},"errorSelector":"bb370b2b","id":581,"name":"NoExtensionFoundForFunctionSelector","nameLocation":"165:35:9","nodeType":"ErrorDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"functionSelector","nameLocation":"208:16:9","nodeType":"VariableDeclaration","scope":581,"src":"201:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":578,"name":"bytes4","nodeType":"ElementaryTypeName","src":"201:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"200:25:9"},"src":"159:67:9"},{"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"228:114:9","text":" @dev reverts when the contract is called with a function selector not valid (less than 4 bytes of data)"},"errorSelector":"e5099ee3","id":586,"name":"InvalidFunctionSelector","nameLocation":"349:23:9","nodeType":"ErrorDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"data","nameLocation":"379:4:9","nodeType":"VariableDeclaration","scope":586,"src":"373:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":583,"name":"bytes","nodeType":"ElementaryTypeName","src":"373:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"372:12:9"},"src":"343:42:9"},{"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"387:110:9","text":" @dev reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)"},"errorSelector":"42bfe79f","id":591,"name":"InvalidExtensionAddress","nameLocation":"504:23:9","nodeType":"ErrorDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"storedData","nameLocation":"534:10:9","nodeType":"VariableDeclaration","scope":591,"src":"528:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"528:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"527:18:9"},"src":"498:48:9"}],"src":"39:508:9"},"id":9},"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol":{"ast":{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol","exportedSymbols":{"ERC165":[3387],"ERC165Checker":[3581],"LSP17Extendable":[725],"NoExtensionFoundForFunctionSelector":[581],"_INTERFACEID_LSP17_EXTENDABLE":[568]},"id":726,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":593,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":595,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":726,"sourceUnit":3388,"src":"75:78:10","symbolAliases":[{"foreign":{"id":594,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"83:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":597,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":726,"sourceUnit":3582,"src":"154:98:10","symbolAliases":[{"foreign":{"id":596,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"167:13:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","file":"./LSP17Constants.sol","id":599,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":726,"sourceUnit":575,"src":"267:67:10","symbolAliases":[{"foreign":{"id":598,"name":"_INTERFACEID_LSP17_EXTENDABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"275:29:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol","file":"./LSP17Errors.sol","id":601,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":726,"sourceUnit":592,"src":"346:70:10","symbolAliases":[{"foreign":{"id":600,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"354:35:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":603,"name":"ERC165","nameLocations":["924:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":3387,"src":"924:6:10"},"id":604,"nodeType":"InheritanceSpecifier","src":"924:6:10"}],"canonicalName":"LSP17Extendable","contractDependencies":[],"contractKind":"contract","documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"418:468:10","text":" @title Module to add more functionalities to a contract using extensions.\n @dev Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard.\n This module can be inherited to extend the functionality of the parent contract when\n calling a function that doesn't exist on the parent contract via forwarding the call\n to an extension mapped to the function selector being called, set originally by the parent contract"},"fullyImplemented":false,"id":725,"linearizedBaseContracts":[725,3387,3593],"name":"LSP17Extendable","nameLocation":"905:15:10","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3386],"body":{"id":622,"nodeType":"Block","src":"1103:132:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":613,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"1132:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":614,"name":"_INTERFACEID_LSP17_EXTENDABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"1147:29:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1132:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":618,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"1216:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":616,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1192:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LSP17Extendable_$725_$","typeString":"type(contract super LSP17Extendable)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1198:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3386,"src":"1192:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1192:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1132:96:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":612,"id":621,"nodeType":"Return","src":"1113:115:10"}]},"documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"937:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":623,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1007:17:10","nodeType":"FunctionDefinition","overrides":{"id":609,"nodeType":"OverrideSpecifier","overrides":[],"src":"1079:8:10"},"parameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"interfaceId","nameLocation":"1041:11:10","nodeType":"VariableDeclaration","scope":623,"src":"1034:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":606,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1034:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1024:34:10"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":623,"src":"1097:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":610,"name":"bool","nodeType":"ElementaryTypeName","src":"1097:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1096:6:10"},"scope":725,"src":"998:237:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":654,"nodeType":"Block","src":"1774:341:10","statements":[{"assignments":[632,null],"declarations":[{"constant":false,"id":632,"mutability":"mutable","name":"erc165Extension","nameLocation":"1793:15:10","nodeType":"VariableDeclaration","scope":654,"src":"1785:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"1785:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null],"id":638,"initialValue":{"arguments":[{"expression":{"expression":{"id":634,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"1856:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165_$3387_$","typeString":"type(contract ERC165)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1863:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3386,"src":"1856:24:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1881:8:10","memberName":"selector","nodeType":"MemberAccess","src":"1856:33:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":633,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"1814:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1814:85:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"1784:115:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"erc165Extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"1913:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1940:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1932:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"1932:7:10","typeDescriptions":{}}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1913:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":647,"nodeType":"IfStatement","src":"1909:47:10","trueBody":{"expression":{"hexValue":"66616c7365","id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1951:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":630,"id":646,"nodeType":"Return","src":"1944:12:10"}},{"expression":{"arguments":[{"id":650,"name":"erc165Extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"2050:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"2083:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":648,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"1986:13:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165Checker_$3581_$","typeString":"type(library ERC165Checker)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2000:32:10","memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":3580,"src":"1986:46:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1986:122:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":630,"id":653,"nodeType":"Return","src":"1967:141:10"}]},"documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"1241:412:10","text":" @dev Returns whether the interfaceId being checked is supported in the extension of the\n {supportsInterface} selector.\n To be used by extendable contracts wishing to extend the ERC165 interfaceIds originally\n supported by reading whether the interfaceId queried is supported in the `supportsInterface`\n extension if the extension is set, if not it returns false."},"id":655,"implemented":true,"kind":"function","modifiers":[],"name":"_supportsInterfaceInERC165Extension","nameLocation":"1667:35:10","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"interfaceId","nameLocation":"1719:11:10","nodeType":"VariableDeclaration","scope":655,"src":"1712:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":625,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1712:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1702:34:10"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":655,"src":"1768:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":628,"name":"bool","nodeType":"ElementaryTypeName","src":"1768:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1767:6:10"},"scope":725,"src":"1658:457:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"2121:255:10","text":" @dev Returns the extension mapped to a specific function selector\n If no extension was found, return the address(0)\n To be overridden.\n Up to the implementer contract to return an extension based on a function selector"},"id":665,"implemented":false,"kind":"function","modifiers":[],"name":"_getExtensionAndForwardValue","nameLocation":"2390:28:10","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"functionSelector","nameLocation":"2435:16:10","nodeType":"VariableDeclaration","scope":665,"src":"2428:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":657,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2428:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2418:39:10"},"returnParameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":665,"src":"2489:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"2489:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":665,"src":"2498:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":662,"name":"bool","nodeType":"ElementaryTypeName","src":"2498:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2488:15:10"},"scope":725,"src":"2381:123:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":723,"nodeType":"Block","src":"3788:991:10","statements":[{"assignments":[674,676],"declarations":[{"constant":false,"id":674,"mutability":"mutable","name":"extension","nameLocation":"3863:9:10","nodeType":"VariableDeclaration","scope":723,"src":"3855:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"3855:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":676,"mutability":"mutable","name":"shouldForwardValue","nameLocation":"3891:18:10","nodeType":"VariableDeclaration","scope":723,"src":"3886:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":675,"name":"bool","nodeType":"ElementaryTypeName","src":"3886:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":681,"initialValue":{"arguments":[{"expression":{"id":678,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3951:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3955:3:10","memberName":"sig","nodeType":"MemberAccess","src":"3951:7:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":677,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"3922:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3922:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"3841:118:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":682,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"4019:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4040:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4032:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"4032:7:10","typeDescriptions":{}}},"id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4019:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"4015:92:10","trueBody":{"errorCall":{"arguments":[{"expression":{"id":689,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4099:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4103:3:10","memberName":"sig","nodeType":"MemberAccess","src":"4099:7:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":688,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4063:35:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4063:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":692,"nodeType":"RevertStatement","src":"4056:51:10"}},{"assignments":[695,697],"declarations":[{"constant":false,"id":695,"mutability":"mutable","name":"success","nameLocation":"4124:7:10","nodeType":"VariableDeclaration","scope":723,"src":"4119:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":694,"name":"bool","nodeType":"ElementaryTypeName","src":"4119:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"result","nameLocation":"4146:6:10","nodeType":"VariableDeclaration","scope":723,"src":"4133:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":696,"name":"bytes","nodeType":"ElementaryTypeName","src":"4133:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":715,"initialValue":{"arguments":[{"arguments":[{"id":708,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"4253:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":709,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4263:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4267:6:10","memberName":"sender","nodeType":"MemberAccess","src":"4263:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":711,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4275:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4279:5:10","memberName":"value","nodeType":"MemberAccess","src":"4275:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":706,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4236:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4240:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"4236:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4236:49:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":698,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"4156:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4166:4:10","memberName":"call","nodeType":"MemberAccess","src":"4156:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"condition":{"id":700,"name":"shouldForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"4191:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4224:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4191:34:10","trueExpression":{"expression":{"id":701,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4212:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4216:5:10","memberName":"value","nodeType":"MemberAccess","src":"4212:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4156:79:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4156:130:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4118:168:10"},{"condition":{"id":716,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"4301:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":721,"nodeType":"Block","src":"4354:419:10","statements":[{"AST":{"nodeType":"YulBlock","src":"4638:125:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4656:36:10","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4685:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4679:5:10"},"nodeType":"YulFunctionCall","src":"4679:13:10"},"variables":[{"name":"resultdata_size","nodeType":"YulTypedName","src":"4660:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4720:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4728:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4716:3:10"},"nodeType":"YulFunctionCall","src":"4716:15:10"},{"name":"resultdata_size","nodeType":"YulIdentifier","src":"4733:15:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4709:6:10"},"nodeType":"YulFunctionCall","src":"4709:40:10"},"nodeType":"YulExpressionStatement","src":"4709:40:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":697,"isOffset":false,"isSlot":false,"src":"4685:6:10","valueSize":1},{"declaration":697,"isOffset":false,"isSlot":false,"src":"4720:6:10","valueSize":1}],"id":720,"nodeType":"InlineAssembly","src":"4629:134:10"}]},"id":722,"nodeType":"IfStatement","src":"4297:476:10","trueBody":{"id":719,"nodeType":"Block","src":"4310:38:10","statements":[{"expression":{"id":717,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"4331:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":672,"id":718,"nodeType":"Return","src":"4324:13:10"}]}}]},"documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"2510:1160:10","text":" @dev Forwards the call to an extension mapped to a function selector.\n Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n called on the account. If there is no extension, the `address(0)` will be returned.\n Forwards the value if the extension is payable.\n Reverts if there is no extension for the function being called.\n If there is an extension for the function selector being called, it calls the extension with the\n `CALL` opcode, passing the `msg.data` appended with the 20 bytes of the {msg.sender} and 32 bytes of the `msg.value`.\n @custom:hint This function does not forward to the extension contract the `msg.value` received by the contract that inherits `LSP17Extendable`.\n If you would like to forward the `msg.value` to the extension contract, you can override the code of this internal function as follow:\n ```solidity\n (bool success, bytes memory result) = extension.call{value: msg.value}(\n     abi.encodePacked(callData, msg.sender, msg.value)\n );\n ```"},"id":724,"implemented":true,"kind":"function","modifiers":[],"name":"_fallbackLSP17Extendable","nameLocation":"3684:24:10","nodeType":"FunctionDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"callData","nameLocation":"3733:8:10","nodeType":"VariableDeclaration","scope":724,"src":"3718:23:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":667,"name":"bytes","nodeType":"ElementaryTypeName","src":"3718:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3708:39:10"},"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"3774:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":670,"name":"bytes","nodeType":"ElementaryTypeName","src":"3774:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3773:14:10"},"scope":725,"src":"3675:1104:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":726,"src":"887:3894:10","usedErrors":[]}],"src":"39:4743:10"},"id":10},"@lukso/lsp2-contracts/contracts/LSP2Utils.sol":{"ast":{"absolutePath":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","exportedSymbols":{"IERC725Y":[437],"LSP2Utils":[1462]},"id":1463,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":727,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:11"},{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","file":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","id":729,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1463,"sourceUnit":438,"src":"78:89:11","symbolAliases":[{"foreign":{"id":728,"name":"IERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"91:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LSP2Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"169:312:11","text":" @title LSP2 Utility library.\n @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n @dev LSP2Utils is a library of utility functions that can be used to encode data key of different key type\n defined on the LSP2 standard.\n Based on LSP2 ERC725Y JSON Schema standard."},"fullyImplemented":true,"id":1462,"linearizedBaseContracts":[1462],"name":"LSP2Utils","nameLocation":"490:9:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":745,"nodeType":"Block","src":"929:49:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":741,"name":"keyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"962:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"956:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":739,"name":"bytes","nodeType":"ElementaryTypeName","src":"956:5:11","typeDescriptions":{}}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"956:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":738,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"946:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"946:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":737,"id":744,"nodeType":"Return","src":"939:32:11"}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"506:319:11","text":" @dev Generates a data key of keyType Singleton by hashing the string `keyName`. As:\n ```\n keccak256(\"keyName\")\n ```\n @param keyName The string to hash to generate a Singleton data key.\n @return The generated `bytes32` data key of key type Singleton."},"id":746,"implemented":true,"kind":"function","modifiers":[],"name":"generateSingletonKey","nameLocation":"839:20:11","nodeType":"FunctionDefinition","parameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"keyName","nameLocation":"883:7:11","nodeType":"VariableDeclaration","scope":746,"src":"869:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":732,"name":"string","nodeType":"ElementaryTypeName","src":"869:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"859:37:11"},"returnParameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":746,"src":"920:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"920:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"919:9:11"},"scope":1462,"src":"830:148:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":794,"nodeType":"Block","src":"1548:415:11","statements":[{"assignments":[755],"declarations":[{"constant":false,"id":755,"mutability":"mutable","name":"dataKey","nameLocation":"1571:7:11","nodeType":"VariableDeclaration","scope":794,"src":"1558:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":754,"name":"bytes","nodeType":"ElementaryTypeName","src":"1558:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":760,"initialValue":{"arguments":[{"id":758,"name":"arrayKeyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"1587:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1581:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":756,"name":"bytes","nodeType":"ElementaryTypeName","src":"1581:5:11","typeDescriptions":{}}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1558:42:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":762,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"1618:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1626:6:11","memberName":"length","nodeType":"MemberAccess","src":"1618:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"32","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1636:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1618:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d555354206265206c6f6e676572207468616e20322063686172616374657273","id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1639:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1330e5505d03eb8c2f3c566a974e84b491f709354814e0b84c5b75865f42fea2","typeString":"literal_string \"MUST be longer than 2 characters\""},"value":"MUST be longer than 2 characters"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1330e5505d03eb8c2f3c566a974e84b491f709354814e0b84c5b75865f42fea2","typeString":"literal_string \"MUST be longer than 2 characters\""}],"id":761,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1610:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1610:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":768,"nodeType":"ExpressionStatement","src":"1610:64:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":770,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"1705:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":775,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":771,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"1713:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:6:11","memberName":"length","nodeType":"MemberAccess","src":"1713:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1730:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1713:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1705:27:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783562","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1736:4:11","typeDescriptions":{"typeIdentifier":"t_rational_91_by_1","typeString":"int_const 91"},"value":"0x5b"},"src":"1705:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":778,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"1783:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":783,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":779,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"1791:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1799:6:11","memberName":"length","nodeType":"MemberAccess","src":"1791:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1791:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1783:27:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783564","id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1814:4:11","typeDescriptions":{"typeIdentifier":"t_rational_93_by_1","typeString":"int_const 93"},"value":"0x5d"},"src":"1783:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1705:113:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696e6720656d7074792073717561726520627261636b65747320275b5d272061742074686520656e64206f6620746865206b6579206e616d65","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:63:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e3b6aa919fe1aff12eb32ef9916d0e70635ca417f19f845d5b01296b02b93b3","typeString":"literal_string \"Missing empty square brackets '[]' at the end of the key name\""},"value":"Missing empty square brackets '[]' at the end of the key name"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5e3b6aa919fe1aff12eb32ef9916d0e70635ca417f19f845d5b01296b02b93b3","typeString":"literal_string \"Missing empty square brackets '[]' at the end of the key name\""}],"id":769,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1684:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1684:236:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":789,"nodeType":"ExpressionStatement","src":"1684:236:11"},{"expression":{"arguments":[{"id":791,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"1948:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":790,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1938:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":753,"id":793,"nodeType":"Return","src":"1931:25:11"}]},"documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"984:459:11","text":" @dev Generates a data key of keyType Array by hashing `arrayKeyName`. As:\n ```\n keccak256(\"arrayKeyName[]\")\n ```\n @param arrayKeyName The string that will be used to generate a data key of key type Array.\n @return The generated `bytes32` data key of key type Array.\n @custom:requirements\n - The `keyName` must include at the end of the string the square brackets `\"[]\"`."},"id":795,"implemented":true,"kind":"function","modifiers":[],"name":"generateArrayKey","nameLocation":"1457:16:11","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"arrayKeyName","nameLocation":"1497:12:11","nodeType":"VariableDeclaration","scope":795,"src":"1483:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":748,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1473:42:11"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"1539:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1539:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1538:9:11"},"scope":1462,"src":"1448:515:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":825,"nodeType":"Block","src":"2592:168:11","statements":[{"assignments":[806],"declarations":[{"constant":false,"id":806,"mutability":"mutable","name":"elementInArray","nameLocation":"2615:14:11","nodeType":"VariableDeclaration","scope":825,"src":"2602:27:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":805,"name":"bytes","nodeType":"ElementaryTypeName","src":"2602:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":819,"initialValue":{"arguments":[{"arguments":[{"id":812,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"2666:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2658:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":810,"name":"bytes16","nodeType":"ElementaryTypeName","src":"2658:7:11","typeDescriptions":{}}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2658:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},{"arguments":[{"id":816,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"2697:5:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2689:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":814,"name":"bytes16","nodeType":"ElementaryTypeName","src":"2689:7:11","typeDescriptions":{}}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2689:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"},{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"expression":{"id":808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2632:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":807,"name":"bytes","nodeType":"ElementaryTypeName","src":"2632:5:11","typeDescriptions":{}}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2638:6:11","memberName":"concat","nodeType":"MemberAccess","src":"2632:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2632:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2602:111:11"},{"expression":{"arguments":[{"id":822,"name":"elementInArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2738:14:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2730:7:11","typeDescriptions":{}}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":804,"id":824,"nodeType":"Return","src":"2723:30:11"}]},"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"1969:491:11","text":" @dev Generates an Array data key at a specific `index` by concatenating together the first 16 bytes of `arrayKey`\n with the 16 bytes of `index`. As:\n ```\n arrayKey[index]\n ```\n @param arrayKey The Array data key from which to generate the Array data key at a specific `index`.\n @param index The index number in the `arrayKey`.\n @return The generated `bytes32` data key of key type Array at a specific `index`."},"id":826,"implemented":true,"kind":"function","modifiers":[],"name":"generateArrayElementKeyAtIndex","nameLocation":"2474:30:11","nodeType":"FunctionDefinition","parameters":{"id":801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"arrayKey","nameLocation":"2522:8:11","nodeType":"VariableDeclaration","scope":826,"src":"2514:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2514:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"index","nameLocation":"2548:5:11","nodeType":"VariableDeclaration","scope":826,"src":"2540:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":799,"name":"uint128","nodeType":"ElementaryTypeName","src":"2540:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2504:55:11"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"2583:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2583:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2582:9:11"},"scope":1462,"src":"2465:295:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":878,"nodeType":"Block","src":"3444:325:11","statements":[{"assignments":[837],"declarations":[{"constant":false,"id":837,"mutability":"mutable","name":"firstWordHash","nameLocation":"3462:13:11","nodeType":"VariableDeclaration","scope":878,"src":"3454:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3454:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":844,"initialValue":{"arguments":[{"arguments":[{"id":841,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"3494:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3488:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":839,"name":"bytes","nodeType":"ElementaryTypeName","src":"3488:5:11","typeDescriptions":{}}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":838,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3478:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3478:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3454:51:11"},{"assignments":[846],"declarations":[{"constant":false,"id":846,"mutability":"mutable","name":"lastWordHash","nameLocation":"3523:12:11","nodeType":"VariableDeclaration","scope":878,"src":"3515:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3515:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":853,"initialValue":{"arguments":[{"arguments":[{"id":850,"name":"lastWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"3554:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3548:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":848,"name":"bytes","nodeType":"ElementaryTypeName","src":"3548:5:11","typeDescriptions":{}}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3548:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":847,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3538:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3538:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3515:49:11"},{"assignments":[855],"declarations":[{"constant":false,"id":855,"mutability":"mutable","name":"temporaryBytes","nameLocation":"3588:14:11","nodeType":"VariableDeclaration","scope":878,"src":"3575:27:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":854,"name":"bytes","nodeType":"ElementaryTypeName","src":"3575:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":872,"initialValue":{"arguments":[{"arguments":[{"id":861,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"3639:13:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3631:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":859,"name":"bytes10","nodeType":"ElementaryTypeName","src":"3631:7:11","typeDescriptions":{}}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3631:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3674:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3667:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":863,"name":"bytes2","nodeType":"ElementaryTypeName","src":"3667:6:11","typeDescriptions":{}}},"id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3667:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":869,"name":"lastWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"3698:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3690:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":867,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3690:7:11","typeDescriptions":{}}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3690:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3605:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":856,"name":"bytes","nodeType":"ElementaryTypeName","src":"3605:5:11","typeDescriptions":{}}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3611:6:11","memberName":"concat","nodeType":"MemberAccess","src":"3605:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3605:116:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3575:146:11"},{"expression":{"arguments":[{"id":875,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"3747:14:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3739:7:11","typeDescriptions":{}}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":835,"id":877,"nodeType":"Return","src":"3732:30:11"}]},"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"2766:542:11","text":" @dev Generates a data key of key type Mapping that map `firstWord` to `lastWord`. This is done by hashing two strings words `firstWord` and `lastWord`. As:\n ```\n bytes10(firstWordHash):0000:bytes20(lastWordHash)\n ```\n @param firstWord The word to retrieve the first 10 bytes of its hash.\n @param lastWord The word to retrieve the first 10 bytes of its hash.\n @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific `lastWord`."},"id":879,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"3322:18:11","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"firstWord","nameLocation":"3364:9:11","nodeType":"VariableDeclaration","scope":879,"src":"3350:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":828,"name":"string","nodeType":"ElementaryTypeName","src":"3350:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"lastWord","nameLocation":"3397:8:11","nodeType":"VariableDeclaration","scope":879,"src":"3383:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":830,"name":"string","nodeType":"ElementaryTypeName","src":"3383:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3340:71:11"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"3435:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3435:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3434:9:11"},"scope":1462,"src":"3313:456:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":922,"nodeType":"Block","src":"4458:258:11","statements":[{"assignments":[890],"declarations":[{"constant":false,"id":890,"mutability":"mutable","name":"firstWordHash","nameLocation":"4476:13:11","nodeType":"VariableDeclaration","scope":922,"src":"4468:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":897,"initialValue":{"arguments":[{"arguments":[{"id":894,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"4508:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4502:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":892,"name":"bytes","nodeType":"ElementaryTypeName","src":"4502:5:11","typeDescriptions":{}}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":891,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4492:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4492:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4468:51:11"},{"assignments":[899],"declarations":[{"constant":false,"id":899,"mutability":"mutable","name":"temporaryBytes","nameLocation":"4543:14:11","nodeType":"VariableDeclaration","scope":922,"src":"4530:27:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":898,"name":"bytes","nodeType":"ElementaryTypeName","src":"4530:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":916,"initialValue":{"arguments":[{"arguments":[{"id":905,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"4594:13:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":903,"name":"bytes10","nodeType":"ElementaryTypeName","src":"4586:7:11","typeDescriptions":{}}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4629:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4622:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":907,"name":"bytes2","nodeType":"ElementaryTypeName","src":"4622:6:11","typeDescriptions":{}}},"id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4622:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":913,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"4653:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4645:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":911,"name":"bytes20","nodeType":"ElementaryTypeName","src":"4645:7:11","typeDescriptions":{}}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4645:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4560:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":900,"name":"bytes","nodeType":"ElementaryTypeName","src":"4560:5:11","typeDescriptions":{}}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4566:6:11","memberName":"concat","nodeType":"MemberAccess","src":"4560:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4560:108:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4530:138:11"},{"expression":{"arguments":[{"id":919,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"4694:14:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4686:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4686:7:11","typeDescriptions":{}}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4686:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":888,"id":921,"nodeType":"Return","src":"4679:30:11"}]},"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"3775:557:11","text":" @dev Generates a data key of key type Mapping that map `firstWord` to an address `addr`.\n This is done by hashing the string word `firstWord` and concatenating its first 10 bytes with `addr`. As:\n ```\n bytes10(firstWordHash):0000:<address>\n ```\n @param firstWord The word to retrieve the first 10 bytes of its hash.\n @param addr An address to map `firstWord` to.\n @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific address `addr`."},"id":923,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"4346:18:11","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"firstWord","nameLocation":"4388:9:11","nodeType":"VariableDeclaration","scope":923,"src":"4374:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":881,"name":"string","nodeType":"ElementaryTypeName","src":"4374:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"addr","nameLocation":"4415:4:11","nodeType":"VariableDeclaration","scope":923,"src":"4407:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"4407:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4364:61:11"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":923,"src":"4449:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4449:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4448:9:11"},"scope":1462,"src":"4337:379:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":951,"nodeType":"Block","src":"5320:177:11","statements":[{"assignments":[934],"declarations":[{"constant":false,"id":934,"mutability":"mutable","name":"generatedKey","nameLocation":"5343:12:11","nodeType":"VariableDeclaration","scope":951,"src":"5330:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":933,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":945,"initialValue":{"arguments":[{"id":938,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"5384:9:11","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5414:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5407:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":939,"name":"bytes2","nodeType":"ElementaryTypeName","src":"5407:6:11","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":943,"name":"bytes20Value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"5430:12:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5358:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":935,"name":"bytes","nodeType":"ElementaryTypeName","src":"5358:5:11","typeDescriptions":{}}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5364:6:11","memberName":"concat","nodeType":"MemberAccess","src":"5358:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5358:94:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5330:122:11"},{"expression":{"arguments":[{"id":948,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"5477:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5469:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5469:7:11","typeDescriptions":{}}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5469:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":932,"id":950,"nodeType":"Return","src":"5462:28:11"}]},"documentation":{"id":924,"nodeType":"StructuredDocumentation","src":"4722:470:11","text":" @dev Generate a data key of key type Mapping that map a 10 bytes `keyPrefix` to a `bytes20Value`. As:\n ```\n keyPrefix:bytes20Value\n ```\n @param keyPrefix The first part of the data key of key type Mapping.\n @param bytes20Value The second part of the data key of key type Mapping.\n @return The generated `bytes32` data key of key type Mapping that map a `keyPrefix` to a specific `bytes20Value`."},"id":952,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"5206:18:11","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"keyPrefix","nameLocation":"5242:9:11","nodeType":"VariableDeclaration","scope":952,"src":"5234:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":925,"name":"bytes10","nodeType":"ElementaryTypeName","src":"5234:7:11","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"bytes20Value","nameLocation":"5269:12:11","nodeType":"VariableDeclaration","scope":952,"src":"5261:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":927,"name":"bytes20","nodeType":"ElementaryTypeName","src":"5261:7:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"5224:63:11"},"returnParameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":952,"src":"5311:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5311:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5310:9:11"},"scope":1462,"src":"5197:300:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1010,"nodeType":"Block","src":"6379:356:11","statements":[{"assignments":[965],"declarations":[{"constant":false,"id":965,"mutability":"mutable","name":"firstWordHash","nameLocation":"6397:13:11","nodeType":"VariableDeclaration","scope":1010,"src":"6389:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6389:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":972,"initialValue":{"arguments":[{"arguments":[{"id":969,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"6429:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6423:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":967,"name":"bytes","nodeType":"ElementaryTypeName","src":"6423:5:11","typeDescriptions":{}}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6423:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":966,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6413:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6413:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6389:51:11"},{"assignments":[974],"declarations":[{"constant":false,"id":974,"mutability":"mutable","name":"secondWordHash","nameLocation":"6458:14:11","nodeType":"VariableDeclaration","scope":1010,"src":"6450:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6450:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":981,"initialValue":{"arguments":[{"arguments":[{"id":978,"name":"secondWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"6491:10:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6485:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":976,"name":"bytes","nodeType":"ElementaryTypeName","src":"6485:5:11","typeDescriptions":{}}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6485:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":975,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6475:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6475:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6450:53:11"},{"assignments":[983],"declarations":[{"constant":false,"id":983,"mutability":"mutable","name":"temporaryBytes","nameLocation":"6527:14:11","nodeType":"VariableDeclaration","scope":1010,"src":"6514:27:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":982,"name":"bytes","nodeType":"ElementaryTypeName","src":"6514:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1004,"initialValue":{"arguments":[{"arguments":[{"id":989,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"6577:13:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6570:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes6_$","typeString":"type(bytes6)"},"typeName":{"id":987,"name":"bytes6","nodeType":"ElementaryTypeName","src":"6570:6:11","typeDescriptions":{}}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6570:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},{"arguments":[{"id":993,"name":"secondWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6612:14:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6605:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":991,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6605:6:11","typeDescriptions":{}}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6605:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[{"hexValue":"30","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6648:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6641:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":995,"name":"bytes2","nodeType":"ElementaryTypeName","src":"6641:6:11","typeDescriptions":{}}},"id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6641:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":1001,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"6672:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6664:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":999,"name":"bytes20","nodeType":"ElementaryTypeName","src":"6664:7:11","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6664:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes6","typeString":"bytes6"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6544:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":984,"name":"bytes","nodeType":"ElementaryTypeName","src":"6544:5:11","typeDescriptions":{}}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6550:6:11","memberName":"concat","nodeType":"MemberAccess","src":"6544:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6544:143:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6514:173:11"},{"expression":{"arguments":[{"id":1007,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"6713:14:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6705:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6705:7:11","typeDescriptions":{}}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6705:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":963,"id":1009,"nodeType":"Return","src":"6698:30:11"}]},"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"5503:704:11","text":" @dev Generate a data key of key type MappingWithGrouping by using two strings `firstWord`\n mapped to a `secondWord` mapped itself to a specific address `addr`. As:\n ```\n bytes6(keccak256(\"firstWord\")):bytes4(keccak256(\"secondWord\")):0000:<address>\n ```\n @param firstWord The word to retrieve the first 6 bytes of its hash.\n @param secondWord The word to retrieve the first 4 bytes of its hash.\n @param addr The address that makes the last part of the MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `firstWord` to a `secondWord` to a specific address `addr`."},"id":1011,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"6221:30:11","nodeType":"FunctionDefinition","parameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"firstWord","nameLocation":"6275:9:11","nodeType":"VariableDeclaration","scope":1011,"src":"6261:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":954,"name":"string","nodeType":"ElementaryTypeName","src":"6261:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"secondWord","nameLocation":"6308:10:11","nodeType":"VariableDeclaration","scope":1011,"src":"6294:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":956,"name":"string","nodeType":"ElementaryTypeName","src":"6294:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"addr","nameLocation":"6336:4:11","nodeType":"VariableDeclaration","scope":1011,"src":"6328:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"6328:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6251:95:11"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1011,"src":"6370:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6369:9:11"},"scope":1462,"src":"6212:523:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1042,"nodeType":"Block","src":"7579:197:11","statements":[{"assignments":[1024],"declarations":[{"constant":false,"id":1024,"mutability":"mutable","name":"generatedKey","nameLocation":"7602:12:11","nodeType":"VariableDeclaration","scope":1042,"src":"7589:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1023,"name":"bytes","nodeType":"ElementaryTypeName","src":"7589:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1036,"initialValue":{"arguments":[{"id":1028,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"7643:9:11","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},{"id":1029,"name":"mapPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"7666:9:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[{"hexValue":"30","id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7696:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7689:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1030,"name":"bytes2","nodeType":"ElementaryTypeName","src":"7689:6:11","typeDescriptions":{}}},"id":1033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7689:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":1034,"name":"subMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"7712:9:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes6","typeString":"bytes6"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7617:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1025,"name":"bytes","nodeType":"ElementaryTypeName","src":"7617:5:11","typeDescriptions":{}}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7623:6:11","memberName":"concat","nodeType":"MemberAccess","src":"7617:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7617:114:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7589:142:11"},{"expression":{"arguments":[{"id":1039,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"7756:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7748:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7748:7:11","typeDescriptions":{}}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7748:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1022,"id":1041,"nodeType":"Return","src":"7741:28:11"}]},"documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"6741:676:11","text":" @dev Generate a data key of key type MappingWithGrouping that map a `keyPrefix` to an other `mapPrefix` to a specific `subMapKey`. As:\n ```\n keyPrefix:mapPrefix:0000:subMapKey\n ```\n @param keyPrefix The first part (6 bytes) of the data key of keyType MappingWithGrouping.\n @param mapPrefix The second part (4 bytes) of the data key of keyType MappingWithGrouping.\n @param subMapKey The last part (bytes20) of the data key of keyType MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix` to a `mapPrefix` to a specific `subMapKey`."},"id":1043,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"7431:30:11","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"keyPrefix","nameLocation":"7478:9:11","nodeType":"VariableDeclaration","scope":1043,"src":"7471:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"},"typeName":{"id":1013,"name":"bytes6","nodeType":"ElementaryTypeName","src":"7471:6:11","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"mapPrefix","nameLocation":"7504:9:11","nodeType":"VariableDeclaration","scope":1043,"src":"7497:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1015,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7497:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"subMapKey","nameLocation":"7531:9:11","nodeType":"VariableDeclaration","scope":1043,"src":"7523:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1017,"name":"bytes20","nodeType":"ElementaryTypeName","src":"7523:7:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"7461:85:11"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1043,"src":"7570:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7570:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7569:9:11"},"scope":1462,"src":"7422:354:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1071,"nodeType":"Block","src":"8434:177:11","statements":[{"assignments":[1054],"declarations":[{"constant":false,"id":1054,"mutability":"mutable","name":"generatedKey","nameLocation":"8457:12:11","nodeType":"VariableDeclaration","scope":1071,"src":"8444:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1053,"name":"bytes","nodeType":"ElementaryTypeName","src":"8444:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1065,"initialValue":{"arguments":[{"id":1058,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"8498:9:11","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":1061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8528:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8521:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1059,"name":"bytes2","nodeType":"ElementaryTypeName","src":"8521:6:11","typeDescriptions":{}}},"id":1062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":1063,"name":"bytes20Value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"8544:12:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8472:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1055,"name":"bytes","nodeType":"ElementaryTypeName","src":"8472:5:11","typeDescriptions":{}}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8478:6:11","memberName":"concat","nodeType":"MemberAccess","src":"8472:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8472:94:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8444:122:11"},{"expression":{"arguments":[{"id":1068,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"8591:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8583:7:11","typeDescriptions":{}}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1052,"id":1070,"nodeType":"Return","src":"8576:28:11"}]},"documentation":{"id":1044,"nodeType":"StructuredDocumentation","src":"7782:512:11","text":" @dev Generate a data key of key type MappingWithGrouping that map a 10 bytes `keyPrefix` to a specific `bytes20Value`. As:\n @param keyPrefix The first part of the data key of keyType MappingWithGrouping.\n @param bytes20Value The last of the data key of keyType MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix`\n (containing the first and second mapped word) to a specific `bytes20Value`."},"id":1072,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"8308:30:11","nodeType":"FunctionDefinition","parameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"keyPrefix","nameLocation":"8356:9:11","nodeType":"VariableDeclaration","scope":1072,"src":"8348:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":1045,"name":"bytes10","nodeType":"ElementaryTypeName","src":"8348:7:11","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"bytes20Value","nameLocation":"8383:12:11","nodeType":"VariableDeclaration","scope":1072,"src":"8375:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1047,"name":"bytes20","nodeType":"ElementaryTypeName","src":"8375:7:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"8338:63:11"},"returnParameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1072,"src":"8425:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8425:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8424:9:11"},"scope":1462,"src":"8299:312:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1112,"nodeType":"Block","src":"9017:208:11","statements":[{"assignments":[1085],"declarations":[{"constant":false,"id":1085,"mutability":"mutable","name":"hashFunctionDigest","nameLocation":"9035:18:11","nodeType":"VariableDeclaration","scope":1112,"src":"9027:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9027:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1092,"initialValue":{"arguments":[{"arguments":[{"id":1089,"name":"hashFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"9072:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1087,"name":"bytes","nodeType":"ElementaryTypeName","src":"9066:5:11","typeDescriptions":{}}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1086,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9056:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9056:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9027:59:11"},{"assignments":[1094],"declarations":[{"constant":false,"id":1094,"mutability":"mutable","name":"jsonDigest","nameLocation":"9104:10:11","nodeType":"VariableDeclaration","scope":1112,"src":"9096:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9096:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1101,"initialValue":{"arguments":[{"arguments":[{"id":1098,"name":"json","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"9133:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9127:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1096,"name":"bytes","nodeType":"ElementaryTypeName","src":"9127:5:11","typeDescriptions":{}}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9127:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1095,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9117:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9117:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9096:43:11"},{"expression":{"arguments":[{"arguments":[{"id":1106,"name":"hashFunctionDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"9181:18:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9174:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1104,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9174:6:11","typeDescriptions":{}}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9174:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1108,"name":"jsonDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"9202:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1109,"name":"url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"9214:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1102,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9157:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9161:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"9157:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9157:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1083,"id":1111,"nodeType":"Return","src":"9150:68:11"}]},"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"8617:231:11","text":" @dev Generate a JSONURL value content.\n @param hashFunction The function used to hash the JSON file.\n @param json Bytes value of the JSON file.\n @param url The URL where the JSON file is hosted."},"id":1113,"implemented":true,"kind":"function","modifiers":[],"name":"generateJSONURLValue","nameLocation":"8862:20:11","nodeType":"FunctionDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"hashFunction","nameLocation":"8906:12:11","nodeType":"VariableDeclaration","scope":1113,"src":"8892:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1074,"name":"string","nodeType":"ElementaryTypeName","src":"8892:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"json","nameLocation":"8942:4:11","nodeType":"VariableDeclaration","scope":1113,"src":"8928:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1076,"name":"string","nodeType":"ElementaryTypeName","src":"8928:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"url","nameLocation":"8970:3:11","nodeType":"VariableDeclaration","scope":1113,"src":"8956:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1078,"name":"string","nodeType":"ElementaryTypeName","src":"8956:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8882:97:11"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1113,"src":"9003:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1081,"name":"bytes","nodeType":"ElementaryTypeName","src":"9003:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9002:14:11"},"scope":1462,"src":"8853:372:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1153,"nodeType":"Block","src":"9710:214:11","statements":[{"assignments":[1126],"declarations":[{"constant":false,"id":1126,"mutability":"mutable","name":"hashFunctionDigest","nameLocation":"9728:18:11","nodeType":"VariableDeclaration","scope":1153,"src":"9720:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9720:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1133,"initialValue":{"arguments":[{"arguments":[{"id":1130,"name":"hashFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"9765:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9759:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1128,"name":"bytes","nodeType":"ElementaryTypeName","src":"9759:5:11","typeDescriptions":{}}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1127,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9749:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9749:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9720:59:11"},{"assignments":[1135],"declarations":[{"constant":false,"id":1135,"mutability":"mutable","name":"jsonDigest","nameLocation":"9797:10:11","nodeType":"VariableDeclaration","scope":1153,"src":"9789:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9789:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1142,"initialValue":{"arguments":[{"arguments":[{"id":1139,"name":"assetBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"9826:10:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9820:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1137,"name":"bytes","nodeType":"ElementaryTypeName","src":"9820:5:11","typeDescriptions":{}}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9820:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1136,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9810:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9810:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9789:49:11"},{"expression":{"arguments":[{"arguments":[{"id":1147,"name":"hashFunctionDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"9880:18:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9873:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1145,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9873:6:11","typeDescriptions":{}}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9873:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1149,"name":"jsonDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"9901:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1150,"name":"url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"9913:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1143,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9856:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9860:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"9856:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9856:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1124,"id":1152,"nodeType":"Return","src":"9849:68:11"}]},"documentation":{"id":1114,"nodeType":"StructuredDocumentation","src":"9231:303:11","text":" @dev Generate a ASSETURL value content.\n @param hashFunction The function used to hash the JSON file.\n @param assetBytes Bytes value of the JSON file.\n @param url The URL where the JSON file is hosted.\n @return The encoded value as an `ASSETURL`."},"id":1154,"implemented":true,"kind":"function","modifiers":[],"name":"generateASSETURLValue","nameLocation":"9548:21:11","nodeType":"FunctionDefinition","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"mutability":"mutable","name":"hashFunction","nameLocation":"9593:12:11","nodeType":"VariableDeclaration","scope":1154,"src":"9579:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1115,"name":"string","nodeType":"ElementaryTypeName","src":"9579:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1118,"mutability":"mutable","name":"assetBytes","nameLocation":"9629:10:11","nodeType":"VariableDeclaration","scope":1154,"src":"9615:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1117,"name":"string","nodeType":"ElementaryTypeName","src":"9615:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"url","nameLocation":"9663:3:11","nodeType":"VariableDeclaration","scope":1154,"src":"9649:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1119,"name":"string","nodeType":"ElementaryTypeName","src":"9649:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9569:103:11"},"returnParameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1154,"src":"9696:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1122,"name":"bytes","nodeType":"ElementaryTypeName","src":"9696:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9695:14:11"},"scope":1462,"src":"9539:385:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1217,"nodeType":"Block","src":"10373:1273:11","statements":[{"assignments":[1164],"declarations":[{"constant":false,"id":1164,"mutability":"mutable","name":"pointer","nameLocation":"10870:7:11","nodeType":"VariableDeclaration","scope":1217,"src":"10862:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"10862:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"documentation":" Pointer will always land on these values:\n ↓↓↓↓\n 0003 a00000\n 0005 fff83a0011\n 0020 aa0000000000000000000000000000000000000000000000000000000000cafe\n 0012 bb000000000000000000000000000000beef\n 0019 cc00000000000000000000000000000000000000000000deed\n ↑↑↑↑\n The pointer can only land on the length of the following bytes value.","id":1166,"initialValue":{"hexValue":"30","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10880:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10862:19:11"},{"body":{"id":1206,"nodeType":"Block","src":"11164:392:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1171,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"11182:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11192:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11182:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1174,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"11197:17:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11215:6:11","memberName":"length","nodeType":"MemberAccess","src":"11197:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1179,"nodeType":"IfStatement","src":"11178:57:11","trueBody":{"expression":{"hexValue":"66616c7365","id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11230:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1161,"id":1178,"nodeType":"Return","src":"11223:12:11"}},{"assignments":[1181],"declarations":[{"constant":false,"id":1181,"mutability":"mutable","name":"elementLength","nameLocation":"11257:13:11","nodeType":"VariableDeclaration","scope":1206,"src":"11249:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"11249:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1199,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"baseExpression":{"id":1188,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"11367:17:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1190,"indexExpression":{"id":1189,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"11385:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11367:26:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},{"baseExpression":{"id":1191,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"11419:17:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1195,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1192,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"11437:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11447:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11437:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11419:30:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"},{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"expression":{"id":1186,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11325:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11329:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"11325:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11325:146:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11297:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1184,"name":"bytes2","nodeType":"ElementaryTypeName","src":"11297:6:11","typeDescriptions":{}}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:192:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes2","typeString":"bytes2"}],"id":1183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11273:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1182,"name":"uint16","nodeType":"ElementaryTypeName","src":"11273:6:11","typeDescriptions":{}}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11273:230:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"11249:254:11"},{"expression":{"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1200,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"11517:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1201,"name":"elementLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"11528:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11544:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11528:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11517:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1205,"nodeType":"ExpressionStatement","src":"11517:28:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1167,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"11128:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1168,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"11138:17:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11156:6:11","memberName":"length","nodeType":"MemberAccess","src":"11138:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11128:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" Check each length byte and make sure that when you reach the last length byte.\n Make sure that the last length describes exactly the last bytes value and you do not get out of bounds.","id":1207,"nodeType":"WhileStatement","src":"11121:435:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1208,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"11569:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1209,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"11580:17:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11598:6:11","memberName":"length","nodeType":"MemberAccess","src":"11580:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11569:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1214,"nodeType":"IfStatement","src":"11565:52:11","trueBody":{"expression":{"hexValue":"74727565","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11613:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1161,"id":1213,"nodeType":"Return","src":"11606:11:11"}},{"expression":{"hexValue":"66616c7365","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11634:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1161,"id":1216,"nodeType":"Return","src":"11627:12:11"}]},"documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"9930:334:11","text":" @dev Verify if `data` is a valid array of value encoded as a `CompactBytesArray` according to the LSP2 `CompactBytesArray` valueType specification.\n @param compactBytesArray The bytes value to verify.\n @return `true` if the `data` is correctly encoded CompactBytesArray, `false` otherwise."},"id":1218,"implemented":true,"kind":"function","modifiers":[],"name":"isCompactBytesArray","nameLocation":"10278:19:11","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"compactBytesArray","nameLocation":"10320:17:11","nodeType":"VariableDeclaration","scope":1218,"src":"10307:30:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1156,"name":"bytes","nodeType":"ElementaryTypeName","src":"10307:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10297:46:11"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1218,"src":"10367:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1159,"name":"bool","nodeType":"ElementaryTypeName","src":"10367:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10366:6:11"},"scope":1462,"src":"10269:1377:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1236,"nodeType":"Block","src":"12056:104:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1226,"name":"arrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"12070:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12082:6:11","memberName":"length","nodeType":"MemberAccess","src":"12070:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3136","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12092:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12070:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1233,"nodeType":"IfStatement","src":"12066:66:11","trueBody":{"id":1232,"nodeType":"Block","src":"12096:36:11","statements":[{"expression":{"hexValue":"74727565","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12117:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1225,"id":1231,"nodeType":"Return","src":"12110:11:11"}]}},{"expression":{"hexValue":"66616c7365","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12148:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1225,"id":1235,"nodeType":"Return","src":"12141:12:11"}]},"documentation":{"id":1219,"nodeType":"StructuredDocumentation","src":"11652:293:11","text":" @dev Validates if the bytes `arrayLength` are exactly 16 bytes long, and are of the exact size of an LSP2 Array length value\n @param arrayLength Plain bytes that should be validated.\n @return `true` if the value is 16 bytes long, `false` otherwise."},"id":1237,"implemented":true,"kind":"function","modifiers":[],"name":"isValidLSP2ArrayLengthValue","nameLocation":"11959:27:11","nodeType":"FunctionDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"arrayLength","nameLocation":"12009:11:11","nodeType":"VariableDeclaration","scope":1237,"src":"11996:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1220,"name":"bytes","nodeType":"ElementaryTypeName","src":"11996:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11986:40:11"},"returnParameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1237,"src":"12050:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1223,"name":"bool","nodeType":"ElementaryTypeName","src":"12050:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12049:6:11"},"scope":1462,"src":"11950:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1310,"nodeType":"Block","src":"12894:512:11","statements":[{"expression":{"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1255,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"12904:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12929:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":1258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12915:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12919:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1257,"nodeType":"ArrayTypeName","src":"12919:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12915:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"src":"12904:27:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1262,"nodeType":"ExpressionStatement","src":"12904:27:11"},{"expression":{"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1263,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"12941:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12954:11:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":1264,"name":"bytes","nodeType":"ElementaryTypeName","src":"12958:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1265,"nodeType":"ArrayTypeName","src":"12958:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12954:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"12941:27:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1270,"nodeType":"ExpressionStatement","src":"12941:27:11"},{"expression":{"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1271,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"13043:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1273,"indexExpression":{"hexValue":"30","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13052:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13043:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1274,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"13057:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13043:22:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1276,"nodeType":"ExpressionStatement","src":"13043:22:11"},{"expression":{"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1277,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"13075:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1279,"indexExpression":{"hexValue":"30","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13086:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13075:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1282,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"13108:14:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1280,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13091:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13095:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"13091:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13091:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"13075:48:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1285,"nodeType":"ExpressionStatement","src":"13075:48:11"},{"expression":{"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1286,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"13198:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1288,"indexExpression":{"hexValue":"31","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13207:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13198:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1289,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"13212:20:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13198:34:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1291,"nodeType":"ExpressionStatement","src":"13198:34:11"},{"expression":{"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1292,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"13242:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1294,"indexExpression":{"hexValue":"31","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13253:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13242:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13258:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"13242:18:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1297,"nodeType":"ExpressionStatement","src":"13242:18:11"},{"expression":{"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1298,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"13335:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1300,"indexExpression":{"hexValue":"32","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13344:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13335:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1301,"name":"removedElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"13349:22:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13335:36:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1303,"nodeType":"ExpressionStatement","src":"13335:36:11"},{"expression":{"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1304,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"13381:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1306,"indexExpression":{"hexValue":"32","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13392:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13381:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13397:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"13381:18:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1309,"nodeType":"ExpressionStatement","src":"13381:18:11"}]},"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"12166:434:11","text":" @dev Generates Data Key/Value pairs for removing the last element from an LSP2 Array and a mapping Data Key.\n @param arrayKey The Data Key of Key Type Array.\n @param newArrayLength The new Array Length for the `arrayKey`.\n @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n @param removedElementMapKey The Data Key of a mapping to be removed."},"id":1311,"implemented":true,"kind":"function","modifiers":[],"name":"removeLastElementFromArrayAndMap","nameLocation":"12614:32:11","nodeType":"FunctionDefinition","parameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"arrayKey","nameLocation":"12664:8:11","nodeType":"VariableDeclaration","scope":1311,"src":"12656:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12656:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"newArrayLength","nameLocation":"12690:14:11","nodeType":"VariableDeclaration","scope":1311,"src":"12682:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1241,"name":"uint128","nodeType":"ElementaryTypeName","src":"12682:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"removedElementIndexKey","nameLocation":"12722:22:11","nodeType":"VariableDeclaration","scope":1311,"src":"12714:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12714:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1246,"mutability":"mutable","name":"removedElementMapKey","nameLocation":"12762:20:11","nodeType":"VariableDeclaration","scope":1311,"src":"12754:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12754:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12646:142:11"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"dataKeys","nameLocation":"12853:8:11","nodeType":"VariableDeclaration","scope":1311,"src":"12836:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12836:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1249,"nodeType":"ArrayTypeName","src":"12836:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"dataValues","nameLocation":"12878:10:11","nodeType":"VariableDeclaration","scope":1311,"src":"12863:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1251,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1252,"nodeType":"ArrayTypeName","src":"12863:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"12835:54:11"},"scope":1462,"src":"12605:801:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1460,"nodeType":"Block","src":"14506:1736:11","statements":[{"expression":{"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1334,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"14516:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"35","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14541:1:11","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14527:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1335,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14531:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1336,"nodeType":"ArrayTypeName","src":"14531:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14527:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"src":"14516:27:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1341,"nodeType":"ExpressionStatement","src":"14516:27:11"},{"expression":{"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1342,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"14553:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"35","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14578:1:11","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":1345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14566:11:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":1343,"name":"bytes","nodeType":"ElementaryTypeName","src":"14570:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1344,"nodeType":"ArrayTypeName","src":"14570:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"14553:27:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1349,"nodeType":"ExpressionStatement","src":"14553:27:11"},{"expression":{"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1350,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"14655:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1352,"indexExpression":{"hexValue":"30","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14664:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14655:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1353,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"14669:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14655:22:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1355,"nodeType":"ExpressionStatement","src":"14655:22:11"},{"expression":{"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1356,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"14687:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1358,"indexExpression":{"hexValue":"30","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14698:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14687:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1361,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"14720:14:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1359,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14703:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14707:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"14703:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14703:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"14687:48:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1364,"nodeType":"ExpressionStatement","src":"14687:48:11"},{"expression":{"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1365,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"14810:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1367,"indexExpression":{"hexValue":"31","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14819:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14810:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1368,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"14824:20:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14810:34:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1370,"nodeType":"ExpressionStatement","src":"14810:34:11"},{"expression":{"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1371,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"14854:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1373,"indexExpression":{"hexValue":"31","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14865:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14854:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14870:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"14854:18:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1376,"nodeType":"ExpressionStatement","src":"14854:18:11"},{"assignments":[1378],"declarations":[{"constant":false,"id":1378,"mutability":"mutable","name":"lastElementIndexKey","nameLocation":"14952:19:11","nodeType":"VariableDeclaration","scope":1460,"src":"14944:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14944:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1384,"initialValue":{"arguments":[{"id":1381,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"15028:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1382,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"15050:14:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1379,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"14974:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1462_$","typeString":"type(library LSP2Utils)"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14984:30:11","memberName":"generateArrayElementKeyAtIndex","nodeType":"MemberAccess","referencedDeclaration":826,"src":"14974:40:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint128_$returns$_t_bytes32_$","typeString":"function (bytes32,uint128) pure returns (bytes32)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14974:100:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14944:130:11"},{"assignments":[1386],"declarations":[{"constant":false,"id":1386,"mutability":"mutable","name":"lastElementIndexValue","nameLocation":"15169:21:11","nodeType":"VariableDeclaration","scope":1460,"src":"15161:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1385,"name":"bytes20","nodeType":"ElementaryTypeName","src":"15161:7:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"id":1394,"initialValue":{"arguments":[{"arguments":[{"id":1391,"name":"lastElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"15238:19:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1389,"name":"erc725YContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"15214:15:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$437","typeString":"contract IERC725Y"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15230:7:11","memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":408,"src":"15214:23:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view external returns (bytes memory)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15214:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15193:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1387,"name":"bytes20","nodeType":"ElementaryTypeName","src":"15193:7:11","typeDescriptions":{}}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15193:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"nodeType":"VariableDeclarationStatement","src":"15161:107:11"},{"expression":{"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1395,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"15384:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1397,"indexExpression":{"hexValue":"32","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15393:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15384:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1398,"name":"removedElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"15398:22:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15384:36:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1400,"nodeType":"ExpressionStatement","src":"15384:36:11"},{"expression":{"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1401,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"15430:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1403,"indexExpression":{"hexValue":"32","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15441:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15430:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1407,"name":"lastElementIndexValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"15459:21:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15446:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1404,"name":"bytes","nodeType":"ElementaryTypeName","src":"15446:5:11","typeDescriptions":{}}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15452:6:11","memberName":"concat","nodeType":"MemberAccess","src":"15446:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15446:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"15430:51:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1410,"nodeType":"ExpressionStatement","src":"15430:51:11"},{"expression":{"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1411,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"15555:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1413,"indexExpression":{"hexValue":"33","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15564:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15555:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1414,"name":"lastElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"15569:19:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15555:33:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1416,"nodeType":"ExpressionStatement","src":"15555:33:11"},{"expression":{"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1417,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"15598:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1419,"indexExpression":{"hexValue":"33","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15609:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15598:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15614:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"15598:18:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1422,"nodeType":"ExpressionStatement","src":"15598:18:11"},{"assignments":[1424],"declarations":[{"constant":false,"id":1424,"mutability":"mutable","name":"lastElementMapKey","nameLocation":"15697:17:11","nodeType":"VariableDeclaration","scope":1460,"src":"15689:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15689:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1433,"initialValue":{"arguments":[{"arguments":[{"id":1429,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"15767:20:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15759:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":1427,"name":"bytes10","nodeType":"ElementaryTypeName","src":"15759:7:11","typeDescriptions":{}}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15759:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"id":1431,"name":"lastElementIndexValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"15802:21:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1425,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"15717:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1462_$","typeString":"type(library LSP2Utils)"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15727:18:11","memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":952,"src":"15717:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15717:116:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15689:144:11"},{"assignments":[1435],"declarations":[{"constant":false,"id":1435,"mutability":"mutable","name":"lastElementMapValue","nameLocation":"15925:19:11","nodeType":"VariableDeclaration","scope":1460,"src":"15912:32:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1434,"name":"bytes","nodeType":"ElementaryTypeName","src":"15912:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1447,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1442,"name":"lastElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"16008:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1440,"name":"erc725YContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"15984:15:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$437","typeString":"contract IERC725Y"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16000:7:11","memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":408,"src":"15984:23:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view external returns (bytes memory)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15984:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15977:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1438,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15977:6:11","typeDescriptions":{}}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15977:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1445,"name":"removedElementIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"16041:19:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1436,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15947:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15951:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"15947:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15947:123:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"15912:158:11"},{"expression":{"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1448,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"16159:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1450,"indexExpression":{"hexValue":"34","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16168:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16159:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1451,"name":"lastElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"16173:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16159:31:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1453,"nodeType":"ExpressionStatement","src":"16159:31:11"},{"expression":{"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1454,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"16200:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1456,"indexExpression":{"hexValue":"34","id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16211:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16200:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1457,"name":"lastElementMapValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"16216:19:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16200:35:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1459,"nodeType":"ExpressionStatement","src":"16200:35:11"}]},"documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"13412:733:11","text":" @dev Generates Data Key/Value pairs for removing an element from an LSP2 Array and a mapping Data Key.\n @custom:info The function assumes that the Data Value stored under the mapping Data Key is of length 20 where the last 16 bytes are the index of the element in the array.\n @param erc725YContract The ERC725Y contract.\n @param arrayKey The Data Key of Key Type Array.\n @param newArrayLength The new Array Length for the `arrayKey`.\n @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n @param removedElementIndex the index of the removed element.\n @param removedElementMapKey The Data Key of a mapping to be removed."},"id":1461,"implemented":true,"kind":"function","modifiers":[],"name":"removeElementFromArrayAndMap","nameLocation":"14159:28:11","nodeType":"FunctionDefinition","parameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"erc725YContract","nameLocation":"14206:15:11","nodeType":"VariableDeclaration","scope":1461,"src":"14197:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$437","typeString":"contract IERC725Y"},"typeName":{"id":1314,"nodeType":"UserDefinedTypeName","pathNode":{"id":1313,"name":"IERC725Y","nameLocations":["14197:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"14197:8:11"},"referencedDeclaration":437,"src":"14197:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$437","typeString":"contract IERC725Y"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"arrayKey","nameLocation":"14239:8:11","nodeType":"VariableDeclaration","scope":1461,"src":"14231:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14231:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"newArrayLength","nameLocation":"14265:14:11","nodeType":"VariableDeclaration","scope":1461,"src":"14257:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1318,"name":"uint128","nodeType":"ElementaryTypeName","src":"14257:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"removedElementIndexKey","nameLocation":"14297:22:11","nodeType":"VariableDeclaration","scope":1461,"src":"14289:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14289:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"removedElementIndex","nameLocation":"14337:19:11","nodeType":"VariableDeclaration","scope":1461,"src":"14329:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1322,"name":"uint128","nodeType":"ElementaryTypeName","src":"14329:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1325,"mutability":"mutable","name":"removedElementMapKey","nameLocation":"14374:20:11","nodeType":"VariableDeclaration","scope":1461,"src":"14366:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14366:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14187:213:11"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"dataKeys","nameLocation":"14465:8:11","nodeType":"VariableDeclaration","scope":1461,"src":"14448:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14448:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1328,"nodeType":"ArrayTypeName","src":"14448:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"dataValues","nameLocation":"14490:10:11","nodeType":"VariableDeclaration","scope":1461,"src":"14475:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1330,"name":"bytes","nodeType":"ElementaryTypeName","src":"14475:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1331,"nodeType":"ArrayTypeName","src":"14475:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"14447:54:11"},"scope":1462,"src":"14150:2092:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1463,"src":"482:15762:11","usedErrors":[]}],"src":"39:16206:11"},"id":11},"@lukso/lsp4-contracts/contracts/LSP4Constants.sol":{"ast":{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Constants.sol","exportedSymbols":{"_LSP4_CREATORS_ARRAY_KEY":[1491],"_LSP4_CREATORS_MAP_KEY_PREFIX":[1494],"_LSP4_METADATA_KEY":[1497],"_LSP4_SUPPORTED_STANDARDS_KEY":[1476],"_LSP4_SUPPORTED_STANDARDS_VALUE":[1479],"_LSP4_TOKEN_NAME_KEY":[1482],"_LSP4_TOKEN_SYMBOL_KEY":[1485],"_LSP4_TOKEN_TYPE_COLLECTION":[1473],"_LSP4_TOKEN_TYPE_KEY":[1488],"_LSP4_TOKEN_TYPE_NFT":[1470],"_LSP4_TOKEN_TYPE_TOKEN":[1467]},"id":1498,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1464,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:12"},{"constant":true,"id":1467,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_TOKEN","nameLocation":"96:22:12","nodeType":"VariableDeclaration","scope":1498,"src":"79:43:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"79:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"121:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":1470,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_NFT","nameLocation":"141:20:12","nodeType":"VariableDeclaration","scope":1498,"src":"124:41:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"124:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"164:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":1473,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_COLLECTION","nameLocation":"184:27:12","nodeType":"VariableDeclaration","scope":1498,"src":"167:48:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"167:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"214:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":1476,"mutability":"constant","name":"_LSP4_SUPPORTED_STANDARDS_KEY","nameLocation":"356:29:12","nodeType":"VariableDeclaration","scope":1498,"src":"339:115:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"339:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865616665633464383966613936313938383462363030303061346439363632346133386637616332643864396136303465636630376331326337376534383063","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"388:66:12","typeDescriptions":{"typeIdentifier":"t_rational_106291344305384829327323777171026204092068863755428044681309751323096797562892_by_1","typeString":"int_const 1062...(70 digits omitted)...2892"},"value":"0xeafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c"},"visibility":"internal"},{"constant":true,"id":1479,"mutability":"constant","name":"_LSP4_SUPPORTED_STANDARDS_VALUE","nameLocation":"513:31:12","nodeType":"VariableDeclaration","scope":1498,"src":"498:62:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1477,"name":"bytes","nodeType":"ElementaryTypeName","src":"498:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"hexValue":"a4d96624","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"547:13:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_8031d7c868dca389fb4e96c3f4df5650d21c8966ab67d753610d01e72b8a0278","typeString":"literal_string hex\"a4d96624\""}},"visibility":"internal"},{"constant":true,"id":1482,"mutability":"constant","name":"_LSP4_TOKEN_NAME_KEY","nameLocation":"610:20:12","nodeType":"VariableDeclaration","scope":1498,"src":"593:106:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"593:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307864656261316532393266386261383832333865313061623363376638386264346265346661633536636164353139346236656363656166363533343638616631","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"633:66:12","typeDescriptions":{"typeIdentifier":"t_rational_100742294102289264549068743044138917200237013684961480918773254279156963117809_by_1","typeString":"int_const 1007...(70 digits omitted)...7809"},"value":"0xdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1"},"visibility":"internal"},{"constant":true,"id":1485,"mutability":"constant","name":"_LSP4_TOKEN_SYMBOL_KEY","nameLocation":"751:22:12","nodeType":"VariableDeclaration","scope":1498,"src":"734:108:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"734:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307832663061363861623037373638653031393433613539396537333336326130653137613633613732653934646432653338346432633164346462393332373536","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"776:66:12","typeDescriptions":{"typeIdentifier":"t_rational_21277094746618207019470167271284656117398221945515764204453433194201650243414_by_1","typeString":"int_const 2127...(69 digits omitted)...3414"},"value":"0x2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756"},"visibility":"internal"},{"constant":true,"id":1488,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_KEY","nameLocation":"892:20:12","nodeType":"VariableDeclaration","scope":1498,"src":"875:106:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"875:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865303236316661393564623265623362353433396264303333636461363664353662393666393266323433613832323866643837353530656437626466646233","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"915:66:12","typeDescriptions":{"typeIdentifier":"t_rational_101385436791348632936915532486413845551797772917774025249609027894947960716723_by_1","typeString":"int_const 1013...(70 digits omitted)...6723"},"value":"0xe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb3"},"visibility":"internal"},{"constant":true,"id":1491,"mutability":"constant","name":"_LSP4_CREATORS_ARRAY_KEY","nameLocation":"1032:24:12","nodeType":"VariableDeclaration","scope":1498,"src":"1015:110:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1015:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307831313462643033623361343664343837353936383064383165626232623431346664613764303330613731303561383531383637616363663163323335326537","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1059:66:12","typeDescriptions":{"typeIdentifier":"t_rational_7823269115788143993216587392684831921119603420524855766908370213719800763111_by_1","typeString":"int_const 7823...(68 digits omitted)...3111"},"value":"0x114bd03b3a46d48759680d81ebb2b414fda7d030a7105a851867accf1c2352e7"},"visibility":"internal"},{"constant":true,"id":1494,"mutability":"constant","name":"_LSP4_CREATORS_MAP_KEY_PREFIX","nameLocation":"1186:29:12","nodeType":"VariableDeclaration","scope":1498,"src":"1169:71:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":1492,"name":"bytes10","nodeType":"ElementaryTypeName","src":"1169:7:12","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30783664653835656166356439383262346535646130","id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1218:22:12","typeDescriptions":{"typeIdentifier":"t_rational_519024414032760576826784_by_1","typeString":"int_const 519024414032760576826784"},"value":"0x6de85eaf5d982b4e5da0"},"visibility":"internal"},{"constant":true,"id":1497,"mutability":"constant","name":"_LSP4_METADATA_KEY","nameLocation":"1289:18:12","nodeType":"VariableDeclaration","scope":1498,"src":"1272:104:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1272:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839616662393563616363396639353835386563343461613863336236383535313130303265333061653534343135383233663430363132386238356232333865","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1310:66:12","typeDescriptions":{"typeIdentifier":"t_rational_70100691122746653413313834938425876827577001362390431744658469452576166978446_by_1","typeString":"int_const 7010...(69 digits omitted)...8446"},"value":"0x9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e"},"visibility":"internal"}],"src":"39:1339:12"},"id":12},"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol":{"ast":{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol","exportedSymbols":{"ERC725Y":[269],"LSP4DigitalAssetMetadata":[1614],"LSP4TokenNameNotEditable":[1619],"LSP4TokenSymbolNotEditable":[1622],"LSP4TokenTypeNotEditable":[1625],"_LSP4_SUPPORTED_STANDARDS_KEY":[1476],"_LSP4_SUPPORTED_STANDARDS_VALUE":[1479],"_LSP4_TOKEN_NAME_KEY":[1482],"_LSP4_TOKEN_SYMBOL_KEY":[1485],"_LSP4_TOKEN_TYPE_KEY":[1488]},"id":1615,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1499,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:13"},{"absolutePath":"@erc725/smart-contracts-v8/contracts/ERC725Y.sol","file":"@erc725/smart-contracts-v8/contracts/ERC725Y.sol","id":1501,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1615,"sourceUnit":270,"src":"75:73:13","symbolAliases":[{"foreign":{"id":1500,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"83:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Constants.sol","file":"./LSP4Constants.sol","id":1507,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1615,"sourceUnit":1498,"src":"163:189:13","symbolAliases":[{"foreign":{"id":1502,"name":"_LSP4_SUPPORTED_STANDARDS_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"176:29:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1503,"name":"_LSP4_SUPPORTED_STANDARDS_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"211:31:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1504,"name":"_LSP4_TOKEN_NAME_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"248:20:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1505,"name":"_LSP4_TOKEN_SYMBOL_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"274:22:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1506,"name":"_LSP4_TOKEN_TYPE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"302:20:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Errors.sol","file":"./LSP4Errors.sol","id":1511,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1615,"sourceUnit":1626,"src":"364:126:13","symbolAliases":[{"foreign":{"id":1508,"name":"LSP4TokenNameNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"377:24:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1509,"name":"LSP4TokenSymbolNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"407:26:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1510,"name":"LSP4TokenTypeNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"439:24:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1513,"name":"ERC725Y","nameLocations":["793:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":269,"src":"793:7:13"},"id":1514,"nodeType":"InheritanceSpecifier","src":"793:7:13"}],"canonicalName":"LSP4DigitalAssetMetadata","contractDependencies":[],"contractKind":"contract","documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"492:254:13","text":" @title Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\n @author Matthew Stevens\n @dev Standard Implementation of the LSP4 standard."},"fullyImplemented":true,"id":1614,"linearizedBaseContracts":[1614,269,386,3387,3593,3333,3363],"name":"LSP4DigitalAssetMetadata","nameLocation":"765:24:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1566,"nodeType":"Block","src":"1351:396:13","statements":[{"expression":{"arguments":[{"id":1532,"name":"_LSP4_SUPPORTED_STANDARDS_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1451:29:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1533,"name":"_LSP4_SUPPORTED_STANDARDS_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"1494:31:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1529,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1421:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725Y_$269_$","typeString":"type(contract ERC725Y)"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1429:8:13","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":196,"src":"1421:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1421:114:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1535,"nodeType":"ExpressionStatement","src":"1421:114:13"},{"expression":{"arguments":[{"id":1539,"name":"_LSP4_TOKEN_NAME_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"1563:20:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1542,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"1591:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1585:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1540,"name":"bytes","nodeType":"ElementaryTypeName","src":"1585:5:13","typeDescriptions":{}}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1585:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1536,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1546:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725Y_$269_$","typeString":"type(contract ERC725Y)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1554:8:13","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":196,"src":"1546:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1546:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1545,"nodeType":"ExpressionStatement","src":"1546:52:13"},{"expression":{"arguments":[{"id":1549,"name":"_LSP4_TOKEN_SYMBOL_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"1625:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1552,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"1655:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1649:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1550,"name":"bytes","nodeType":"ElementaryTypeName","src":"1649:5:13","typeDescriptions":{}}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1546,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1608:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725Y_$269_$","typeString":"type(contract ERC725Y)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1616:8:13","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":196,"src":"1608:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1608:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1555,"nodeType":"ExpressionStatement","src":"1608:56:13"},{"expression":{"arguments":[{"id":1559,"name":"_LSP4_TOKEN_TYPE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"1691:20:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1562,"name":"lsp4TokenType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"1724:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1560,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1713:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1717:6:13","memberName":"encode","nodeType":"MemberAccess","src":"1713:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1713:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1556,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1674:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725Y_$269_$","typeString":"type(contract ERC725Y)"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1682:8:13","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":196,"src":"1674:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1674:66:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1565,"nodeType":"ExpressionStatement","src":"1674:66:13"}]},"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"807:375:13","text":" @notice Deploying a digital asset `name_` with the `symbol_` symbol.\n @param name_ The name of the token.\n @param symbol_ The symbol of the token.\n @param initialOwner_ The owner of the token contract.\n @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection)."},"id":1567,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1526,"name":"initialOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"1336:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1527,"kind":"baseConstructorSpecifier","modifierName":{"id":1525,"name":"ERC725Y","nameLocations":["1328:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":269,"src":"1328:7:13"},"nodeType":"ModifierInvocation","src":"1328:22:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"name_","nameLocation":"1222:5:13","nodeType":"VariableDeclaration","scope":1567,"src":"1208:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1516,"name":"string","nodeType":"ElementaryTypeName","src":"1208:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"symbol_","nameLocation":"1251:7:13","nodeType":"VariableDeclaration","scope":1567,"src":"1237:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1518,"name":"string","nodeType":"ElementaryTypeName","src":"1237:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"initialOwner_","nameLocation":"1276:13:13","nodeType":"VariableDeclaration","scope":1567,"src":"1268:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"1268:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1523,"mutability":"mutable","name":"lsp4TokenType_","nameLocation":"1307:14:13","nodeType":"VariableDeclaration","scope":1567,"src":"1299:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1198:129:13"},"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[],"src":"1351:0:13"},"scope":1614,"src":"1187:560:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[196],"body":{"id":1612,"nodeType":"Block","src":"2042:426:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1576,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2056:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1577,"name":"_LSP4_TOKEN_NAME_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"2067:20:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2056:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1583,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2157:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1584,"name":"_LSP4_TOKEN_SYMBOL_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"2168:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2157:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1590,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2262:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1591,"name":"_LSP4_TOKEN_TYPE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"2273:20:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2262:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1608,"nodeType":"Block","src":"2359:103:13","statements":[{"expression":{"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1597,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2373:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":1599,"indexExpression":{"id":1598,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2380:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2373:15:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1600,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2391:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"2373:27:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":1602,"nodeType":"ExpressionStatement","src":"2373:27:13"},{"eventCall":{"arguments":[{"id":1604,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2432:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1605,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2441:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1603,"name":"DataChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"2420:11:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1607,"nodeType":"EmitStatement","src":"2415:36:13"}]},"id":1609,"nodeType":"IfStatement","src":"2258:204:13","trueBody":{"id":1596,"nodeType":"Block","src":"2295:58:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1593,"name":"LSP4TokenTypeNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"2316:24:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1595,"nodeType":"RevertStatement","src":"2309:33:13"}]}},"id":1610,"nodeType":"IfStatement","src":"2153:309:13","trueBody":{"id":1589,"nodeType":"Block","src":"2192:60:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1586,"name":"LSP4TokenSymbolNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"2213:26:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2213:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1588,"nodeType":"RevertStatement","src":"2206:35:13"}]}},"id":1611,"nodeType":"IfStatement","src":"2052:410:13","trueBody":{"id":1582,"nodeType":"Block","src":"2089:58:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1579,"name":"LSP4TokenNameNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"2110:24:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2110:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1581,"nodeType":"RevertStatement","src":"2103:33:13"}]}}]},"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"1753:177:13","text":" @dev The ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol` cannot be changed\n via this function once the digital asset contract has been deployed."},"id":1613,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"1944:8:13","nodeType":"FunctionDefinition","overrides":{"id":1574,"nodeType":"OverrideSpecifier","overrides":[],"src":"2033:8:13"},"parameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"dataKey","nameLocation":"1970:7:13","nodeType":"VariableDeclaration","scope":1613,"src":"1962:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1962:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"dataValue","nameLocation":"2000:9:13","nodeType":"VariableDeclaration","scope":1613,"src":"1987:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1571,"name":"bytes","nodeType":"ElementaryTypeName","src":"1987:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1952:63:13"},"returnParameters":{"id":1575,"nodeType":"ParameterList","parameters":[],"src":"2042:0:13"},"scope":1614,"src":"1935:533:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1615,"src":"747:1723:13","usedErrors":[330,333,336,339,1619,1622,1625]}],"src":"39:2432:13"},"id":13},"@lukso/lsp4-contracts/contracts/LSP4Errors.sol":{"ast":{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Errors.sol","exportedSymbols":{"LSP4TokenNameNotEditable":[1619],"LSP4TokenSymbolNotEditable":[1622],"LSP4TokenTypeNotEditable":[1625]},"id":1626,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1616,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:14"},{"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"64:379:14","text":" @dev Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized.\n The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized."},"errorSelector":"85c169bd","id":1619,"name":"LSP4TokenNameNotEditable","nameLocation":"450:24:14","nodeType":"ErrorDefinition","parameters":{"id":1618,"nodeType":"ParameterList","parameters":[],"src":"474:2:14"},"src":"444:33:14"},{"documentation":{"id":1620,"nodeType":"StructuredDocumentation","src":"479:383:14","text":" @dev Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized.\n The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized."},"errorSelector":"76755b38","id":1622,"name":"LSP4TokenSymbolNotEditable","nameLocation":"869:26:14","nodeType":"ErrorDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[],"src":"895:2:14"},"src":"863:35:14"},{"documentation":{"id":1623,"nodeType":"StructuredDocumentation","src":"900:381:14","text":" @dev Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized.\n The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized."},"errorSelector":"4ef6d7fb","id":1625,"name":"LSP4TokenTypeNotEditable","nameLocation":"1288:24:14","nodeType":"ErrorDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[],"src":"1312:2:14"},"src":"1282:33:14"}],"src":"39:1277:14"},"id":14},"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol":{"ast":{"absolutePath":"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol","exportedSymbols":{"ILSP7DigitalAsset":[1792]},"id":1793,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1627,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"ILSP7DigitalAsset","contractDependencies":[],"contractKind":"interface","documentation":{"id":1628,"nodeType":"StructuredDocumentation","src":"64:91:15","text":" @title Interface of the LSP7 - Digital Asset standard, a fungible digital asset."},"fullyImplemented":false,"id":1792,"linearizedBaseContracts":[1792],"name":"ILSP7DigitalAsset","nameLocation":"166:17:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1629,"nodeType":"StructuredDocumentation","src":"209:693:15","text":" @dev Emitted when the `from` transferred successfully `amount` of tokens to `to`.\n @param operator The address of the operator that executed the transfer.\n @param from The address which tokens were sent from (balance decreased by `-amount`).\n @param to The address that received the tokens (balance increased by `+amount`).\n @param amount The amount of tokens transferred.\n @param force if the transferred enforced the `to` recipient address to be a contract that implements the LSP1 standard or not.\n @param data Any additional data included by the caller during the transfer, and sent in the LSP1 hooks to the `from` and `to` addresses."},"eventSelector":"3997e418d2cef0b3b0e907b1e39605c3f7d32dbd061e82ea5b4a770d46a160a6","id":1643,"name":"Transfer","nameLocation":"913:8:15","nodeType":"EventDefinition","parameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"947:8:15","nodeType":"VariableDeclaration","scope":1643,"src":"931:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1630,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1633,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"981:4:15","nodeType":"VariableDeclaration","scope":1643,"src":"965:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"965:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1635,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1011:2:15","nodeType":"VariableDeclaration","scope":1643,"src":"995:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1634,"name":"address","nodeType":"ElementaryTypeName","src":"995:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1637,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1031:6:15","nodeType":"VariableDeclaration","scope":1643,"src":"1023:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1639,"indexed":false,"mutability":"mutable","name":"force","nameLocation":"1052:5:15","nodeType":"VariableDeclaration","scope":1643,"src":"1047:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1638,"name":"bool","nodeType":"ElementaryTypeName","src":"1047:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1641,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"1073:4:15","nodeType":"VariableDeclaration","scope":1643,"src":"1067:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1640,"name":"bytes","nodeType":"ElementaryTypeName","src":"1067:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"921:162:15"},"src":"907:177:15"},{"anonymous":false,"documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"1090:371:15","text":" @dev Emitted when `tokenOwner` enables `operator` for `amount` tokens.\n @param operator The address authorized as an operator\n @param tokenOwner The token owner\n @param amount The amount of tokens `operator` address has access to from `tokenOwner`\n @param operatorNotificationData The data to notify the operator about via LSP1."},"eventSelector":"f772a43bfdf4729b196e3fb54a818b91a2ca6c49d10b2e16278752f9f515c25d","id":1654,"name":"OperatorAuthorizationChanged","nameLocation":"1472:28:15","nodeType":"EventDefinition","parameters":{"id":1653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1526:8:15","nodeType":"VariableDeclaration","scope":1654,"src":"1510:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1645,"name":"address","nodeType":"ElementaryTypeName","src":"1510:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1648,"indexed":true,"mutability":"mutable","name":"tokenOwner","nameLocation":"1560:10:15","nodeType":"VariableDeclaration","scope":1654,"src":"1544:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1647,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1650,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"1596:6:15","nodeType":"VariableDeclaration","scope":1654,"src":"1580:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1649,"name":"uint256","nodeType":"ElementaryTypeName","src":"1580:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1652,"indexed":false,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"1618:24:15","nodeType":"VariableDeclaration","scope":1654,"src":"1612:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1651,"name":"bytes","nodeType":"ElementaryTypeName","src":"1612:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1500:148:15"},"src":"1466:183:15"},{"anonymous":false,"documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"1655:409:15","text":" @dev Emitted when `tokenOwner` disables `operator` for `amount` tokens and set its {`authorizedAmountFor(...)`} to `0`.\n @param operator The address revoked from operating\n @param tokenOwner The token owner\n @param notified Bool indicating whether the operator has been notified or not\n @param operatorNotificationData The data to notify the operator about via LSP1."},"eventSelector":"0ebf5762d8855cbe012d2ca42fb33a81175e17c8a8751f8859931ba453bd4167","id":1665,"name":"OperatorRevoked","nameLocation":"2075:15:15","nodeType":"EventDefinition","parameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"2116:8:15","nodeType":"VariableDeclaration","scope":1665,"src":"2100:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"2100:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"indexed":true,"mutability":"mutable","name":"tokenOwner","nameLocation":"2150:10:15","nodeType":"VariableDeclaration","scope":1665,"src":"2134:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"2134:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1661,"indexed":true,"mutability":"mutable","name":"notified","nameLocation":"2183:8:15","nodeType":"VariableDeclaration","scope":1665,"src":"2170:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1660,"name":"bool","nodeType":"ElementaryTypeName","src":"2170:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1663,"indexed":false,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"2207:24:15","nodeType":"VariableDeclaration","scope":1665,"src":"2201:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1662,"name":"bytes","nodeType":"ElementaryTypeName","src":"2201:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2090:147:15"},"src":"2069:169:15"},{"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"2270:578:15","text":" @dev Returns the number of decimals used to get its user representation.\n If the asset contract has been set to be non-divisible via the `isNonDivisible_` parameter in\n the `constructor`, the decimals returned will be `0`. Otherwise `18` is the common value.\n @custom:notice This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {balanceOf} and {transfer}.\n @return the number of decimals. If `0` is returned, the asset is non-divisible."},"functionSelector":"313ce567","id":1671,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2862:8:15","nodeType":"FunctionDefinition","parameters":{"id":1667,"nodeType":"ParameterList","parameters":[],"src":"2870:2:15"},"returnParameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1671,"src":"2896:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1668,"name":"uint8","nodeType":"ElementaryTypeName","src":"2896:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2895:7:15"},"scope":1792,"src":"2853:50:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1672,"nodeType":"StructuredDocumentation","src":"2909:147:15","text":" @dev Returns the number of existing tokens that have been minted in this contract.\n @return The number of existing tokens."},"functionSelector":"18160ddd","id":1677,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3070:11:15","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[],"src":"3081:2:15"},"returnParameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1677,"src":"3107:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1674,"name":"uint256","nodeType":"ElementaryTypeName","src":"3107:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3106:9:15"},"scope":1792,"src":"3061:55:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1678,"nodeType":"StructuredDocumentation","src":"3154:546:15","text":" @dev Get the number of tokens owned by `tokenOwner`.\n If the token is divisible (the {decimals} function returns `18`), the amount returned should be divided\n by 1e18 to get a better picture of the actual balance of the `tokenOwner`.\n _Example:_\n ```\n balanceOf(someAddress) -> 42_000_000_000_000_000_000 / 1e18 = 42 tokens\n ```\n @param tokenOwner The address of the token holder to query the balance for.\n @return The amount of tokens owned by `tokenOwner`."},"functionSelector":"70a08231","id":1685,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3714:9:15","nodeType":"FunctionDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1680,"mutability":"mutable","name":"tokenOwner","nameLocation":"3732:10:15","nodeType":"VariableDeclaration","scope":1685,"src":"3724:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1679,"name":"address","nodeType":"ElementaryTypeName","src":"3724:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3723:20:15"},"returnParameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1685,"src":"3767:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1682,"name":"uint256","nodeType":"ElementaryTypeName","src":"3767:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3766:9:15"},"scope":1792,"src":"3705:71:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1686,"nodeType":"StructuredDocumentation","src":"3817:692:15","text":" @dev Sets an `amount` of tokens that an `operator` has access from the caller's balance (allowance). See {authorizedAmountFor}.\n Notify the operator based on the LSP1-UniversalReceiver standard\n @param operator The address to authorize as an operator.\n @param amount The allowance amount of tokens operator has access to.\n @param operatorNotificationData The data to notify the operator about via LSP1.\n @custom:requirements\n - `operator` cannot be the zero address.\n @custom:events {OperatorAuthorizationChanged} when allowance is given to a new operator or\n an existing operator's allowance is updated."},"functionSelector":"b49506fd","id":1695,"implemented":false,"kind":"function","modifiers":[],"name":"authorizeOperator","nameLocation":"4523:17:15","nodeType":"FunctionDefinition","parameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"operator","nameLocation":"4558:8:15","nodeType":"VariableDeclaration","scope":1695,"src":"4550:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1687,"name":"address","nodeType":"ElementaryTypeName","src":"4550:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1690,"mutability":"mutable","name":"amount","nameLocation":"4584:6:15","nodeType":"VariableDeclaration","scope":1695,"src":"4576:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"4576:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1692,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"4613:24:15","nodeType":"VariableDeclaration","scope":1695,"src":"4600:37:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1691,"name":"bytes","nodeType":"ElementaryTypeName","src":"4600:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4540:103:15"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[],"src":"4652:0:15"},"scope":1792,"src":"4514:139:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1696,"nodeType":"StructuredDocumentation","src":"4659:794:15","text":" @dev Enables `tokenOwner` to remove `operator` for its tokens, disallowing it to send any amount of tokens on its behalf.\n This function also allows the `operator` to remove itself if it is the caller of this function\n @param operator The address to revoke as an operator.\n @param tokenOwner The address of the token owner.\n @param notify Boolean indicating whether to notify the operator or not.\n @param operatorNotificationData The data to notify the operator about via LSP1.\n @custom:requirements\n - caller MUST be `operator` or `tokenOwner`\n - `operator` cannot be the zero address.\n @custom:events {OperatorRevoked} event with address of the operator being revoked for the caller (token holder)."},"functionSelector":"30d0dc37","id":1707,"implemented":false,"kind":"function","modifiers":[],"name":"revokeOperator","nameLocation":"5467:14:15","nodeType":"FunctionDefinition","parameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"operator","nameLocation":"5499:8:15","nodeType":"VariableDeclaration","scope":1707,"src":"5491:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1697,"name":"address","nodeType":"ElementaryTypeName","src":"5491:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"tokenOwner","nameLocation":"5525:10:15","nodeType":"VariableDeclaration","scope":1707,"src":"5517:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1699,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1702,"mutability":"mutable","name":"notify","nameLocation":"5550:6:15","nodeType":"VariableDeclaration","scope":1707,"src":"5545:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1701,"name":"bool","nodeType":"ElementaryTypeName","src":"5545:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1704,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"5579:24:15","nodeType":"VariableDeclaration","scope":1707,"src":"5566:37:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1703,"name":"bytes","nodeType":"ElementaryTypeName","src":"5566:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5481:128:15"},"returnParameters":{"id":1706,"nodeType":"ParameterList","parameters":[],"src":"5618:0:15"},"scope":1792,"src":"5458:161:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"5625:970:15","text":" @custom:info This function in the LSP7 contract can be used as a prevention mechanism\n against double spending allowance vulnerability.\n @notice Increase the allowance of `operator` by +`addedAmount`\n @dev Atomically increases the allowance granted to `operator` by the caller.\n This is an alternative approach to {authorizeOperator} that can be used as a mitigation\n for the double spending allowance problem.\n Notify the operator based on the LSP1-UniversalReceiver standard\n @param operator The operator to increase the allowance for `msg.sender`\n @param addedAmount The additional amount to add on top of the current operator's allowance\n @custom:requirements\n  - `operator` cannot be the same address as `msg.sender`\n  - `operator` cannot be the zero address.\n @custom:events {OperatorAuthorizationChanged} indicating the updated allowance"},"functionSelector":"2bc1da82","id":1717,"implemented":false,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"6609:17:15","nodeType":"FunctionDefinition","parameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"mutability":"mutable","name":"operator","nameLocation":"6644:8:15","nodeType":"VariableDeclaration","scope":1717,"src":"6636:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1709,"name":"address","nodeType":"ElementaryTypeName","src":"6636:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"addedAmount","nameLocation":"6670:11:15","nodeType":"VariableDeclaration","scope":1717,"src":"6662:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"6662:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1714,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"6704:24:15","nodeType":"VariableDeclaration","scope":1717,"src":"6691:37:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1713,"name":"bytes","nodeType":"ElementaryTypeName","src":"6691:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6626:108:15"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[],"src":"6743:0:15"},"scope":1792,"src":"6600:144:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"6750:1262:15","text":" @custom:info This function in the LSP7 contract can be used as a prevention mechanism\n against the double spending allowance vulnerability.\n @notice Decrease the allowance of `operator` by -`subtractedAmount`\n @dev Atomically decreases the allowance granted to `operator` by the caller.\n This is an alternative approach to {authorizeOperator} that can be used as a mitigation\n for the double spending allowance problem.\n Notify the operator based on the LSP1-UniversalReceiver standard\n @custom:events\n  - {OperatorAuthorizationChanged} event indicating the updated allowance after decreasing it.\n  - {OperatorRevoked} event if `subtractedAmount` is the full allowance,\n    indicating `operator` does not have any alauthorizedAmountForlowance left for `msg.sender`.\n @param operator The operator to decrease allowance for `msg.sender`\n @param tokenOwner The address of the token owner.\n @param subtractedAmount The amount to decrease by in the operator's allowance.\n @custom:requirements\n  - `operator` cannot be the zero address.\n  - `operator` must have allowance for the caller of at least `subtractedAmount`."},"functionSelector":"78381670","id":1729,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"8026:17:15","nodeType":"FunctionDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"operator","nameLocation":"8061:8:15","nodeType":"VariableDeclaration","scope":1729,"src":"8053:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"8053:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"tokenOwner","nameLocation":"8087:10:15","nodeType":"VariableDeclaration","scope":1729,"src":"8079:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1721,"name":"address","nodeType":"ElementaryTypeName","src":"8079:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"subtractedAmount","nameLocation":"8115:16:15","nodeType":"VariableDeclaration","scope":1729,"src":"8107:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1723,"name":"uint256","nodeType":"ElementaryTypeName","src":"8107:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1726,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"8154:24:15","nodeType":"VariableDeclaration","scope":1729,"src":"8141:37:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1725,"name":"bytes","nodeType":"ElementaryTypeName","src":"8141:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8043:141:15"},"returnParameters":{"id":1728,"nodeType":"ParameterList","parameters":[],"src":"8193:0:15"},"scope":1792,"src":"8017:177:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1730,"nodeType":"StructuredDocumentation","src":"8200:648:15","text":" @dev Get the amount of tokens `operator` address has access to from `tokenOwner`.\n Operators can send and burn tokens on behalf of their owners.\n @param operator The operator's address to query the authorized amount for.\n @param tokenOwner The token owner that `operator` has allowance on.\n @return The amount of tokens the `operator`'s address has access on the `tokenOwner`'s balance.\n @custom:info If this function is called with the same address for `operator` and `tokenOwner`, it will simply read the `tokenOwner`'s balance\n (since a tokenOwner is its own operator)."},"functionSelector":"65aeaa95","id":1739,"implemented":false,"kind":"function","modifiers":[],"name":"authorizedAmountFor","nameLocation":"8862:19:15","nodeType":"FunctionDefinition","parameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1732,"mutability":"mutable","name":"operator","nameLocation":"8899:8:15","nodeType":"VariableDeclaration","scope":1739,"src":"8891:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"8891:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1734,"mutability":"mutable","name":"tokenOwner","nameLocation":"8925:10:15","nodeType":"VariableDeclaration","scope":1739,"src":"8917:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1733,"name":"address","nodeType":"ElementaryTypeName","src":"8917:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8881:60:15"},"returnParameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1739,"src":"8965:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"8965:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8964:9:15"},"scope":1792,"src":"8853:121:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1740,"nodeType":"StructuredDocumentation","src":"8980:293:15","text":" @dev Returns all `operator` addresses that are allowed to transfer or burn on behalf of `tokenOwner`.\n @param tokenOwner The token owner to get the operators for.\n @return An array of operators allowed to transfer or burn tokens on behalf of `tokenOwner`."},"functionSelector":"d72fc29a","id":1748,"implemented":false,"kind":"function","modifiers":[],"name":"getOperatorsOf","nameLocation":"9287:14:15","nodeType":"FunctionDefinition","parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"tokenOwner","nameLocation":"9319:10:15","nodeType":"VariableDeclaration","scope":1748,"src":"9311:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1741,"name":"address","nodeType":"ElementaryTypeName","src":"9311:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9301:34:15"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"9359:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1744,"name":"address","nodeType":"ElementaryTypeName","src":"9359:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1745,"nodeType":"ArrayTypeName","src":"9359:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9358:18:15"},"scope":1792,"src":"9278:99:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"9418:2317:15","text":" @dev Transfers an `amount` of tokens from the `from` address to the `to` address and notify both sender and recipients via the LSP1 {`universalReceiver(...)`} function.\n If the tokens are transferred by an operator on behalf of a token holder, the allowance for the operator will be decreased by `amount` once the token transfer\n has been completed (See {authorizedAmountFor}).\n @param from The sender address.\n @param to The recipient address.\n @param amount The amount of tokens to transfer.\n @param force When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n @param data Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\n @custom:requirements\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` and `to` cannot be the same address (`from` cannot send tokens to itself).\n - `from` MUST have a balance of at least `amount` tokens.\n - If the caller is not `from`, it must be an operator for `from` with an allowance of at least `amount` of tokens.\n @custom:events\n - {Transfer} event when tokens get successfully transferred.\n - if the transfer is triggered by an operator, either the {OperatorAuthorizationChanged} event will be emitted with the updated allowance or the {OperatorRevoked}\n event will be emitted if the operator has no more allowance left.\n @custom:hint The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs)\n or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\n @custom:info if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\n @custom:warning Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified.\n This even if the `force` was set to `true`."},"functionSelector":"760d9bba","id":1762,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"11749:8:15","nodeType":"FunctionDefinition","parameters":{"id":1760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"from","nameLocation":"11775:4:15","nodeType":"VariableDeclaration","scope":1762,"src":"11767:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1750,"name":"address","nodeType":"ElementaryTypeName","src":"11767:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1753,"mutability":"mutable","name":"to","nameLocation":"11797:2:15","nodeType":"VariableDeclaration","scope":1762,"src":"11789:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1752,"name":"address","nodeType":"ElementaryTypeName","src":"11789:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"amount","nameLocation":"11817:6:15","nodeType":"VariableDeclaration","scope":1762,"src":"11809:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"11809:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1757,"mutability":"mutable","name":"force","nameLocation":"11838:5:15","nodeType":"VariableDeclaration","scope":1762,"src":"11833:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1756,"name":"bool","nodeType":"ElementaryTypeName","src":"11833:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"data","nameLocation":"11866:4:15","nodeType":"VariableDeclaration","scope":1762,"src":"11853:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1758,"name":"bytes","nodeType":"ElementaryTypeName","src":"11853:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11757:119:15"},"returnParameters":{"id":1761,"nodeType":"ParameterList","parameters":[],"src":"11885:0:15"},"scope":1792,"src":"11740:146:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1763,"nodeType":"StructuredDocumentation","src":"11892:1246:15","text":" @dev Same as {`transfer(...)`} but transfer multiple tokens based on the arrays of `from`, `to`, `amount`.\n @custom:info If any transfer in the batch fail or revert, the whole call will revert.\n @param from An array of sending addresses.\n @param to An array of receiving addresses.\n @param amount An array of amount of tokens to transfer for each `from -> to` transfer.\n @param force For each transfer, when set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n @param data An array of additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\n @custom:requirements\n - `from`, `to`, `amount` lists MUST be of the same length.\n - no values in `from` can be the zero address.\n - no values in `to` can be the zero address.\n - each `amount` tokens MUST be owned by `from`.\n - for each transfer, if the caller is not `from`, it MUST be an operator for `from` with access to at least `amount` tokens.\n @custom:events {Transfer} event **for each token transfer**."},"functionSelector":"2d7667c9","id":1781,"implemented":false,"kind":"function","modifiers":[],"name":"transferBatch","nameLocation":"13152:13:15","nodeType":"FunctionDefinition","parameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"from","nameLocation":"13192:4:15","nodeType":"VariableDeclaration","scope":1781,"src":"13175:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1764,"name":"address","nodeType":"ElementaryTypeName","src":"13175:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1765,"nodeType":"ArrayTypeName","src":"13175:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1769,"mutability":"mutable","name":"to","nameLocation":"13223:2:15","nodeType":"VariableDeclaration","scope":1781,"src":"13206:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1767,"name":"address","nodeType":"ElementaryTypeName","src":"13206:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1768,"nodeType":"ArrayTypeName","src":"13206:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1772,"mutability":"mutable","name":"amount","nameLocation":"13252:6:15","nodeType":"VariableDeclaration","scope":1781,"src":"13235:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1771,"nodeType":"ArrayTypeName","src":"13235:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"force","nameLocation":"13282:5:15","nodeType":"VariableDeclaration","scope":1781,"src":"13268:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1773,"name":"bool","nodeType":"ElementaryTypeName","src":"13268:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1774,"nodeType":"ArrayTypeName","src":"13268:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"data","nameLocation":"13312:4:15","nodeType":"VariableDeclaration","scope":1781,"src":"13297:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1776,"name":"bytes","nodeType":"ElementaryTypeName","src":"13297:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1777,"nodeType":"ArrayTypeName","src":"13297:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13165:157:15"},"returnParameters":{"id":1780,"nodeType":"ParameterList","parameters":[],"src":"13331:0:15"},"scope":1792,"src":"13143:189:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1782,"nodeType":"StructuredDocumentation","src":"13338:460:15","text":" @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n @param data An array of ABI encoded function calls to be called on the contract.\n @return results An array of abi-encoded data returned by the functions executed."},"functionSelector":"6963d438","id":1791,"implemented":false,"kind":"function","modifiers":[],"name":"batchCalls","nameLocation":"13812:10:15","nodeType":"FunctionDefinition","parameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"mutability":"mutable","name":"data","nameLocation":"13849:4:15","nodeType":"VariableDeclaration","scope":1791,"src":"13832:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1783,"name":"bytes","nodeType":"ElementaryTypeName","src":"13832:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1784,"nodeType":"ArrayTypeName","src":"13832:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13822:37:15"},"returnParameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"results","nameLocation":"13893:7:15","nodeType":"VariableDeclaration","scope":1791,"src":"13878:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1787,"name":"bytes","nodeType":"ElementaryTypeName","src":"13878:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1788,"nodeType":"ArrayTypeName","src":"13878:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13877:24:15"},"scope":1792,"src":"13803:99:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1793,"src":"156:13748:15","usedErrors":[]}],"src":"39:13866:15"},"id":15},"@lukso/lsp7-contracts/contracts/LSP7Constants.sol":{"ast":{"absolutePath":"@lukso/lsp7-contracts/contracts/LSP7Constants.sol","exportedSymbols":{"_INTERFACEID_LSP7":[1797],"_INTERFACEID_LSP7_V0_12_0":[1800],"_INTERFACEID_LSP7_V0_14_0":[1803],"_TYPEID_LSP7_DELEGATEE":[1809],"_TYPEID_LSP7_DELEGATOR":[1806],"_TYPEID_LSP7_TOKENOPERATOR":[1818],"_TYPEID_LSP7_TOKENSRECIPIENT":[1815],"_TYPEID_LSP7_TOKENSSENDER":[1812]},"id":1819,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1794,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:16"},{"constant":true,"id":1797,"mutability":"constant","name":"_INTERFACEID_LSP7","nameLocation":"108:17:16","nodeType":"VariableDeclaration","scope":1819,"src":"92:46:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1795,"name":"bytes4","nodeType":"ElementaryTypeName","src":"92:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786335326436303038","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"128:10:16","typeDescriptions":{"typeIdentifier":"t_rational_3308085256_by_1","typeString":"int_const 3308085256"},"value":"0xc52d6008"},"visibility":"internal"},{"constant":true,"id":1800,"mutability":"constant","name":"_INTERFACEID_LSP7_V0_12_0","nameLocation":"157:25:16","nodeType":"VariableDeclaration","scope":1819,"src":"141:54:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1798,"name":"bytes4","nodeType":"ElementaryTypeName","src":"141:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786461613734366237","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"185:10:16","typeDescriptions":{"typeIdentifier":"t_rational_3668395703_by_1","typeString":"int_const 3668395703"},"value":"0xdaa746b7"},"visibility":"internal"},{"constant":true,"id":1803,"mutability":"constant","name":"_INTERFACEID_LSP7_V0_14_0","nameLocation":"214:25:16","nodeType":"VariableDeclaration","scope":1819,"src":"198:54:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1801,"name":"bytes4","nodeType":"ElementaryTypeName","src":"198:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786233633439323866","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"242:10:16","typeDescriptions":{"typeIdentifier":"t_rational_3016004239_by_1","typeString":"int_const 3016004239"},"value":"0xb3c4928f"},"visibility":"internal"},{"constant":true,"id":1806,"mutability":"constant","name":"_TYPEID_LSP7_DELEGATOR","nameLocation":"341:22:16","nodeType":"VariableDeclaration","scope":1819,"src":"324:108:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"324:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839393762643636613765373832336230393338336563376365363566633330366166323962386638326134353632376638656663303430383437356465303136","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"366:66:16","typeDescriptions":{"typeIdentifier":"t_rational_69422667866998829830452032872047654390299646302394422033368158190646291456022_by_1","typeString":"int_const 6942...(69 digits omitted)...6022"},"value":"0x997bd66a7e7823b09383ec7ce65fc306af29b8f82a45627f8efc0408475de016"},"visibility":"internal"},{"constant":true,"id":1809,"mutability":"constant","name":"_TYPEID_LSP7_DELEGATEE","nameLocation":"501:22:16","nodeType":"VariableDeclaration","scope":1819,"src":"484:108:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"484:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830336661653938613238303236663933633233653263393433386332656630666161313031353835313237613839393139643138663036376439303762333139","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"526:66:16","typeDescriptions":{"typeIdentifier":"t_rational_1800262143529331232307197996670049847179049454642420434887604704843760382745_by_1","typeString":"int_const 1800...(68 digits omitted)...2745"},"value":"0x03fae98a28026f93c23e2c9438c2ef0faa101585127a89919d18f067d907b319"},"visibility":"internal"},{"constant":true,"id":1812,"mutability":"constant","name":"_TYPEID_LSP7_TOKENSSENDER","nameLocation":"658:25:16","nodeType":"VariableDeclaration","scope":1819,"src":"641:111:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"641:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834323961633761303639303364626339633133646663623363396431316466383139343538316661303437633936643761343137316663373430323935386561","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"686:66:16","typeDescriptions":{"typeIdentifier":"t_rational_30126120226645308825175209506809961281114499779192639813518124737519344507114_by_1","typeString":"int_const 3012...(69 digits omitted)...7114"},"value":"0x429ac7a06903dbc9c13dfcb3c9d11df8194581fa047c96d7a4171fc7402958ea"},"visibility":"internal"},{"constant":true,"id":1815,"mutability":"constant","name":"_TYPEID_LSP7_TOKENSRECIPIENT","nameLocation":"821:28:16","nodeType":"VariableDeclaration","scope":1819,"src":"804:114:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1813,"name":"bytes32","nodeType":"ElementaryTypeName","src":"804:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307832303830343631316233653265613231633438306463343635313432323130616366346132343835393437353431373730656331666238376465653461353563","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"852:66:16","typeDescriptions":{"typeIdentifier":"t_rational_14700651178463773754784378975248309303000044702861470394749468040853262214492_by_1","typeString":"int_const 1470...(69 digits omitted)...4492"},"value":"0x20804611b3e2ea21c480dc465142210acf4a2485947541770ec1fb87dee4a55c"},"visibility":"internal"},{"constant":true,"id":1818,"mutability":"constant","name":"_TYPEID_LSP7_TOKENOPERATOR","nameLocation":"986:26:16","nodeType":"VariableDeclaration","scope":1819,"src":"969:112:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"969:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833383630373263633561353865363132363362343334633732323732356632313033316364303665376335353263666161303664623564653861333230646263","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1015:66:16","typeDescriptions":{"typeIdentifier":"t_rational_25499929147308973929162392603536425004387276054373913310965843359994056150460_by_1","typeString":"int_const 2549...(69 digits omitted)...0460"},"value":"0x386072cc5a58e61263b434c722725f21031cd06e7c552cfaa06db5de8a320dbc"},"visibility":"internal"}],"src":"39:1044:16"},"id":16},"@lukso/lsp7-contracts/contracts/LSP7DigitalAsset.sol":{"ast":{"absolutePath":"@lukso/lsp7-contracts/contracts/LSP7DigitalAsset.sol","exportedSymbols":{"ERC165Checker":[3581],"ERC725Y":[269],"EnumerableSet":[4206],"ILSP1":[464],"ILSP7DigitalAsset":[1792],"InvalidExtensionAddress":[591],"InvalidFunctionSelector":[586],"LSP17Extendable":[725],"LSP1Utils":[563],"LSP2Utils":[1462],"LSP4DigitalAssetMetadata":[1614],"LSP7AmountExceedsAuthorizedAmount":[3164],"LSP7AmountExceedsBalance":[3153],"LSP7BatchCallFailed":[3202],"LSP7CannotSendWithAddressZero":[3170],"LSP7CannotUseAddressZeroAsOperator":[3167],"LSP7DecreaseAllowanceNotAuthorized":[3220],"LSP7DecreasedAllowanceBelowZero":[3189],"LSP7DigitalAsset":[3142],"LSP7InvalidTransferBatch":[3173],"LSP7NotifyTokenReceiverContractMissingLSP1Interface":[3178],"LSP7NotifyTokenReceiverIsEOA":[3183],"LSP7RevokeOperatorNotAuthorized":[3211],"LSP7TokenContractCannotHoldValue":[3192],"LSP7TokenOwnerCannotBeOperator":[3186],"NoExtensionFoundForFunctionSelector":[581],"OperatorAllowanceCannotBeIncreasedFromZero":[3197],"_INTERFACEID_LSP1":[469],"_INTERFACEID_LSP7":[1797],"_LSP17_EXTENSION_PREFIX":[574],"_TYPEID_LSP7_TOKENOPERATOR":[1818],"_TYPEID_LSP7_TOKENSRECIPIENT":[1815],"_TYPEID_LSP7_TOKENSSENDER":[1812]},"id":3143,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1820,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:17"},{"absolutePath":"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol","file":"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol","id":1822,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3143,"sourceUnit":465,"src":"78:113:17","symbolAliases":[{"foreign":{"id":1821,"name":"ILSP1UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"91:22:17","typeDescriptions":{}},"local":"ILSP1","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol","file":"./ILSP7DigitalAsset.sol","id":1824,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3143,"sourceUnit":1793,"src":"192:58:17","symbolAliases":[{"foreign":{"id":1823,"name":"ILSP7DigitalAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"200:17:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":1826,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3143,"sourceUnit":4207,"src":"263:92:17","symbolAliases":[{"foreign":{"id":1825,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"276:13:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":1828,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3143,"sourceUnit":3582,"src":"356:98:17","symbolAliases":[{"foreign":{"id":1827,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"369:13:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol","file":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol","id":1831,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3143,"sourceUnit":1615,"src":"455:121:17","symbolAliases":[{"foreign":{"id":1829,"name":"LSP4DigitalAssetMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"468:24:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1830,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"498:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol","file":"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol","id":1833,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3143,"sourceUnit":726,"src":"577:108:17","symbolAliases":[{"foreign":{"id":1832,"name":"LSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"590:15:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Utils.sol","file":"@lukso/lsp1-contracts/contracts/LSP1Utils.sol","id":1835,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3143,"sourceUnit":564,"src":"700:72:17","symbolAliases":[{"foreign":{"id":1834,"name":"LSP1Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"708:9:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","file":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","id":1837,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3143,"sourceUnit":1463,"src":"773:72:17","symbolAliases":[{"foreign":{"id":1836,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"781:9:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Constants.sol","file":"@lukso/lsp1-contracts/contracts/LSP1Constants.sol","id":1839,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3143,"sourceUnit":479,"src":"860:90:17","symbolAliases":[{"foreign":{"id":1838,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"873:17:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","file":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","id":1841,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3143,"sourceUnit":575,"src":"951:115:17","symbolAliases":[{"foreign":{"id":1840,"name":"_LSP17_EXTENSION_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"964:23:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp7-contracts/contracts/LSP7Constants.sol","file":"./LSP7Constants.sol","id":1846,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3143,"sourceUnit":1819,"src":"1067:157:17","symbolAliases":[{"foreign":{"id":1842,"name":"_INTERFACEID_LSP7","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"1080:17:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1843,"name":"_TYPEID_LSP7_TOKENOPERATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"1103:26:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1844,"name":"_TYPEID_LSP7_TOKENSSENDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"1135:25:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1845,"name":"_TYPEID_LSP7_TOKENSRECIPIENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"1166:28:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol","file":"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol","id":1850,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3143,"sourceUnit":592,"src":"1236:182:17","symbolAliases":[{"foreign":{"id":1847,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"1249:35:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1848,"name":"InvalidFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"1290:23:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1849,"name":"InvalidExtensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"1319:23:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp7-contracts/contracts/LSP7Errors.sol","file":"./LSP7Errors.sol","id":1865,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3143,"sourceUnit":3221,"src":"1419:560:17","symbolAliases":[{"foreign":{"id":1851,"name":"LSP7TokenContractCannotHoldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"1432:32:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1852,"name":"LSP7AmountExceedsAuthorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"1470:33:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1853,"name":"LSP7InvalidTransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"1509:24:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1854,"name":"LSP7AmountExceedsBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"1539:24:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1855,"name":"LSP7DecreasedAllowanceBelowZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"1569:31:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1856,"name":"LSP7CannotUseAddressZeroAsOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"1606:34:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1857,"name":"LSP7TokenOwnerCannotBeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"1646:30:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1858,"name":"LSP7CannotSendWithAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"1682:29:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1859,"name":"LSP7NotifyTokenReceiverContractMissingLSP1Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"1717:51:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1860,"name":"LSP7NotifyTokenReceiverIsEOA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"1774:28:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1861,"name":"OperatorAllowanceCannotBeIncreasedFromZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"1808:42:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1862,"name":"LSP7BatchCallFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"1856:19:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1863,"name":"LSP7RevokeOperatorNotAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"1881:31:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1864,"name":"LSP7DecreaseAllowanceNotAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"1918:34:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1867,"name":"ILSP7DigitalAsset","nameLocations":["2164:17:17"],"nodeType":"IdentifierPath","referencedDeclaration":1792,"src":"2164:17:17"},"id":1868,"nodeType":"InheritanceSpecifier","src":"2164:17:17"},{"baseName":{"id":1869,"name":"LSP4DigitalAssetMetadata","nameLocations":["2187:24:17"],"nodeType":"IdentifierPath","referencedDeclaration":1614,"src":"2187:24:17"},"id":1870,"nodeType":"InheritanceSpecifier","src":"2187:24:17"},{"baseName":{"id":1871,"name":"LSP17Extendable","nameLocations":["2217:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":725,"src":"2217:15:17"},"id":1872,"nodeType":"InheritanceSpecifier","src":"2217:15:17"}],"canonicalName":"LSP7DigitalAsset","contractDependencies":[],"contractKind":"contract","documentation":{"id":1866,"nodeType":"StructuredDocumentation","src":"1981:140:17","text":" @title Implementation of the LSP7 Digital Asset standard, a contract that represents a fungible token.\n @author Matthew Stevens"},"fullyImplemented":true,"id":3142,"linearizedBaseContracts":[3142,725,1614,269,386,3387,3593,3333,3363,1792],"name":"LSP7DigitalAsset","nameLocation":"2140:16:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1876,"libraryName":{"id":1873,"name":"EnumerableSet","nameLocations":["2245:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":4206,"src":"2245:13:17"},"nodeType":"UsingForDirective","src":"2239:49:17","typeName":{"id":1875,"nodeType":"UserDefinedTypeName","pathNode":{"id":1874,"name":"EnumerableSet.AddressSet","nameLocations":["2263:13:17","2277:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3919,"src":"2263:24:17"},"referencedDeclaration":3919,"src":"2263:24:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":1878,"mutability":"mutable","name":"_isNonDivisible","nameLocation":"2328:15:17","nodeType":"VariableDeclaration","scope":3142,"src":"2314:29:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1877,"name":"bool","nodeType":"ElementaryTypeName","src":"2314:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"_existingTokens","nameLocation":"2367:15:17","nodeType":"VariableDeclaration","scope":3142,"src":"2350:32:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1879,"name":"uint256","nodeType":"ElementaryTypeName","src":"2350:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"_tokenOwnerBalances","nameLocation":"2484:19:17","nodeType":"VariableDeclaration","scope":3142,"src":"2447:56:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1883,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1881,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2447:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"2466:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":1889,"mutability":"mutable","name":"_operators","nameLocation":"2630:10:17","nodeType":"VariableDeclaration","scope":3142,"src":"2576:64:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AddressSet_$3919_storage_$","typeString":"mapping(address => struct EnumerableSet.AddressSet)"},"typeName":{"id":1888,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1885,"name":"address","nodeType":"ElementaryTypeName","src":"2584:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2576:44:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AddressSet_$3919_storage_$","typeString":"mapping(address => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1887,"nodeType":"UserDefinedTypeName","pathNode":{"id":1886,"name":"EnumerableSet.AddressSet","nameLocations":["2595:13:17","2609:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3919,"src":"2595:24:17"},"referencedDeclaration":3919,"src":"2595:24:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"_operatorAuthorizedAmount","nameLocation":"2782:25:17","nodeType":"VariableDeclaration","scope":3142,"src":"2717:90:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1894,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1890,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2717:47:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1893,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1891,"name":"address","nodeType":"ElementaryTypeName","src":"2744:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2736:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"2755:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"body":{"id":1919,"nodeType":"Block","src":"3478:50:17","statements":[{"expression":{"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1915,"name":"_isNonDivisible","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3488:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1916,"name":"isNonDivisible_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"3506:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3488:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1918,"nodeType":"ExpressionStatement","src":"3488:33:17"}]},"documentation":{"id":1896,"nodeType":"StructuredDocumentation","src":"2814:424:17","text":" @notice Sets the token-Metadata\n @param name_ The name of the token.\n @param symbol_ The symbol of the token.\n @param newOwner_ The owner of the the token-Metadata.\n @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\n @param isNonDivisible_ Specify if the LSP7 token is a fungible or non-fungible token."},"id":1920,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1909,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"3435:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1910,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"3442:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1911,"name":"newOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"3451:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1912,"name":"lsp4TokenType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"3462:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1913,"kind":"baseConstructorSpecifier","modifierName":{"id":1908,"name":"LSP4DigitalAssetMetadata","nameLocations":["3410:24:17"],"nodeType":"IdentifierPath","referencedDeclaration":1614,"src":"3410:24:17"},"nodeType":"ModifierInvocation","src":"3410:67:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"name_","nameLocation":"3278:5:17","nodeType":"VariableDeclaration","scope":1920,"src":"3264:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1897,"name":"string","nodeType":"ElementaryTypeName","src":"3264:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"symbol_","nameLocation":"3307:7:17","nodeType":"VariableDeclaration","scope":1920,"src":"3293:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1899,"name":"string","nodeType":"ElementaryTypeName","src":"3293:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"newOwner_","nameLocation":"3332:9:17","nodeType":"VariableDeclaration","scope":1920,"src":"3324:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1901,"name":"address","nodeType":"ElementaryTypeName","src":"3324:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1904,"mutability":"mutable","name":"lsp4TokenType_","nameLocation":"3359:14:17","nodeType":"VariableDeclaration","scope":1920,"src":"3351:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"isNonDivisible_","nameLocation":"3388:15:17","nodeType":"VariableDeclaration","scope":1920,"src":"3383:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1905,"name":"bool","nodeType":"ElementaryTypeName","src":"3383:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3254:155:17"},"returnParameters":{"id":1914,"nodeType":"ParameterList","parameters":[],"src":"3478:0:17"},"scope":3142,"src":"3243:285:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1943,"nodeType":"Block","src":"5362:157:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1928,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5376:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5380:4:17","memberName":"data","nodeType":"MemberAccess","src":"5376:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5385:6:17","memberName":"length","nodeType":"MemberAccess","src":"5376:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"34","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5394:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"5376:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1938,"nodeType":"IfStatement","src":"5372:90:17","trueBody":{"id":1937,"nodeType":"Block","src":"5397:65:17","statements":[{"errorCall":{"arguments":[{"id":1934,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"5442:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1933,"name":"InvalidFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"5418:23:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5418:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1936,"nodeType":"RevertStatement","src":"5411:40:17"}]}},{"expression":{"arguments":[{"id":1940,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"5503:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1939,"name":"_fallbackLSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[2017],"referencedDeclaration":2017,"src":"5478:24:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes calldata) returns (bytes memory)"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1927,"id":1942,"nodeType":"Return","src":"5471:41:17"}]},"documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"3561:1647:17","text":" @notice The `fallback` function was called with the following amount of native tokens: `msg.value`; and the following calldata: `callData`.\n @dev Achieves the goal of [LSP-17-ContractExtension] standard by extending the contract to handle calls of functions that do not exist natively,\n forwarding the function call to the extension address mapped to the function being called.\n This function is executed when:\n    - Sending data of length less than 4 bytes to the contract.\n    - The first 4 bytes of the calldata do not match any publicly callable functions from the contract ABI.\n    - Receiving native tokens\n 1. If the data is equal or longer than 4 bytes, the [ERC-725Y] storage is queried with the following data key: [_LSP17_EXTENSION_PREFIX] + `bytes4(msg.sig)` (Check [LSP-2-ERC725YJSONSchema] for encoding the data key)\n   - If there is no address stored under the following data key, revert with {NoExtensionFoundForFunctionSelector(bytes4)}. The data key relative to `bytes4(0)` is an exception, where no reverts occurs if there is no extension address stored under. This exception is made to allow users to send random data (graffiti) to the account and to be able to react on it.\n   - If there is an address, forward the `msg.data` to the extension using the CALL opcode, appending 52 bytes (20 bytes of `msg.sender` and 32 bytes of `msg.value`). Return what the calls returns, or revert if the call failed.\n 2. If the data sent to this function is of length less than 4 bytes (not a function selector), revert."},"id":1944,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"callData","nameLocation":"5299:8:17","nodeType":"VariableDeclaration","scope":1944,"src":"5284:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1922,"name":"bytes","nodeType":"ElementaryTypeName","src":"5284:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5274:39:17"},"returnParameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1944,"src":"5348:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1925,"name":"bytes","nodeType":"ElementaryTypeName","src":"5348:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5347:14:17"},"scope":3142,"src":"5266:253:17","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":1961,"nodeType":"Block","src":"5773:205:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1948,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5834:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5838:5:17","memberName":"value","nodeType":"MemberAccess","src":"5834:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5847:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5834:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1957,"nodeType":"IfStatement","src":"5830:90:17","trueBody":{"id":1956,"nodeType":"Block","src":"5850:70:17","statements":[{"errorCall":{"arguments":[{"hexValue":"00000000","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5895:13:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","typeString":"literal_string hex\"00000000\""},"value":"\u0000\u0000\u0000\u0000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","typeString":"literal_string hex\"00000000\""}],"id":1952,"name":"InvalidFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"5871:23:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5871:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1955,"nodeType":"RevertStatement","src":"5864:45:17"}]}},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1958,"name":"LSP7TokenContractCannotHoldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"5937:32:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5937:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1960,"nodeType":"RevertStatement","src":"5930:41:17"}]},"documentation":{"id":1945,"nodeType":"StructuredDocumentation","src":"5525:155:17","text":" @dev Reverts whenever someone tries to send native tokens to a LSP7 contract.\n @notice LSP7 contract cannot receive native tokens."},"id":1962,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1946,"nodeType":"ParameterList","parameters":[],"src":"5745:2:17"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[],"src":"5773:0:17"},"scope":3142,"src":"5738:240:17","stateMutability":"payable","virtual":true,"visibility":"external"},{"baseFunctions":[724],"body":{"id":2016,"nodeType":"Block","src":"7028:919:17","statements":[{"assignments":[1972,null],"declarations":[{"constant":false,"id":1972,"mutability":"mutable","name":"extension","nameLocation":"7090:9:17","nodeType":"VariableDeclaration","scope":2016,"src":"7082:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1971,"name":"address","nodeType":"ElementaryTypeName","src":"7082:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null],"id":1977,"initialValue":{"arguments":[{"expression":{"id":1974,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7134:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7138:3:17","memberName":"sig","nodeType":"MemberAccess","src":"7134:7:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":1973,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[2067],"referencedDeclaration":2067,"src":"7105:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7105:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"7081:61:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1978,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"7202:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7223:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7215:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1979,"name":"address","nodeType":"ElementaryTypeName","src":"7215:7:17","typeDescriptions":{}}},"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7215:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7202:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1989,"nodeType":"IfStatement","src":"7198:92:17","trueBody":{"errorCall":{"arguments":[{"expression":{"id":1985,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7282:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7286:3:17","memberName":"sig","nodeType":"MemberAccess","src":"7282:7:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":1984,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"7246:35:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7246:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1988,"nodeType":"RevertStatement","src":"7239:51:17"}},{"assignments":[1991,1993],"declarations":[{"constant":false,"id":1991,"mutability":"mutable","name":"success","nameLocation":"7307:7:17","nodeType":"VariableDeclaration","scope":2016,"src":"7302:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1990,"name":"bool","nodeType":"ElementaryTypeName","src":"7302:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1993,"mutability":"mutable","name":"result","nameLocation":"7329:6:17","nodeType":"VariableDeclaration","scope":2016,"src":"7316:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1992,"name":"bytes","nodeType":"ElementaryTypeName","src":"7316:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2008,"initialValue":{"arguments":[{"arguments":[{"id":2001,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"7402:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":2002,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7412:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7416:6:17","memberName":"sender","nodeType":"MemberAccess","src":"7412:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2004,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7424:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7428:5:17","memberName":"value","nodeType":"MemberAccess","src":"7424:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1999,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7385:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7389:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"7385:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7385:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1994,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"7339:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7349:4:17","memberName":"call","nodeType":"MemberAccess","src":"7339:14:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1996,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7361:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7365:5:17","memberName":"value","nodeType":"MemberAccess","src":"7361:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7339:32:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7339:105:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7301:143:17"},{"condition":{"id":2009,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"7459:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2014,"nodeType":"Block","src":"7512:429:17","statements":[{"AST":{"nodeType":"YulBlock","src":"7806:125:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7824:36:17","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"7853:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7847:5:17"},"nodeType":"YulFunctionCall","src":"7847:13:17"},"variables":[{"name":"resultdata_size","nodeType":"YulTypedName","src":"7828:15:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"7888:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7896:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7884:3:17"},"nodeType":"YulFunctionCall","src":"7884:15:17"},{"name":"resultdata_size","nodeType":"YulIdentifier","src":"7901:15:17"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7877:6:17"},"nodeType":"YulFunctionCall","src":"7877:40:17"},"nodeType":"YulExpressionStatement","src":"7877:40:17"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1993,"isOffset":false,"isSlot":false,"src":"7853:6:17","valueSize":1},{"declaration":1993,"isOffset":false,"isSlot":false,"src":"7888:6:17","valueSize":1}],"id":2013,"nodeType":"InlineAssembly","src":"7797:134:17"}]},"id":2015,"nodeType":"IfStatement","src":"7455:486:17","trueBody":{"id":2012,"nodeType":"Block","src":"7468:38:17","statements":[{"expression":{"id":2010,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"7489:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1970,"id":2011,"nodeType":"Return","src":"7482:13:17"}]}}]},"documentation":{"id":1963,"nodeType":"StructuredDocumentation","src":"5984:917:17","text":" @dev Forwards the call with the received value to an extension mapped to a function selector.\n Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n called on the account. If there is no extension, the address(0) will be returned.\n Forwards the value if the extension is payable.\n Reverts if there is no extension for the function being called.\n If there is an extension for the function selector being called, it calls the extension with the\n CALL opcode, passing the {msg.data} appended with the 20 bytes of the {msg.sender} and\n 32 bytes of the {msg.value}\n @custom:info The LSP7 Token contract should not hold any native tokens. Any native tokens received by the contract\n will be forwarded to the extension address mapped to the selector from `msg.sig`."},"id":2017,"implemented":true,"kind":"function","modifiers":[],"name":"_fallbackLSP17Extendable","nameLocation":"6915:24:17","nodeType":"FunctionDefinition","overrides":{"id":1967,"nodeType":"OverrideSpecifier","overrides":[],"src":"6996:8:17"},"parameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"callData","nameLocation":"6964:8:17","nodeType":"VariableDeclaration","scope":2017,"src":"6949:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1964,"name":"bytes","nodeType":"ElementaryTypeName","src":"6949:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6939:39:17"},"returnParameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2017,"src":"7014:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1968,"name":"bytes","nodeType":"ElementaryTypeName","src":"7014:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7013:14:17"},"scope":3142,"src":"6906:1041:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[665],"body":{"id":2066,"nodeType":"Block","src":"8461:585:17","statements":[{"assignments":[2029],"declarations":[{"constant":false,"id":2029,"mutability":"mutable","name":"mappedExtensionDataKey","nameLocation":"8559:22:17","nodeType":"VariableDeclaration","scope":2066,"src":"8551:30:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2028,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8551:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2035,"initialValue":{"arguments":[{"id":2032,"name":"_LSP17_EXTENSION_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"8626:23:17","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"id":2033,"name":"functionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"8663:16:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2030,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"8584:9:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1462_$","typeString":"type(library LSP2Utils)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:18:17","memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":952,"src":"8584:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8584:105:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8551:138:17"},{"assignments":[2037],"declarations":[{"constant":false,"id":2037,"mutability":"mutable","name":"extensionAddress","nameLocation":"8791:16:17","nodeType":"VariableDeclaration","scope":2066,"src":"8778:29:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2036,"name":"bytes","nodeType":"ElementaryTypeName","src":"8778:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2041,"initialValue":{"arguments":[{"id":2039,"name":"mappedExtensionDataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"8819:22:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2038,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"8810:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8778:64:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2042,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"8856:16:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8873:6:17","memberName":"length","nodeType":"MemberAccess","src":"8856:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3230","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8883:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"8856:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2046,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"8889:16:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8906:6:17","memberName":"length","nodeType":"MemberAccess","src":"8889:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8916:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8889:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8856:61:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2055,"nodeType":"IfStatement","src":"8852:127:17","trueBody":{"errorCall":{"arguments":[{"id":2052,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"8962:16:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2051,"name":"InvalidExtensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"8938:23:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8938:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2054,"nodeType":"RevertStatement","src":"8931:48:17"}},{"expression":{"components":[{"arguments":[{"arguments":[{"id":2060,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"9014:16:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9006:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":2058,"name":"bytes20","nodeType":"ElementaryTypeName","src":"9006:7:17","typeDescriptions":{}}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9006:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":2057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8998:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2056,"name":"address","nodeType":"ElementaryTypeName","src":"8998:7:17","typeDescriptions":{}}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8998:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9034:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"id":2064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8997:42:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"functionReturnParameters":2027,"id":2065,"nodeType":"Return","src":"8990:49:17"}]},"documentation":{"id":2018,"nodeType":"StructuredDocumentation","src":"7953:371:17","text":" @dev Returns the extension address stored under the following data key:\n - {_LSP17_EXTENSION_PREFIX} + `<bytes4>` (Check [LSP2-ERC725YJSONSchema] for encoding the data key).\n - If no extension is stored, returns the address(0).\n - we do not check that payable bool as in lsp7 standard we will always forward the value to the extension"},"id":2067,"implemented":true,"kind":"function","modifiers":[],"name":"_getExtensionAndForwardValue","nameLocation":"8338:28:17","nodeType":"FunctionDefinition","overrides":{"id":2022,"nodeType":"OverrideSpecifier","overrides":[],"src":"8428:8:17"},"parameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"functionSelector","nameLocation":"8383:16:17","nodeType":"VariableDeclaration","scope":2067,"src":"8376:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2019,"name":"bytes4","nodeType":"ElementaryTypeName","src":"8376:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"8366:39:17"},"returnParameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2067,"src":"8446:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2023,"name":"address","nodeType":"ElementaryTypeName","src":"8446:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2067,"src":"8455:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2025,"name":"bool","nodeType":"ElementaryTypeName","src":"8455:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8445:15:17"},"scope":3142,"src":"8329:717:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[268,623],"body":{"id":2092,"nodeType":"Block","src":"9234:200:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2078,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"9263:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2079,"name":"_INTERFACEID_LSP7","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"9278:17:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"9263:32:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2083,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"9335:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2081,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"9311:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LSP7DigitalAsset_$3142_$","typeString":"type(contract super LSP7DigitalAsset)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9317:17:17","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":623,"src":"9311:23:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9311:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9263:84:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2088,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"9415:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2086,"name":"LSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"9363:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP17Extendable_$725_$","typeString":"type(contract LSP17Extendable)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9379:35:17","memberName":"_supportsInterfaceInERC165Extension","nodeType":"MemberAccess","referencedDeclaration":655,"src":"9363:51:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9363:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9263:164:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2077,"id":2091,"nodeType":"Return","src":"9244:183:17"}]},"documentation":{"id":2068,"nodeType":"StructuredDocumentation","src":"9052:46:17","text":" @inheritdoc LSP17Extendable"},"functionSelector":"01ffc9a7","id":2093,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"9112:17:17","nodeType":"FunctionDefinition","overrides":{"id":2074,"nodeType":"OverrideSpecifier","overrides":[{"id":2072,"name":"ERC725Y","nameLocations":["9193:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":269,"src":"9193:7:17"},{"id":2073,"name":"LSP17Extendable","nameLocations":["9202:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":725,"src":"9202:15:17"}],"src":"9184:34:17"},"parameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"interfaceId","nameLocation":"9146:11:17","nodeType":"VariableDeclaration","scope":2093,"src":"9139:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2069,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9139:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"9129:34:17"},"returnParameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2093,"src":"9228:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2075,"name":"bool","nodeType":"ElementaryTypeName","src":"9228:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9227:6:17"},"scope":3142,"src":"9103:331:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1671],"body":{"id":2105,"nodeType":"Block","src":"9584:48:17","statements":[{"expression":{"condition":{"id":2100,"name":"_isNonDivisible","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"9601:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"3138","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9623:2:17","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9601:24:17","trueExpression":{"hexValue":"30","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9619:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2099,"id":2104,"nodeType":"Return","src":"9594:31:17"}]},"documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"9466:48:17","text":" @inheritdoc ILSP7DigitalAsset"},"functionSelector":"313ce567","id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"9528:8:17","nodeType":"FunctionDefinition","overrides":{"id":2096,"nodeType":"OverrideSpecifier","overrides":[],"src":"9559:8:17"},"parameters":{"id":2095,"nodeType":"ParameterList","parameters":[],"src":"9536:2:17"},"returnParameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"9577:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2097,"name":"uint8","nodeType":"ElementaryTypeName","src":"9577:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"9576:7:17"},"scope":3142,"src":"9519:113:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1677],"body":{"id":2115,"nodeType":"Block","src":"9761:39:17","statements":[{"expression":{"id":2113,"name":"_existingTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"9778:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2112,"id":2114,"nodeType":"Return","src":"9771:22:17"}]},"documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"9638:48:17","text":" @inheritdoc ILSP7DigitalAsset"},"functionSelector":"18160ddd","id":2116,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"9700:11:17","nodeType":"FunctionDefinition","overrides":{"id":2109,"nodeType":"OverrideSpecifier","overrides":[],"src":"9734:8:17"},"parameters":{"id":2108,"nodeType":"ParameterList","parameters":[],"src":"9711:2:17"},"returnParameters":{"id":2112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2116,"src":"9752:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"9752:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9751:9:17"},"scope":3142,"src":"9691:109:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1685],"body":{"id":2129,"nodeType":"Block","src":"9991:55:17","statements":[{"expression":{"baseExpression":{"id":2125,"name":"_tokenOwnerBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"10008:19:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2127,"indexExpression":{"id":2126,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"10028:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10008:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2124,"id":2128,"nodeType":"Return","src":"10001:38:17"}]},"documentation":{"id":2117,"nodeType":"StructuredDocumentation","src":"9838:48:17","text":" @inheritdoc ILSP7DigitalAsset"},"functionSelector":"70a08231","id":2130,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"9900:9:17","nodeType":"FunctionDefinition","overrides":{"id":2121,"nodeType":"OverrideSpecifier","overrides":[],"src":"9964:8:17"},"parameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"tokenOwner","nameLocation":"9927:10:17","nodeType":"VariableDeclaration","scope":2130,"src":"9919:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2118,"name":"address","nodeType":"ElementaryTypeName","src":"9919:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9909:34:17"},"returnParameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2130,"src":"9982:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"9982:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9981:9:17"},"scope":3142,"src":"9891:155:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1791],"body":{"id":2199,"nodeType":"Block","src":"10371:967:17","statements":[{"expression":{"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2141,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"10381:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2145,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"10403:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10408:6:17","memberName":"length","nodeType":"MemberAccess","src":"10403:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10391:11:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":2142,"name":"bytes","nodeType":"ElementaryTypeName","src":"10395:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2143,"nodeType":"ArrayTypeName","src":"10395:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10391:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"10381:34:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2149,"nodeType":"ExpressionStatement","src":"10381:34:17"},{"body":{"id":2197,"nodeType":"Block","src":"10460:872:17","statements":[{"assignments":[2158,2160],"declarations":[{"constant":false,"id":2158,"mutability":"mutable","name":"success","nameLocation":"10480:7:17","nodeType":"VariableDeclaration","scope":2197,"src":"10475:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2157,"name":"bool","nodeType":"ElementaryTypeName","src":"10475:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2160,"mutability":"mutable","name":"result","nameLocation":"10502:6:17","nodeType":"VariableDeclaration","scope":2197,"src":"10489:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2159,"name":"bytes","nodeType":"ElementaryTypeName","src":"10489:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2170,"initialValue":{"arguments":[{"baseExpression":{"id":2166,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"10556:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":2168,"indexExpression":{"id":2167,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"10561:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10556:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":2163,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10520:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_LSP7DigitalAsset_$3142","typeString":"contract LSP7DigitalAsset"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LSP7DigitalAsset_$3142","typeString":"contract LSP7DigitalAsset"}],"id":2162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10512:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2161,"name":"address","nodeType":"ElementaryTypeName","src":"10512:7:17","typeDescriptions":{}}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10512:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10526:12:17","memberName":"delegatecall","nodeType":"MemberAccess","src":"10512:26:17","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10512:65:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10474:103:17"},{"condition":{"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10596:8:17","subExpression":{"id":2171,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"10597:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2186,"nodeType":"IfStatement","src":"10592:636:17","trueBody":{"id":2185,"nodeType":"Block","src":"10606:622:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2173,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"10698:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10705:6:17","memberName":"length","nodeType":"MemberAccess","src":"10698:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10715:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10698:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2183,"nodeType":"Block","src":"11131:83:17","statements":[{"errorCall":{"arguments":[{"id":2180,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"11192:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2179,"name":"LSP7BatchCallFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"11160:19:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["11181:9:17"],"names":["callIndex"],"nodeType":"FunctionCall","src":"11160:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2182,"nodeType":"RevertStatement","src":"11153:42:17"}]},"id":2184,"nodeType":"IfStatement","src":"10694:520:17","trueBody":{"id":2178,"nodeType":"Block","src":"10718:407:17","statements":[{"AST":{"nodeType":"YulBlock","src":"10958:149:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10984:36:17","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"11013:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11007:5:17"},"nodeType":"YulFunctionCall","src":"11007:13:17"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"10988:15:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11056:2:17","type":"","value":"32"},{"name":"result","nodeType":"YulIdentifier","src":"11060:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11052:3:17"},"nodeType":"YulFunctionCall","src":"11052:15:17"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"11069:15:17"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11045:6:17"},"nodeType":"YulFunctionCall","src":"11045:40:17"},"nodeType":"YulExpressionStatement","src":"11045:40:17"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2160,"isOffset":false,"isSlot":false,"src":"11013:6:17","valueSize":1},{"declaration":2160,"isOffset":false,"isSlot":false,"src":"11060:6:17","valueSize":1}],"id":2177,"nodeType":"InlineAssembly","src":"10949:158:17"}]}}]}},{"expression":{"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2187,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"11242:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2189,"indexExpression":{"id":2188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"11250:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11242:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2190,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"11255:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"11242:19:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2192,"nodeType":"ExpressionStatement","src":"11242:19:17"},{"id":2196,"nodeType":"UncheckedBlock","src":"11276:46:17","statements":[{"expression":{"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"11304:3:17","subExpression":{"id":2193,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"11306:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2195,"nodeType":"ExpressionStatement","src":"11304:3:17"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2153,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"10441:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2154,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"10445:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10450:6:17","memberName":"length","nodeType":"MemberAccess","src":"10445:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10441:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2198,"initializationExpression":{"assignments":[2151],"declarations":[{"constant":false,"id":2151,"mutability":"mutable","name":"i","nameLocation":"10438:1:17","nodeType":"VariableDeclaration","scope":2198,"src":"10430:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"10430:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2152,"nodeType":"VariableDeclarationStatement","src":"10430:9:17"},"nodeType":"ForStatement","src":"10425:907:17"}]},"documentation":{"id":2131,"nodeType":"StructuredDocumentation","src":"10086:166:17","text":" @inheritdoc ILSP7DigitalAsset\n @custom:info It's not possible to send value along the functions call due to the use of `delegatecall`."},"functionSelector":"6963d438","id":2200,"implemented":true,"kind":"function","modifiers":[],"name":"batchCalls","nameLocation":"10266:10:17","nodeType":"FunctionDefinition","overrides":{"id":2136,"nodeType":"OverrideSpecifier","overrides":[],"src":"10329:8:17"},"parameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2134,"mutability":"mutable","name":"data","nameLocation":"10303:4:17","nodeType":"VariableDeclaration","scope":2200,"src":"10286:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2132,"name":"bytes","nodeType":"ElementaryTypeName","src":"10286:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2133,"nodeType":"ArrayTypeName","src":"10286:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"10276:37:17"},"returnParameters":{"id":2140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"mutability":"mutable","name":"results","nameLocation":"10362:7:17","nodeType":"VariableDeclaration","scope":2200,"src":"10347:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2137,"name":"bytes","nodeType":"ElementaryTypeName","src":"10347:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2138,"nodeType":"ArrayTypeName","src":"10347:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"10346:24:17"},"scope":3142,"src":"10257:1081:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1695],"body":{"id":2235,"nodeType":"Block","src":"11964:352:17","statements":[{"expression":{"arguments":[{"expression":{"id":2212,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12003:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:17","memberName":"sender","nodeType":"MemberAccess","src":"12003:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2214,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"12027:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2215,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"12049:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12069:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2217,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"12087:24:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2211,"name":"_updateOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"11974:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bool,bytes memory)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11974:147:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2219,"nodeType":"ExpressionStatement","src":"11974:147:17"},{"assignments":[2221],"declarations":[{"constant":false,"id":2221,"mutability":"mutable","name":"lsp1Data","nameLocation":"12145:8:17","nodeType":"VariableDeclaration","scope":2235,"src":"12132:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2220,"name":"bytes","nodeType":"ElementaryTypeName","src":"12132:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2229,"initialValue":{"arguments":[{"expression":{"id":2224,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12180:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12184:6:17","memberName":"sender","nodeType":"MemberAccess","src":"12180:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2226,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"12204:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2227,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"12224:24:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2222,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12156:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12160:6:17","memberName":"encode","nodeType":"MemberAccess","src":"12156:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12156:102:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12132:126:17"},{"expression":{"arguments":[{"id":2231,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"12290:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2232,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"12300:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2230,"name":"_notifyTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"12269:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12269:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2234,"nodeType":"ExpressionStatement","src":"12269:40:17"}]},"documentation":{"id":2201,"nodeType":"StructuredDocumentation","src":"11379:426:17","text":" @inheritdoc ILSP7DigitalAsset\n @custom:danger To avoid front-running and Allowance Double-Spend Exploit when\n increasing or decreasing the authorized amount of an operator, it is advised to\n use the {increaseAllowance} and {decreaseAllowance} functions.\n For more information, see:\n https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/"},"functionSelector":"b49506fd","id":2236,"implemented":true,"kind":"function","modifiers":[],"name":"authorizeOperator","nameLocation":"11819:17:17","nodeType":"FunctionDefinition","overrides":{"id":2209,"nodeType":"OverrideSpecifier","overrides":[],"src":"11955:8:17"},"parameters":{"id":2208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"operator","nameLocation":"11854:8:17","nodeType":"VariableDeclaration","scope":2236,"src":"11846:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2202,"name":"address","nodeType":"ElementaryTypeName","src":"11846:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2205,"mutability":"mutable","name":"amount","nameLocation":"11880:6:17","nodeType":"VariableDeclaration","scope":2236,"src":"11872:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2204,"name":"uint256","nodeType":"ElementaryTypeName","src":"11872:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2207,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"11909:24:17","nodeType":"VariableDeclaration","scope":2236,"src":"11896:37:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2206,"name":"bytes","nodeType":"ElementaryTypeName","src":"11896:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11836:103:17"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[],"src":"11964:0:17"},"scope":3142,"src":"11810:506:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1707],"body":{"id":2292,"nodeType":"Block","src":"12551:625:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2249,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12565:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12569:6:17","memberName":"sender","nodeType":"MemberAccess","src":"12565:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2251,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"12579:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12565:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2253,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12593:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12597:6:17","memberName":"sender","nodeType":"MemberAccess","src":"12593:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2255,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"12607:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12593:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12565:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2266,"nodeType":"IfStatement","src":"12561:215:17","trueBody":{"id":2265,"nodeType":"Block","src":"12617:159:17","statements":[{"errorCall":{"arguments":[{"expression":{"id":2259,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12687:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12691:6:17","memberName":"sender","nodeType":"MemberAccess","src":"12687:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2261,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"12715:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2262,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"12743:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2258,"name":"LSP7RevokeOperatorNotAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"12638:31:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address) pure"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12638:127:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2264,"nodeType":"RevertStatement","src":"12631:134:17"}]}},{"expression":{"arguments":[{"id":2268,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"12815:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2269,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"12839:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12861:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2271,"name":"notify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"12876:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2272,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"12896:24:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2267,"name":"_updateOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"12786:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bool,bytes memory)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12786:144:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2274,"nodeType":"ExpressionStatement","src":"12786:144:17"},{"condition":{"id":2275,"name":"notify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"12945:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2291,"nodeType":"IfStatement","src":"12941:229:17","trueBody":{"id":2290,"nodeType":"Block","src":"12953:217:17","statements":[{"assignments":[2277],"declarations":[{"constant":false,"id":2277,"mutability":"mutable","name":"lsp1Data","nameLocation":"12980:8:17","nodeType":"VariableDeclaration","scope":2290,"src":"12967:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2276,"name":"bytes","nodeType":"ElementaryTypeName","src":"12967:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2284,"initialValue":{"arguments":[{"id":2280,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"13019:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13047:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2282,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"13066:24:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2278,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12991:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12995:6:17","memberName":"encode","nodeType":"MemberAccess","src":"12991:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12991:113:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12967:137:17"},{"expression":{"arguments":[{"id":2286,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"13140:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2287,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"13150:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2285,"name":"_notifyTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"13119:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13119:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2289,"nodeType":"ExpressionStatement","src":"13119:40:17"}]}}]},"documentation":{"id":2237,"nodeType":"StructuredDocumentation","src":"12322:48:17","text":" @inheritdoc ILSP7DigitalAsset"},"functionSelector":"30d0dc37","id":2293,"implemented":true,"kind":"function","modifiers":[],"name":"revokeOperator","nameLocation":"12384:14:17","nodeType":"FunctionDefinition","overrides":{"id":2247,"nodeType":"OverrideSpecifier","overrides":[],"src":"12542:8:17"},"parameters":{"id":2246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"operator","nameLocation":"12416:8:17","nodeType":"VariableDeclaration","scope":2293,"src":"12408:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2238,"name":"address","nodeType":"ElementaryTypeName","src":"12408:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"tokenOwner","nameLocation":"12442:10:17","nodeType":"VariableDeclaration","scope":2293,"src":"12434:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2240,"name":"address","nodeType":"ElementaryTypeName","src":"12434:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2243,"mutability":"mutable","name":"notify","nameLocation":"12467:6:17","nodeType":"VariableDeclaration","scope":2293,"src":"12462:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2242,"name":"bool","nodeType":"ElementaryTypeName","src":"12462:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2245,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"12496:24:17","nodeType":"VariableDeclaration","scope":2293,"src":"12483:37:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2244,"name":"bytes","nodeType":"ElementaryTypeName","src":"12483:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12398:128:17"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[],"src":"12551:0:17"},"scope":3142,"src":"12375:801:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1739],"body":{"id":2320,"nodeType":"Block","src":"13371:192:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2304,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"13385:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2305,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"13399:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13385:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2318,"nodeType":"Block","src":"13478:79:17","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2312,"name":"_operatorAuthorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"13499:25:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2314,"indexExpression":{"id":2313,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"13525:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13499:37:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2316,"indexExpression":{"id":2315,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"13537:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13499:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2303,"id":2317,"nodeType":"Return","src":"13492:54:17"}]},"id":2319,"nodeType":"IfStatement","src":"13381:176:17","trueBody":{"id":2311,"nodeType":"Block","src":"13409:63:17","statements":[{"expression":{"baseExpression":{"id":2307,"name":"_tokenOwnerBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"13430:19:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2309,"indexExpression":{"id":2308,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"13450:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13430:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2303,"id":2310,"nodeType":"Return","src":"13423:38:17"}]}}]},"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"13182:48:17","text":" @inheritdoc ILSP7DigitalAsset"},"functionSelector":"65aeaa95","id":2321,"implemented":true,"kind":"function","modifiers":[],"name":"authorizedAmountFor","nameLocation":"13244:19:17","nodeType":"FunctionDefinition","overrides":{"id":2300,"nodeType":"OverrideSpecifier","overrides":[],"src":"13344:8:17"},"parameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"operator","nameLocation":"13281:8:17","nodeType":"VariableDeclaration","scope":2321,"src":"13273:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2295,"name":"address","nodeType":"ElementaryTypeName","src":"13273:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"tokenOwner","nameLocation":"13307:10:17","nodeType":"VariableDeclaration","scope":2321,"src":"13299:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2297,"name":"address","nodeType":"ElementaryTypeName","src":"13299:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13263:60:17"},"returnParameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2321,"src":"13362:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"13362:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13361:9:17"},"scope":3142,"src":"13235:328:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1748],"body":{"id":2337,"nodeType":"Block","src":"13736:55:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2331,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"13753:10:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AddressSet_$3919_storage_$","typeString":"mapping(address => struct EnumerableSet.AddressSet storage ref)"}},"id":2333,"indexExpression":{"id":2332,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"13764:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13753:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":2334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13776:6:17","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":4072,"src":"13753:29:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3919_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$3919_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13753:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2330,"id":2336,"nodeType":"Return","src":"13746:38:17"}]},"documentation":{"id":2322,"nodeType":"StructuredDocumentation","src":"13569:48:17","text":" @inheritdoc ILSP7DigitalAsset"},"functionSelector":"d72fc29a","id":2338,"implemented":true,"kind":"function","modifiers":[],"name":"getOperatorsOf","nameLocation":"13631:14:17","nodeType":"FunctionDefinition","overrides":{"id":2326,"nodeType":"OverrideSpecifier","overrides":[],"src":"13700:8:17"},"parameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2324,"mutability":"mutable","name":"tokenOwner","nameLocation":"13663:10:17","nodeType":"VariableDeclaration","scope":2338,"src":"13655:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"13655:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13645:34:17"},"returnParameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2338,"src":"13718:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2327,"name":"address","nodeType":"ElementaryTypeName","src":"13718:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2328,"nodeType":"ArrayTypeName","src":"13718:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"13717:18:17"},"scope":3142,"src":"13622:169:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1717],"body":{"id":2395,"nodeType":"Block","src":"14009:603:17","statements":[{"assignments":[2350],"declarations":[{"constant":false,"id":2350,"mutability":"mutable","name":"oldAllowance","nameLocation":"14027:12:17","nodeType":"VariableDeclaration","scope":2395,"src":"14019:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"14019:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2356,"initialValue":{"arguments":[{"id":2352,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"14062:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2353,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14072:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14076:6:17","memberName":"sender","nodeType":"MemberAccess","src":"14072:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2351,"name":"authorizedAmountFor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"14042:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14042:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14019:64:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2357,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"14097:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14113:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14097:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2364,"nodeType":"IfStatement","src":"14093:94:17","trueBody":{"errorCall":{"arguments":[{"id":2361,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"14178:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2360,"name":"OperatorAllowanceCannotBeIncreasedFromZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"14135:42:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14135:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2363,"nodeType":"RevertStatement","src":"14128:59:17"}},{"assignments":[2366],"declarations":[{"constant":false,"id":2366,"mutability":"mutable","name":"newAllowance","nameLocation":"14206:12:17","nodeType":"VariableDeclaration","scope":2395,"src":"14198:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"14198:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2370,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2367,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"14221:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2368,"name":"addedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"14236:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14221:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14198:49:17"},{"expression":{"arguments":[{"expression":{"id":2372,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14287:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14291:6:17","memberName":"sender","nodeType":"MemberAccess","src":"14287:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2374,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"14311:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2375,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"14333:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14359:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2377,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"14377:24:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2371,"name":"_updateOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"14258:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bool,bytes memory)"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14258:153:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2379,"nodeType":"ExpressionStatement","src":"14258:153:17"},{"assignments":[2381],"declarations":[{"constant":false,"id":2381,"mutability":"mutable","name":"lsp1Data","nameLocation":"14435:8:17","nodeType":"VariableDeclaration","scope":2395,"src":"14422:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2380,"name":"bytes","nodeType":"ElementaryTypeName","src":"14422:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2389,"initialValue":{"arguments":[{"expression":{"id":2384,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14470:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14474:6:17","memberName":"sender","nodeType":"MemberAccess","src":"14470:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2386,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"14494:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2387,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"14520:24:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2382,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14446:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14450:6:17","memberName":"encode","nodeType":"MemberAccess","src":"14446:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14446:108:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"14422:132:17"},{"expression":{"arguments":[{"id":2391,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"14586:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2392,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"14596:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2390,"name":"_notifyTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"14565:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14565:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2394,"nodeType":"ExpressionStatement","src":"14565:40:17"}]},"documentation":{"id":2339,"nodeType":"StructuredDocumentation","src":"13797:48:17","text":" @inheritdoc ILSP7DigitalAsset"},"functionSelector":"2bc1da82","id":2396,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"13859:17:17","nodeType":"FunctionDefinition","overrides":{"id":2347,"nodeType":"OverrideSpecifier","overrides":[],"src":"14000:8:17"},"parameters":{"id":2346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"operator","nameLocation":"13894:8:17","nodeType":"VariableDeclaration","scope":2396,"src":"13886:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2340,"name":"address","nodeType":"ElementaryTypeName","src":"13886:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2343,"mutability":"mutable","name":"addedAmount","nameLocation":"13920:11:17","nodeType":"VariableDeclaration","scope":2396,"src":"13912:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"13912:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2345,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"13954:24:17","nodeType":"VariableDeclaration","scope":2396,"src":"13941:37:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2344,"name":"bytes","nodeType":"ElementaryTypeName","src":"13941:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13876:108:17"},"returnParameters":{"id":2348,"nodeType":"ParameterList","parameters":[],"src":"14009:0:17"},"scope":3142,"src":"13850:762:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1729],"body":{"id":2474,"nodeType":"Block","src":"14863:938:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2409,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14877:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14881:6:17","memberName":"sender","nodeType":"MemberAccess","src":"14877:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2411,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"14891:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14877:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14905:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14909:6:17","memberName":"sender","nodeType":"MemberAccess","src":"14905:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2415,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"14919:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14905:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14877:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2426,"nodeType":"IfStatement","src":"14873:218:17","trueBody":{"id":2425,"nodeType":"Block","src":"14929:162:17","statements":[{"errorCall":{"arguments":[{"expression":{"id":2419,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15002:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15006:6:17","memberName":"sender","nodeType":"MemberAccess","src":"15002:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2421,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"15030:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2422,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"15058:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2418,"name":"LSP7DecreaseAllowanceNotAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"14950:34:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address) pure"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14950:130:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2424,"nodeType":"RevertStatement","src":"14943:137:17"}]}},{"assignments":[2428],"declarations":[{"constant":false,"id":2428,"mutability":"mutable","name":"currentAllowance","nameLocation":"15109:16:17","nodeType":"VariableDeclaration","scope":2474,"src":"15101:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"15101:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2433,"initialValue":{"arguments":[{"id":2430,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"15148:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2431,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"15158:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2429,"name":"authorizedAmountFor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"15128:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15128:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15101:68:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2434,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"15183:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2435,"name":"subtractedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"15202:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15183:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2441,"nodeType":"IfStatement","src":"15179:106:17","trueBody":{"id":2440,"nodeType":"Block","src":"15220:65:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2437,"name":"LSP7DecreasedAllowanceBelowZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"15241:31:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15241:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2439,"nodeType":"RevertStatement","src":"15234:40:17"}]}},{"assignments":[2443],"declarations":[{"constant":false,"id":2443,"mutability":"mutable","name":"newAllowance","nameLocation":"15303:12:17","nodeType":"VariableDeclaration","scope":2474,"src":"15295:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"15295:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2444,"nodeType":"VariableDeclarationStatement","src":"15295:20:17"},{"id":2459,"nodeType":"UncheckedBlock","src":"15325:276:17","statements":[{"expression":{"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2445,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"15349:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2446,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"15364:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2447,"name":"subtractedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"15383:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15364:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15349:50:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2450,"nodeType":"ExpressionStatement","src":"15349:50:17"},{"expression":{"arguments":[{"id":2452,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"15446:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2453,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"15474:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2454,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"15500:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15530:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2456,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"15552:24:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2451,"name":"_updateOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"15413:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bool,bytes memory)"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15413:177:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2458,"nodeType":"ExpressionStatement","src":"15413:177:17"}]},{"assignments":[2461],"declarations":[{"constant":false,"id":2461,"mutability":"mutable","name":"lsp1Data","nameLocation":"15624:8:17","nodeType":"VariableDeclaration","scope":2474,"src":"15611:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2460,"name":"bytes","nodeType":"ElementaryTypeName","src":"15611:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2468,"initialValue":{"arguments":[{"id":2464,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"15659:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2465,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"15683:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2466,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"15709:24:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2462,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15635:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15639:6:17","memberName":"encode","nodeType":"MemberAccess","src":"15635:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15635:108:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"15611:132:17"},{"expression":{"arguments":[{"id":2470,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"15775:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2471,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"15785:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2469,"name":"_notifyTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"15754:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15754:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2473,"nodeType":"ExpressionStatement","src":"15754:40:17"}]},"documentation":{"id":2397,"nodeType":"StructuredDocumentation","src":"14618:48:17","text":" @inheritdoc ILSP7DigitalAsset"},"functionSelector":"78381670","id":2475,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"14680:17:17","nodeType":"FunctionDefinition","overrides":{"id":2407,"nodeType":"OverrideSpecifier","overrides":[],"src":"14854:8:17"},"parameters":{"id":2406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2399,"mutability":"mutable","name":"operator","nameLocation":"14715:8:17","nodeType":"VariableDeclaration","scope":2475,"src":"14707:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2398,"name":"address","nodeType":"ElementaryTypeName","src":"14707:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2401,"mutability":"mutable","name":"tokenOwner","nameLocation":"14741:10:17","nodeType":"VariableDeclaration","scope":2475,"src":"14733:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2400,"name":"address","nodeType":"ElementaryTypeName","src":"14733:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2403,"mutability":"mutable","name":"subtractedAmount","nameLocation":"14769:16:17","nodeType":"VariableDeclaration","scope":2475,"src":"14761:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"14761:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2405,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"14808:24:17","nodeType":"VariableDeclaration","scope":2475,"src":"14795:37:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2404,"name":"bytes","nodeType":"ElementaryTypeName","src":"14795:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14697:141:17"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[],"src":"14863:0:17"},"scope":3142,"src":"14671:1130:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1762],"body":{"id":2511,"nodeType":"Block","src":"16056:258:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2490,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16070:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16074:6:17","memberName":"sender","nodeType":"MemberAccess","src":"16070:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2492,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"16084:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16070:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2502,"nodeType":"IfStatement","src":"16066:191:17","trueBody":{"id":2501,"nodeType":"Block","src":"16090:167:17","statements":[{"expression":{"arguments":[{"expression":{"id":2495,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16148:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16152:6:17","memberName":"sender","nodeType":"MemberAccess","src":"16148:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2497,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"16188:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2498,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"16225:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2494,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"16104:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["16138:8:17","16176:10:17","16210:13:17"],"names":["operator","tokenOwner","amountToSpend"],"nodeType":"FunctionCall","src":"16104:142:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2500,"nodeType":"ExpressionStatement","src":"16104:142:17"}]}},{"expression":{"arguments":[{"id":2504,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"16277:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2505,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"16283:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2506,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"16287:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2507,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"16295:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2508,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"16302:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2503,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"16267:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bool,bytes memory)"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16267:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2510,"nodeType":"ExpressionStatement","src":"16267:40:17"}]},"documentation":{"id":2476,"nodeType":"StructuredDocumentation","src":"15842:48:17","text":" @inheritdoc ILSP7DigitalAsset"},"functionSelector":"760d9bba","id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"15904:8:17","nodeType":"FunctionDefinition","overrides":{"id":2488,"nodeType":"OverrideSpecifier","overrides":[],"src":"16047:8:17"},"parameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"from","nameLocation":"15930:4:17","nodeType":"VariableDeclaration","scope":2512,"src":"15922:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2477,"name":"address","nodeType":"ElementaryTypeName","src":"15922:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2480,"mutability":"mutable","name":"to","nameLocation":"15952:2:17","nodeType":"VariableDeclaration","scope":2512,"src":"15944:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2479,"name":"address","nodeType":"ElementaryTypeName","src":"15944:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2482,"mutability":"mutable","name":"amount","nameLocation":"15972:6:17","nodeType":"VariableDeclaration","scope":2512,"src":"15964:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"15964:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2484,"mutability":"mutable","name":"force","nameLocation":"15993:5:17","nodeType":"VariableDeclaration","scope":2512,"src":"15988:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2483,"name":"bool","nodeType":"ElementaryTypeName","src":"15988:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2486,"mutability":"mutable","name":"data","nameLocation":"16021:4:17","nodeType":"VariableDeclaration","scope":2512,"src":"16008:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2485,"name":"bytes","nodeType":"ElementaryTypeName","src":"16008:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15912:119:17"},"returnParameters":{"id":2489,"nodeType":"ParameterList","parameters":[],"src":"16056:0:17"},"scope":3142,"src":"15895:419:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1781],"body":{"id":2591,"nodeType":"Block","src":"16577:575:17","statements":[{"assignments":[2533],"declarations":[{"constant":false,"id":2533,"mutability":"mutable","name":"fromLength","nameLocation":"16595:10:17","nodeType":"VariableDeclaration","scope":2591,"src":"16587:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"16587:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2536,"initialValue":{"expression":{"id":2534,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"16608:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16613:6:17","memberName":"length","nodeType":"MemberAccess","src":"16608:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16587:32:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2537,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"16646:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2538,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"16660:2:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16663:6:17","memberName":"length","nodeType":"MemberAccess","src":"16660:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16646:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2541,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"16685:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2542,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"16699:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16706:6:17","memberName":"length","nodeType":"MemberAccess","src":"16699:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16685:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16646:66:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2546,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"16728:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2547,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"16742:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16748:6:17","memberName":"length","nodeType":"MemberAccess","src":"16742:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16728:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16646:108:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2551,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"16770:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2552,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"16784:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16789:6:17","memberName":"length","nodeType":"MemberAccess","src":"16784:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16770:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16646:149:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2560,"nodeType":"IfStatement","src":"16629:235:17","trueBody":{"id":2559,"nodeType":"Block","src":"16806:58:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2556,"name":"LSP7InvalidTransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"16827:24:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16827:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2558,"nodeType":"RevertStatement","src":"16820:33:17"}]}},{"body":{"id":2589,"nodeType":"Block","src":"16908:238:17","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2568,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"17030:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2570,"indexExpression":{"id":2569,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"17035:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17030:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2571,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"17039:2:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2573,"indexExpression":{"id":2572,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"17042:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17039:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2574,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"17046:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2576,"indexExpression":{"id":2575,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"17053:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17046:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2577,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"17057:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":2579,"indexExpression":{"id":2578,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"17063:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17057:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"baseExpression":{"id":2580,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"17067:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2582,"indexExpression":{"id":2581,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"17072:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17067:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2567,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"17021:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bool,bytes memory)"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17021:54:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2584,"nodeType":"ExpressionStatement","src":"17021:54:17"},{"id":2588,"nodeType":"UncheckedBlock","src":"17090:46:17","statements":[{"expression":{"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17118:3:17","subExpression":{"id":2585,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"17120:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2587,"nodeType":"ExpressionStatement","src":"17118:3:17"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2564,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"16890:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2565,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"16894:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16890:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2590,"initializationExpression":{"assignments":[2562],"declarations":[{"constant":false,"id":2562,"mutability":"mutable","name":"i","nameLocation":"16887:1:17","nodeType":"VariableDeclaration","scope":2590,"src":"16879:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"16879:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2563,"nodeType":"VariableDeclarationStatement","src":"16879:9:17"},"nodeType":"ForStatement","src":"16874:272:17"}]},"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"16320:48:17","text":" @inheritdoc ILSP7DigitalAsset"},"functionSelector":"2d7667c9","id":2592,"implemented":true,"kind":"function","modifiers":[],"name":"transferBatch","nameLocation":"16382:13:17","nodeType":"FunctionDefinition","overrides":{"id":2530,"nodeType":"OverrideSpecifier","overrides":[],"src":"16568:8:17"},"parameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"from","nameLocation":"16422:4:17","nodeType":"VariableDeclaration","scope":2592,"src":"16405:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2514,"name":"address","nodeType":"ElementaryTypeName","src":"16405:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2515,"nodeType":"ArrayTypeName","src":"16405:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2519,"mutability":"mutable","name":"to","nameLocation":"16453:2:17","nodeType":"VariableDeclaration","scope":2592,"src":"16436:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2517,"name":"address","nodeType":"ElementaryTypeName","src":"16436:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2518,"nodeType":"ArrayTypeName","src":"16436:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2522,"mutability":"mutable","name":"amount","nameLocation":"16482:6:17","nodeType":"VariableDeclaration","scope":2592,"src":"16465:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"16465:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2521,"nodeType":"ArrayTypeName","src":"16465:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"force","nameLocation":"16512:5:17","nodeType":"VariableDeclaration","scope":2592,"src":"16498:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":2523,"name":"bool","nodeType":"ElementaryTypeName","src":"16498:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2524,"nodeType":"ArrayTypeName","src":"16498:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":2528,"mutability":"mutable","name":"data","nameLocation":"16542:4:17","nodeType":"VariableDeclaration","scope":2592,"src":"16527:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2526,"name":"bytes","nodeType":"ElementaryTypeName","src":"16527:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2527,"nodeType":"ArrayTypeName","src":"16527:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"16395:157:17"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[],"src":"16577:0:17"},"scope":3142,"src":"16373:779:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2667,"nodeType":"Block","src":"18575:799:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2606,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"18589:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18609:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18601:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2607,"name":"address","nodeType":"ElementaryTypeName","src":"18601:7:17","typeDescriptions":{}}},"id":2610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18601:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18589:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2616,"nodeType":"IfStatement","src":"18585:96:17","trueBody":{"id":2615,"nodeType":"Block","src":"18613:68:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2612,"name":"LSP7CannotUseAddressZeroAsOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"18634:34:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18634:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2614,"nodeType":"RevertStatement","src":"18627:43:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2617,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"18695:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2618,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"18707:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18695:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2624,"nodeType":"IfStatement","src":"18691:92:17","trueBody":{"id":2623,"nodeType":"Block","src":"18719:64:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2620,"name":"LSP7TokenOwnerCannotBeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"18740:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18740:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2622,"nodeType":"RevertStatement","src":"18733:39:17"}]}},{"expression":{"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2625,"name":"_operatorAuthorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"18793:25:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2628,"indexExpression":{"id":2626,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"18819:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18793:37:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2629,"indexExpression":{"id":2627,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"18831:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18793:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2630,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"18843:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18793:59:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2632,"nodeType":"ExpressionStatement","src":"18793:59:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2633,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"18867:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18880:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18867:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2665,"nodeType":"Block","src":"19134:234:17","statements":[{"expression":{"arguments":[{"id":2655,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"19178:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":2651,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"19148:10:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AddressSet_$3919_storage_$","typeString":"mapping(address => struct EnumerableSet.AddressSet storage ref)"}},"id":2653,"indexExpression":{"id":2652,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"19159:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19148:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":2654,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19171:6:17","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":3973,"src":"19148:29:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3919_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3919_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19148:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2657,"nodeType":"ExpressionStatement","src":"19148:39:17"},{"eventCall":{"arguments":[{"id":2659,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"19239:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2660,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"19265:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2661,"name":"notified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"19293:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2662,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"19319:24:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2658,"name":"OperatorRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"19206:15:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bool,bytes memory)"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:151:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2664,"nodeType":"EmitStatement","src":"19201:156:17"}]},"id":2666,"nodeType":"IfStatement","src":"18863:505:17","trueBody":{"id":2650,"nodeType":"Block","src":"18883:245:17","statements":[{"expression":{"arguments":[{"id":2640,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"18924:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":2636,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"18897:10:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AddressSet_$3919_storage_$","typeString":"mapping(address => struct EnumerableSet.AddressSet storage ref)"}},"id":2638,"indexExpression":{"id":2637,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"18908:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18897:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":2639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18920:3:17","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3946,"src":"18897:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3919_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3919_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18897:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2642,"nodeType":"ExpressionStatement","src":"18897:36:17"},{"eventCall":{"arguments":[{"id":2644,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"18998:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2645,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"19024:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2646,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"19052:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2647,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"19079:24:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2643,"name":"OperatorAuthorizationChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"18952:28:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18952:165:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2649,"nodeType":"EmitStatement","src":"18947:170:17"}]}}]},"documentation":{"id":2593,"nodeType":"StructuredDocumentation","src":"17158:1213:17","text":" @dev Changes token `amount` the `operator` has access to from `tokenOwner` tokens.\n If the amount is zero the operator is removed from the list of operators, otherwise he is added to the list of operators.\n If the amount is zero then the operator is being revoked, otherwise the operator amount is being modified.\n @param tokenOwner The address that will give `operator` an allowance for on its balance.\n @param operator The address to grant an allowance to spend.\n @param allowance The maximum amount of token that `operator` can spend from the `tokenOwner`'s balance.\n @param notified Boolean indicating whether the operator has been notified about the change of allowance\n @param operatorNotificationData The data to send to the universalReceiver function of the operator in case of notifying\n @custom:events\n - {OperatorRevoked} event when operator's allowance is set to `0`.\n - {OperatorAuthorizationChanged} event when operator's allowance is set to any other amount.\n @custom:requirements\n - `operator` cannot be the zero address.\n - `operator` cannot be the same address as `tokenOwner`."},"id":2668,"implemented":true,"kind":"function","modifiers":[],"name":"_updateOperator","nameLocation":"18385:15:17","nodeType":"FunctionDefinition","parameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"tokenOwner","nameLocation":"18418:10:17","nodeType":"VariableDeclaration","scope":2668,"src":"18410:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2594,"name":"address","nodeType":"ElementaryTypeName","src":"18410:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2597,"mutability":"mutable","name":"operator","nameLocation":"18446:8:17","nodeType":"VariableDeclaration","scope":2668,"src":"18438:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2596,"name":"address","nodeType":"ElementaryTypeName","src":"18438:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"allowance","nameLocation":"18472:9:17","nodeType":"VariableDeclaration","scope":2668,"src":"18464:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"18464:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2601,"mutability":"mutable","name":"notified","nameLocation":"18496:8:17","nodeType":"VariableDeclaration","scope":2668,"src":"18491:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2600,"name":"bool","nodeType":"ElementaryTypeName","src":"18491:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2603,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"18527:24:17","nodeType":"VariableDeclaration","scope":2668,"src":"18514:37:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2602,"name":"bytes","nodeType":"ElementaryTypeName","src":"18514:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18400:157:17"},"returnParameters":{"id":2605,"nodeType":"ParameterList","parameters":[],"src":"18575:0:17"},"scope":3142,"src":"18376:998:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2745,"nodeType":"Block","src":"20360:499:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2680,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"20374:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20388:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20380:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2681,"name":"address","nodeType":"ElementaryTypeName","src":"20380:7:17","typeDescriptions":{}}},"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20380:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20374:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2690,"nodeType":"IfStatement","src":"20370:85:17","trueBody":{"id":2689,"nodeType":"Block","src":"20392:63:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2686,"name":"LSP7CannotSendWithAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"20413:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20413:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2688,"nodeType":"RevertStatement","src":"20406:38:17"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20494:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20486:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2692,"name":"address","nodeType":"ElementaryTypeName","src":"20486:7:17","typeDescriptions":{}}},"id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20486:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2696,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"20498:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2697,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"20502:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2698,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"20510:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2699,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"20517:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2691,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"20465:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bool,bytes memory)"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20465:57:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2701,"nodeType":"ExpressionStatement","src":"20465:57:17"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20549:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20541:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2703,"name":"address","nodeType":"ElementaryTypeName","src":"20541:7:17","typeDescriptions":{}}},"id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20541:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2707,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"20553:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2708,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"20557:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2709,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"20565:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2710,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"20572:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2702,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"20533:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bool,bytes memory)"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20533:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2712,"nodeType":"ExpressionStatement","src":"20533:44:17"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20616:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20608:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2714,"name":"address","nodeType":"ElementaryTypeName","src":"20608:7:17","typeDescriptions":{}}},"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20608:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2718,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"20620:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2719,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"20624:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2720,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"20632:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2721,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"20639:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2713,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"20588:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bool,bytes memory)"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2723,"nodeType":"ExpressionStatement","src":"20588:56:17"},{"assignments":[2725],"declarations":[{"constant":false,"id":2725,"mutability":"mutable","name":"lsp1Data","nameLocation":"20668:8:17","nodeType":"VariableDeclaration","scope":2745,"src":"20655:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2724,"name":"bytes","nodeType":"ElementaryTypeName","src":"20655:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2738,"initialValue":{"arguments":[{"expression":{"id":2728,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20703:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20707:6:17","memberName":"sender","nodeType":"MemberAccess","src":"20703:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20735:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20727:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2730,"name":"address","nodeType":"ElementaryTypeName","src":"20727:7:17","typeDescriptions":{}}},"id":2733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20727:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2734,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"20751:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2735,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"20767:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2736,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"20787:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2726,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"20679:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20683:6:17","memberName":"encode","nodeType":"MemberAccess","src":"20679:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20679:122:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"20655:146:17"},{"expression":{"arguments":[{"id":2740,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"20832:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2741,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"20836:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2742,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"20843:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2739,"name":"_notifyTokenReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"20811:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bool,bytes memory)"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20811:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2744,"nodeType":"ExpressionStatement","src":"20811:41:17"}]},"documentation":{"id":2669,"nodeType":"StructuredDocumentation","src":"19380:846:17","text":" @dev Mints `amount` of tokens and transfers it to `to`.\n @custom:info Any logic in the:\n - {_beforeTokenTransfer} function will run before updating the balances.\n - {_afterTokenTransfer} function will run after updating the balances, **but before notifying the recipient via LSP1**.\n @param to The address to mint tokens for.\n @param amount The amount of tokens to mint.\n @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n @param data Additional data the caller wants included in the emitted {Transfer} event, and sent in the LSP1 hook to the `to` address.\n @custom:requirements\n - `to` cannot be the zero address.\n @custom:events {Transfer} event with `address(0)` as `from`."},"id":2746,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"20240:5:17","nodeType":"FunctionDefinition","parameters":{"id":2678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"to","nameLocation":"20263:2:17","nodeType":"VariableDeclaration","scope":2746,"src":"20255:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2670,"name":"address","nodeType":"ElementaryTypeName","src":"20255:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"amount","nameLocation":"20283:6:17","nodeType":"VariableDeclaration","scope":2746,"src":"20275:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2672,"name":"uint256","nodeType":"ElementaryTypeName","src":"20275:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2675,"mutability":"mutable","name":"force","nameLocation":"20304:5:17","nodeType":"VariableDeclaration","scope":2746,"src":"20299:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2674,"name":"bool","nodeType":"ElementaryTypeName","src":"20299:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2677,"mutability":"mutable","name":"data","nameLocation":"20332:4:17","nodeType":"VariableDeclaration","scope":2746,"src":"20319:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2676,"name":"bytes","nodeType":"ElementaryTypeName","src":"20319:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20245:97:17"},"returnParameters":{"id":2679,"nodeType":"ParameterList","parameters":[],"src":"20360:0:17"},"scope":3142,"src":"20231:628:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2820,"nodeType":"Block","src":"22429:502:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2756,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"22443:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22459:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22451:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2757,"name":"address","nodeType":"ElementaryTypeName","src":"22451:7:17","typeDescriptions":{}}},"id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22451:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22443:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2766,"nodeType":"IfStatement","src":"22439:87:17","trueBody":{"id":2765,"nodeType":"Block","src":"22463:63:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2762,"name":"LSP7CannotSendWithAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"22484:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22484:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2764,"nodeType":"RevertStatement","src":"22477:38:17"}]}},{"expression":{"arguments":[{"id":2768,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"22557:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22571:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22563:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2769,"name":"address","nodeType":"ElementaryTypeName","src":"22563:7:17","typeDescriptions":{}}},"id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22563:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2773,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"22575:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22583:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":2775,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"22590:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2767,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"22536:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bool,bytes memory)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22536:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2777,"nodeType":"ExpressionStatement","src":"22536:59:17"},{"expression":{"arguments":[{"id":2779,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"22614:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22628:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22620:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2780,"name":"address","nodeType":"ElementaryTypeName","src":"22620:7:17","typeDescriptions":{}}},"id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22620:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2784,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"22632:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22640:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":2786,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"22647:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2778,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"22606:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bool,bytes memory)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22606:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2788,"nodeType":"ExpressionStatement","src":"22606:46:17"},{"expression":{"arguments":[{"id":2790,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"22683:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22697:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22689:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2791,"name":"address","nodeType":"ElementaryTypeName","src":"22689:7:17","typeDescriptions":{}}},"id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22689:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2795,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"22701:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22709:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":2797,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"22716:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2789,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"22663:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bool,bytes memory)"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22663:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2799,"nodeType":"ExpressionStatement","src":"22663:58:17"},{"assignments":[2801],"declarations":[{"constant":false,"id":2801,"mutability":"mutable","name":"lsp1Data","nameLocation":"22745:8:17","nodeType":"VariableDeclaration","scope":2820,"src":"22732:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2800,"name":"bytes","nodeType":"ElementaryTypeName","src":"22732:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2814,"initialValue":{"arguments":[{"expression":{"id":2804,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22780:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22784:6:17","memberName":"sender","nodeType":"MemberAccess","src":"22780:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2806,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"22804:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22830:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22822:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2807,"name":"address","nodeType":"ElementaryTypeName","src":"22822:7:17","typeDescriptions":{}}},"id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22822:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2811,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"22846:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2812,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"22866:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2802,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"22756:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22760:6:17","memberName":"encode","nodeType":"MemberAccess","src":"22756:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22756:124:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"22732:148:17"},{"expression":{"arguments":[{"id":2816,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"22909:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2817,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"22915:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2815,"name":"_notifyTokenSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"22890:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22890:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2819,"nodeType":"ExpressionStatement","src":"22890:34:17"}]},"documentation":{"id":2747,"nodeType":"StructuredDocumentation","src":"20865:1448:17","text":" @dev Burns (= destroys) `amount` of tokens, decrease the `from` balance. This is done by sending them to the zero address.\n Both the sender and recipient will be notified of the token transfer through the LSP1 {universalReceiver}\n function, if they are contracts that support the LSP1 interface. Their `universalReceiver` function will receive\n all the parameters in the calldata packed encoded.\n @custom:info Any logic in the:\n - {_beforeTokenTransfer} function will run before updating the balances.\n - {_afterTokenTransfer} function will run after updating the balances, **but before notifying the sender via LSP1**.\n @param from The address to burn tokens from its balance.\n @param amount The amount of tokens to burn.\n @param data Additional data the caller wants included in the emitted event, and sent in the LSP1 hook to the `from` and `to` address.\n @custom:hint In dApps, you can know which address is burning tokens by listening for the `Transfer` event and filter with the zero address as `to`.\n @custom:requirements\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens.\n - If the caller is not `from`, it must be an operator for `from` with access to at least\n `amount` tokens.\n @custom:events {Transfer} event with `address(0)` as the `to` address"},"id":2821,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"22327:5:17","nodeType":"FunctionDefinition","parameters":{"id":2754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"from","nameLocation":"22350:4:17","nodeType":"VariableDeclaration","scope":2821,"src":"22342:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2748,"name":"address","nodeType":"ElementaryTypeName","src":"22342:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2751,"mutability":"mutable","name":"amount","nameLocation":"22372:6:17","nodeType":"VariableDeclaration","scope":2821,"src":"22364:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2750,"name":"uint256","nodeType":"ElementaryTypeName","src":"22364:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2753,"mutability":"mutable","name":"data","nameLocation":"22401:4:17","nodeType":"VariableDeclaration","scope":2821,"src":"22388:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2752,"name":"bytes","nodeType":"ElementaryTypeName","src":"22388:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22332:79:17"},"returnParameters":{"id":2755,"nodeType":"ParameterList","parameters":[],"src":"22429:0:17"},"scope":3142,"src":"22318:613:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2865,"nodeType":"Block","src":"23927:618:17","statements":[{"assignments":[2832],"declarations":[{"constant":false,"id":2832,"mutability":"mutable","name":"authorizedAmount","nameLocation":"23945:16:17","nodeType":"VariableDeclaration","scope":2865,"src":"23937:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2831,"name":"uint256","nodeType":"ElementaryTypeName","src":"23937:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2838,"initialValue":{"baseExpression":{"baseExpression":{"id":2833,"name":"_operatorAuthorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"23964:25:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2835,"indexExpression":{"id":2834,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"23990:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23964:37:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2837,"indexExpression":{"id":2836,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"24015:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23964:69:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23937:96:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2839,"name":"authorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"24048:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24068:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24048:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2842,"name":"amountToSpend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"24073:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2843,"name":"authorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"24089:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24073:32:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24048:57:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2854,"nodeType":"IfStatement","src":"24044:261:17","trueBody":{"id":2853,"nodeType":"Block","src":"24107:198:17","statements":[{"errorCall":{"arguments":[{"id":2847,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"24179:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2848,"name":"authorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"24207:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2849,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"24241:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2850,"name":"amountToSpend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"24267:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2846,"name":"LSP7AmountExceedsAuthorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"24128:33:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256,address,uint256) pure"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:166:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2852,"nodeType":"RevertStatement","src":"24121:173:17"}]}},{"expression":{"arguments":[{"id":2856,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"24357:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2857,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"24391:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2858,"name":"authorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"24424:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2859,"name":"amountToSpend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"24443:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24424:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24480:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24525:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2855,"name":"_updateOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"24315:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bool,bytes memory)"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["24345:10:17","24381:8:17","24413:9:17","24470:8:17","24499:24:17"],"names":["tokenOwner","operator","allowance","notified","operatorNotificationData"],"nodeType":"FunctionCall","src":"24315:223:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2864,"nodeType":"ExpressionStatement","src":"24315:223:17"}]},"documentation":{"id":2822,"nodeType":"StructuredDocumentation","src":"22937:852:17","text":" @dev Spend `amountToSpend` from the `operator`'s authorized on behalf of the `tokenOwner`.\n @param operator The address of the operator to decrease the allowance of.\n @param tokenOwner The address that granted an allowance on its balance to `operator`.\n @param amountToSpend The amount of tokens to subtract in allowance of `operator`.\n @custom:events\n - {OperatorRevoked} event when operator's allowance is set to `0`.\n - {OperatorAuthorizationChanged} event when operator's allowance is set to any other amount.\n @custom:requirements\n - The `amountToSpend` MUST be at least the allowance granted to `operator` (accessible via {`authorizedAmountFor}`)\n - `operator` cannot be the zero address.\n - `operator` cannot be the same address as `tokenOwner`."},"id":2866,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"23803:15:17","nodeType":"FunctionDefinition","parameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"operator","nameLocation":"23836:8:17","nodeType":"VariableDeclaration","scope":2866,"src":"23828:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2823,"name":"address","nodeType":"ElementaryTypeName","src":"23828:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2826,"mutability":"mutable","name":"tokenOwner","nameLocation":"23862:10:17","nodeType":"VariableDeclaration","scope":2866,"src":"23854:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2825,"name":"address","nodeType":"ElementaryTypeName","src":"23854:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2828,"mutability":"mutable","name":"amountToSpend","nameLocation":"23890:13:17","nodeType":"VariableDeclaration","scope":2866,"src":"23882:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2827,"name":"uint256","nodeType":"ElementaryTypeName","src":"23882:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23818:91:17"},"returnParameters":{"id":2830,"nodeType":"ParameterList","parameters":[],"src":"23927:0:17"},"scope":3142,"src":"23794:751:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2945,"nodeType":"Block","src":"26108:472:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2880,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"26122:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26138:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26130:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2881,"name":"address","nodeType":"ElementaryTypeName","src":"26130:7:17","typeDescriptions":{}}},"id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26130:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"26122:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2886,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"26144:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26158:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26150:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2887,"name":"address","nodeType":"ElementaryTypeName","src":"26150:7:17","typeDescriptions":{}}},"id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26150:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"26144:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26122:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2897,"nodeType":"IfStatement","src":"26118:107:17","trueBody":{"id":2896,"nodeType":"Block","src":"26162:63:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2893,"name":"LSP7CannotSendWithAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"26183:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26183:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2895,"nodeType":"RevertStatement","src":"26176:38:17"}]}},{"expression":{"arguments":[{"id":2899,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"26256:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2900,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"26262:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2901,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"26266:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2902,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"26274:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2903,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"26281:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2898,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"26235:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bool,bytes memory)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26235:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2905,"nodeType":"ExpressionStatement","src":"26235:51:17"},{"expression":{"arguments":[{"id":2907,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"26305:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2908,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"26311:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2909,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"26315:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2910,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"26323:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2911,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"26330:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2906,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"26297:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bool,bytes memory)"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26297:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2913,"nodeType":"ExpressionStatement","src":"26297:38:17"},{"expression":{"arguments":[{"id":2915,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"26366:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2916,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"26372:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2917,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"26376:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2918,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"26384:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2919,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"26391:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2914,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"26346:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bool,bytes memory)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26346:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2921,"nodeType":"ExpressionStatement","src":"26346:50:17"},{"assignments":[2923],"declarations":[{"constant":false,"id":2923,"mutability":"mutable","name":"lsp1Data","nameLocation":"26420:8:17","nodeType":"VariableDeclaration","scope":2945,"src":"26407:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2922,"name":"bytes","nodeType":"ElementaryTypeName","src":"26407:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2933,"initialValue":{"arguments":[{"expression":{"id":2926,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26442:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26446:6:17","memberName":"sender","nodeType":"MemberAccess","src":"26442:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2928,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"26454:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2929,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"26460:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2930,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"26464:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2931,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"26472:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2924,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"26431:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26435:6:17","memberName":"encode","nodeType":"MemberAccess","src":"26431:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26431:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"26407:70:17"},{"expression":{"arguments":[{"id":2935,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"26507:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2936,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"26513:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2934,"name":"_notifyTokenSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"26488:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26488:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2938,"nodeType":"ExpressionStatement","src":"26488:34:17"},{"expression":{"arguments":[{"id":2940,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"26553:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2941,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"26557:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2942,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"26564:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2939,"name":"_notifyTokenReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"26532:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bool,bytes memory)"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26532:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2944,"nodeType":"ExpressionStatement","src":"26532:41:17"}]},"documentation":{"id":2867,"nodeType":"StructuredDocumentation","src":"24551:1397:17","text":" @dev Transfer tokens from `from` to `to` by decreasing the balance of `from` by `-amount` and increasing the balance\n of `to` by `+amount`.\n Both the sender and recipient will be notified of the token transfer through the LSP1 {universalReceiver}\n function, if they are contracts that support the LSP1 interface. Their `universalReceiver` function will receive\n all the parameters in the calldata packed encoded.\n @custom:info Any logic in the:\n - {_beforeTokenTransfer} function will run before updating the balances.\n - {_afterTokenTransfer} function will run after updating the balances, **but before notifying the sender/recipient via LSP1**.\n @param from The address to decrease the balance.\n @param to The address to increase the balance.\n @param amount The amount of tokens to transfer from `from` to `to`.\n @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n @param data Additional data the caller wants included in the emitted event, and sent in the LSP1 hook to the `from` and `to` address.\n @custom:requirements\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have at least `amount` of tokens.\n @custom:events {Transfer} event."},"id":2946,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"25962:9:17","nodeType":"FunctionDefinition","parameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2869,"mutability":"mutable","name":"from","nameLocation":"25989:4:17","nodeType":"VariableDeclaration","scope":2946,"src":"25981:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2868,"name":"address","nodeType":"ElementaryTypeName","src":"25981:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2871,"mutability":"mutable","name":"to","nameLocation":"26011:2:17","nodeType":"VariableDeclaration","scope":2946,"src":"26003:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2870,"name":"address","nodeType":"ElementaryTypeName","src":"26003:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2873,"mutability":"mutable","name":"amount","nameLocation":"26031:6:17","nodeType":"VariableDeclaration","scope":2946,"src":"26023:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"26023:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2875,"mutability":"mutable","name":"force","nameLocation":"26052:5:17","nodeType":"VariableDeclaration","scope":2946,"src":"26047:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2874,"name":"bool","nodeType":"ElementaryTypeName","src":"26047:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2877,"mutability":"mutable","name":"data","nameLocation":"26080:4:17","nodeType":"VariableDeclaration","scope":2946,"src":"26067:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2876,"name":"bytes","nodeType":"ElementaryTypeName","src":"26067:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25971:119:17"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[],"src":"26108:0:17"},"scope":3142,"src":"25953:627:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3030,"nodeType":"Block","src":"27060:1231:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2960,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"27074:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27090:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27082:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2961,"name":"address","nodeType":"ElementaryTypeName","src":"27082:7:17","typeDescriptions":{}}},"id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27082:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27074:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2997,"nodeType":"Block","src":"27252:388:17","statements":[{"assignments":[2972],"declarations":[{"constant":false,"id":2972,"mutability":"mutable","name":"fromBalance","nameLocation":"27274:11:17","nodeType":"VariableDeclaration","scope":2997,"src":"27266:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2971,"name":"uint256","nodeType":"ElementaryTypeName","src":"27266:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2976,"initialValue":{"baseExpression":{"id":2973,"name":"_tokenOwnerBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"27288:19:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2975,"indexExpression":{"id":2974,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"27308:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27288:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27266:47:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2977,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"27332:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2978,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"27346:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27332:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2987,"nodeType":"IfStatement","src":"27328:117:17","trueBody":{"id":2986,"nodeType":"Block","src":"27354:91:17","statements":[{"errorCall":{"arguments":[{"id":2981,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"27404:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2982,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"27417:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2983,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"27423:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2980,"name":"LSP7AmountExceedsBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"27379:24:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256) pure"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27379:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2985,"nodeType":"RevertStatement","src":"27372:58:17"}]}},{"id":2996,"nodeType":"UncheckedBlock","src":"27459:171:17","statements":[{"expression":{"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2988,"name":"_tokenOwnerBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"27567:19:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2990,"indexExpression":{"id":2989,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"27587:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"27567:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2991,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"27595:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2992,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"27609:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27595:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27567:48:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2995,"nodeType":"ExpressionStatement","src":"27567:48:17"}]}]},"id":2998,"nodeType":"IfStatement","src":"27070:570:17","trueBody":{"id":2970,"nodeType":"Block","src":"27094:152:17","statements":[{"expression":{"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2966,"name":"_existingTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"27210:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2967,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"27229:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27210:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2969,"nodeType":"ExpressionStatement","src":"27210:25:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2999,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"27654:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27668:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27660:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3000,"name":"address","nodeType":"ElementaryTypeName","src":"27660:7:17","typeDescriptions":{}}},"id":3003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27660:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27654:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3018,"nodeType":"Block","src":"27875:218:17","statements":[{"id":3017,"nodeType":"UncheckedBlock","src":"27889:194:17","statements":[{"expression":{"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3011,"name":"_tokenOwnerBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"28035:19:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3013,"indexExpression":{"id":3012,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"28055:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"28035:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3014,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"28062:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28035:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3016,"nodeType":"ExpressionStatement","src":"28035:33:17"}]}]},"id":3019,"nodeType":"IfStatement","src":"27650:443:17","trueBody":{"id":3010,"nodeType":"Block","src":"27672:197:17","statements":[{"id":3009,"nodeType":"UncheckedBlock","src":"27686:173:17","statements":[{"expression":{"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3005,"name":"_existingTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"27819:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3006,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"27838:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27819:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3008,"nodeType":"ExpressionStatement","src":"27819:25:17"}]}]}},{"eventCall":{"arguments":[{"expression":{"id":3021,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"28141:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28145:6:17","memberName":"sender","nodeType":"MemberAccess","src":"28141:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3023,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"28171:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3024,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"28193:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3025,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"28217:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3026,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"28244:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3027,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"28269:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3020,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"28108:8:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bool,bytes memory)"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["28131:8:17","28165:4:17","28189:2:17","28209:6:17","28237:5:17","28263:4:17"],"names":["operator","from","to","amount","force","data"],"nodeType":"FunctionCall","src":"28108:176:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3029,"nodeType":"EmitStatement","src":"28103:181:17"}]},"documentation":{"id":2947,"nodeType":"StructuredDocumentation","src":"26586:316:17","text":" @dev Transfers `amount` of tokens from `from` to `to`.\n Alternatively mints or burns if `from` or `to` is the zero address.\n @custom:info All customizations to transfers, mints, and burns should be done by overriding this function.\n @custom:events {Transfer} event."},"id":3031,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"26916:7:17","nodeType":"FunctionDefinition","parameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2949,"mutability":"mutable","name":"from","nameLocation":"26941:4:17","nodeType":"VariableDeclaration","scope":3031,"src":"26933:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2948,"name":"address","nodeType":"ElementaryTypeName","src":"26933:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2951,"mutability":"mutable","name":"to","nameLocation":"26963:2:17","nodeType":"VariableDeclaration","scope":3031,"src":"26955:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2950,"name":"address","nodeType":"ElementaryTypeName","src":"26955:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2953,"mutability":"mutable","name":"amount","nameLocation":"26983:6:17","nodeType":"VariableDeclaration","scope":3031,"src":"26975:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2952,"name":"uint256","nodeType":"ElementaryTypeName","src":"26975:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2955,"mutability":"mutable","name":"force","nameLocation":"27004:5:17","nodeType":"VariableDeclaration","scope":3031,"src":"26999:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2954,"name":"bool","nodeType":"ElementaryTypeName","src":"26999:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2957,"mutability":"mutable","name":"data","nameLocation":"27032:4:17","nodeType":"VariableDeclaration","scope":3031,"src":"27019:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2956,"name":"bytes","nodeType":"ElementaryTypeName","src":"27019:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26923:119:17"},"returnParameters":{"id":2959,"nodeType":"ParameterList","parameters":[],"src":"27060:0:17"},"scope":3142,"src":"26907:1384:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3045,"nodeType":"Block","src":"29046:2:17","statements":[]},"documentation":{"id":3032,"nodeType":"StructuredDocumentation","src":"28297:533:17","text":" @dev Hook that is called before any token transfer, including minting and burning.\n Allows to run custom logic before updating balances and notifying sender/recipient by overriding this function.\n @param from The sender address\n @param to The recipient address\n @param amount The amount of token to transfer\n @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n @param data The data sent alongside the transfer"},"id":3046,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"28844:20:17","nodeType":"FunctionDefinition","parameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"from","nameLocation":"28882:4:17","nodeType":"VariableDeclaration","scope":3046,"src":"28874:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3033,"name":"address","nodeType":"ElementaryTypeName","src":"28874:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3036,"mutability":"mutable","name":"to","nameLocation":"28904:2:17","nodeType":"VariableDeclaration","scope":3046,"src":"28896:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3035,"name":"address","nodeType":"ElementaryTypeName","src":"28896:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3038,"mutability":"mutable","name":"amount","nameLocation":"28924:6:17","nodeType":"VariableDeclaration","scope":3046,"src":"28916:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3037,"name":"uint256","nodeType":"ElementaryTypeName","src":"28916:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3040,"mutability":"mutable","name":"force","nameLocation":"28945:5:17","nodeType":"VariableDeclaration","scope":3046,"src":"28940:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3039,"name":"bool","nodeType":"ElementaryTypeName","src":"28940:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3042,"mutability":"mutable","name":"data","nameLocation":"28973:4:17","nodeType":"VariableDeclaration","scope":3046,"src":"28960:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3041,"name":"bytes","nodeType":"ElementaryTypeName","src":"28960:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"28864:164:17"},"returnParameters":{"id":3044,"nodeType":"ParameterList","parameters":[],"src":"29046:0:17"},"scope":3142,"src":"28835:213:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3060,"nodeType":"Block","src":"29812:2:17","statements":[]},"documentation":{"id":3047,"nodeType":"StructuredDocumentation","src":"29054:543:17","text":" @dev Hook that is called after any token transfer, including minting and burning.\n Allows to run custom logic after updating balances, but **before notifying sender/recipient** by overriding this function.\n @param from The sender address\n @param to The recipient address\n @param amount The amount of token to transfer\n @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n @param data The data sent alongside the transfer"},"id":3061,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"29611:19:17","nodeType":"FunctionDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"mutability":"mutable","name":"from","nameLocation":"29648:4:17","nodeType":"VariableDeclaration","scope":3061,"src":"29640:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3048,"name":"address","nodeType":"ElementaryTypeName","src":"29640:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3051,"mutability":"mutable","name":"to","nameLocation":"29670:2:17","nodeType":"VariableDeclaration","scope":3061,"src":"29662:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3050,"name":"address","nodeType":"ElementaryTypeName","src":"29662:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3053,"mutability":"mutable","name":"amount","nameLocation":"29690:6:17","nodeType":"VariableDeclaration","scope":3061,"src":"29682:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"29682:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3055,"mutability":"mutable","name":"force","nameLocation":"29711:5:17","nodeType":"VariableDeclaration","scope":3061,"src":"29706:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3054,"name":"bool","nodeType":"ElementaryTypeName","src":"29706:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3057,"mutability":"mutable","name":"data","nameLocation":"29739:4:17","nodeType":"VariableDeclaration","scope":3061,"src":"29726:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3056,"name":"bytes","nodeType":"ElementaryTypeName","src":"29726:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29630:164:17"},"returnParameters":{"id":3059,"nodeType":"ParameterList","parameters":[],"src":"29812:0:17"},"scope":3142,"src":"29602:212:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3077,"nodeType":"Block","src":"30548:144:17","statements":[{"expression":{"arguments":[{"id":3072,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"30605:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3073,"name":"_TYPEID_LSP7_TOKENOPERATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"30627:26:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3074,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"30667:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3069,"name":"LSP1Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"30558:9:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP1Utils_$563_$","typeString":"type(library LSP1Utils)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30568:23:17","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":519,"src":"30558:33:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes memory)"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30558:127:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3076,"nodeType":"ExpressionStatement","src":"30558:127:17"}]},"documentation":{"id":3062,"nodeType":"StructuredDocumentation","src":"29820:613:17","text":" @dev Attempt to notify the operator `operator` about the `amount` tokens being authorized with.\n This is done by calling its {universalReceiver} function with the `_TYPEID_LSP7_TOKENOPERATOR` as typeId, if `operator` is a contract that supports the LSP1 interface.\n If `operator` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n @param operator The address to call the {universalReceiver} function on.\n @param lsp1Data the data to be sent to the `operator` address in the `universalReceiver` call."},"id":3078,"implemented":true,"kind":"function","modifiers":[],"name":"_notifyTokenOperator","nameLocation":"30447:20:17","nodeType":"FunctionDefinition","parameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3064,"mutability":"mutable","name":"operator","nameLocation":"30485:8:17","nodeType":"VariableDeclaration","scope":3078,"src":"30477:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3063,"name":"address","nodeType":"ElementaryTypeName","src":"30477:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3066,"mutability":"mutable","name":"lsp1Data","nameLocation":"30516:8:17","nodeType":"VariableDeclaration","scope":3078,"src":"30503:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3065,"name":"bytes","nodeType":"ElementaryTypeName","src":"30503:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30467:63:17"},"returnParameters":{"id":3068,"nodeType":"ParameterList","parameters":[],"src":"30548:0:17"},"scope":3142,"src":"30438:254:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3094,"nodeType":"Block","src":"31402:139:17","statements":[{"expression":{"arguments":[{"id":3089,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"31459:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3090,"name":"_TYPEID_LSP7_TOKENSSENDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"31477:25:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3091,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"31516:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3086,"name":"LSP1Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"31412:9:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP1Utils_$563_$","typeString":"type(library LSP1Utils)"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31422:23:17","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":519,"src":"31412:33:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes memory)"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31412:122:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3093,"nodeType":"ExpressionStatement","src":"31412:122:17"}]},"documentation":{"id":3079,"nodeType":"StructuredDocumentation","src":"30698:595:17","text":" @dev Attempt to notify the token sender `from` about the `amount` of tokens being transferred.\n This is done by calling its {universalReceiver} function with the `_TYPEID_LSP7_TOKENSSENDER` as typeId, if `from` is a contract that supports the LSP1 interface.\n If `from` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n @param from The address to call the {universalReceiver} function on.\n @param lsp1Data the data to be sent to the `from` address in the `universalReceiver` call."},"id":3095,"implemented":true,"kind":"function","modifiers":[],"name":"_notifyTokenSender","nameLocation":"31307:18:17","nodeType":"FunctionDefinition","parameters":{"id":3084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3081,"mutability":"mutable","name":"from","nameLocation":"31343:4:17","nodeType":"VariableDeclaration","scope":3095,"src":"31335:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3080,"name":"address","nodeType":"ElementaryTypeName","src":"31335:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3083,"mutability":"mutable","name":"lsp1Data","nameLocation":"31370:8:17","nodeType":"VariableDeclaration","scope":3095,"src":"31357:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3082,"name":"bytes","nodeType":"ElementaryTypeName","src":"31357:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31325:59:17"},"returnParameters":{"id":3085,"nodeType":"ParameterList","parameters":[],"src":"31402:0:17"},"scope":3142,"src":"31298:243:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3140,"nodeType":"Block","src":"32561:491:17","statements":[{"condition":{"arguments":[{"id":3107,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"32652:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3108,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"32672:17:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3105,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"32588:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165Checker_$3581_$","typeString":"type(library ERC165Checker)"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32602:32:17","memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":3580,"src":"32588:46:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32588:115:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"32816:6:17","subExpression":{"id":3119,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"32817:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3138,"nodeType":"IfStatement","src":"32812:234:17","trueBody":{"id":3137,"nodeType":"Block","src":"32824:222:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3121,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"32842:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32845:4:17","memberName":"code","nodeType":"MemberAccess","src":"32842:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32850:6:17","memberName":"length","nodeType":"MemberAccess","src":"32842:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32860:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"32842:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3135,"nodeType":"Block","src":"32964:72:17","statements":[{"errorCall":{"arguments":[{"id":3132,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"33018:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3131,"name":"LSP7NotifyTokenReceiverIsEOA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"32989:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32989:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3134,"nodeType":"RevertStatement","src":"32982:39:17"}]},"id":3136,"nodeType":"IfStatement","src":"32838:198:17","trueBody":{"id":3130,"nodeType":"Block","src":"32863:95:17","statements":[{"errorCall":{"arguments":[{"id":3127,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"32940:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3126,"name":"LSP7NotifyTokenReceiverContractMissingLSP1Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"32888:51:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32888:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3129,"nodeType":"RevertStatement","src":"32881:62:17"}]}}]}},"id":3139,"nodeType":"IfStatement","src":"32571:475:17","trueBody":{"id":3118,"nodeType":"Block","src":"32714:92:17","statements":[{"expression":{"arguments":[{"id":3114,"name":"_TYPEID_LSP7_TOKENSRECIPIENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"32756:28:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3115,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"32786:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3111,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"32734:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3110,"name":"ILSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"32728:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP1UniversalReceiver_$464_$","typeString":"type(contract ILSP1UniversalReceiver)"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32728:9:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILSP1UniversalReceiver_$464","typeString":"contract ILSP1UniversalReceiver"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32738:17:17","memberName":"universalReceiver","nodeType":"MemberAccess","referencedDeclaration":463,"src":"32728:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes memory) payable external returns (bytes memory)"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32728:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3117,"nodeType":"ExpressionStatement","src":"32728:67:17"}]}}]},"documentation":{"id":3096,"nodeType":"StructuredDocumentation","src":"31547:885:17","text":" @dev Attempt to notify the token receiver `to` about the `amount` tokens being received.\n This is done by calling its {universalReceiver} function with the `_TYPEID_LSP7_TOKENSRECIPIENT` as typeId, if `to` is a contract that supports the LSP1 interface.\n If `to` is is an EOA or a contract that does not support the LSP1 interface, the behaviour will depend on the `force` boolean flag.\n - if `force` is set to `true`, nothing will happen and no notification will be sent.\n - if `force` is set to `false, the transaction will revert.\n @param to The address to call the {universalReceiver} function on.\n @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n @param lsp1Data The data to be sent to the `to` address in the `universalReceiver(...)` call."},"id":3141,"implemented":true,"kind":"function","modifiers":[],"name":"_notifyTokenReceiver","nameLocation":"32446:20:17","nodeType":"FunctionDefinition","parameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"mutability":"mutable","name":"to","nameLocation":"32484:2:17","nodeType":"VariableDeclaration","scope":3141,"src":"32476:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3097,"name":"address","nodeType":"ElementaryTypeName","src":"32476:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3100,"mutability":"mutable","name":"force","nameLocation":"32501:5:17","nodeType":"VariableDeclaration","scope":3141,"src":"32496:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3099,"name":"bool","nodeType":"ElementaryTypeName","src":"32496:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3102,"mutability":"mutable","name":"lsp1Data","nameLocation":"32529:8:17","nodeType":"VariableDeclaration","scope":3141,"src":"32516:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3101,"name":"bytes","nodeType":"ElementaryTypeName","src":"32516:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32466:77:17"},"returnParameters":{"id":3104,"nodeType":"ParameterList","parameters":[],"src":"32561:0:17"},"scope":3142,"src":"32437:615:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3143,"src":"2122:30932:17","usedErrors":[330,333,336,339,581,586,591,1619,1622,1625,3153,3164,3167,3170,3173,3178,3183,3186,3189,3192,3197,3202,3211,3220]}],"src":"39:33016:17"},"id":17},"@lukso/lsp7-contracts/contracts/LSP7Errors.sol":{"ast":{"absolutePath":"@lukso/lsp7-contracts/contracts/LSP7Errors.sol","exportedSymbols":{"LSP7AmountExceedsAuthorizedAmount":[3164],"LSP7AmountExceedsBalance":[3153],"LSP7BatchCallFailed":[3202],"LSP7CannotSendWithAddressZero":[3170],"LSP7CannotUseAddressZeroAsOperator":[3167],"LSP7DecreaseAllowanceNotAuthorized":[3220],"LSP7DecreasedAllowanceBelowZero":[3189],"LSP7InvalidTransferBatch":[3173],"LSP7NotifyTokenReceiverContractMissingLSP1Interface":[3178],"LSP7NotifyTokenReceiverIsEOA":[3183],"LSP7RevokeOperatorNotAuthorized":[3211],"LSP7TokenContractCannotHoldValue":[3192],"LSP7TokenOwnerCannotBeOperator":[3186],"OperatorAllowanceCannotBeIncreasedFromZero":[3197]},"id":3221,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3144,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:18"},{"documentation":{"id":3145,"nodeType":"StructuredDocumentation","src":"79:113:18","text":" @dev reverts when sending an `amount` of tokens larger than the current `balance` of the `tokenOwner`."},"errorSelector":"08d47949","id":3153,"name":"LSP7AmountExceedsBalance","nameLocation":"199:24:18","nodeType":"ErrorDefinition","parameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"balance","nameLocation":"237:7:18","nodeType":"VariableDeclaration","scope":3153,"src":"229:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"229:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3149,"mutability":"mutable","name":"tokenOwner","nameLocation":"258:10:18","nodeType":"VariableDeclaration","scope":3153,"src":"250:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3148,"name":"address","nodeType":"ElementaryTypeName","src":"250:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3151,"mutability":"mutable","name":"amount","nameLocation":"282:6:18","nodeType":"VariableDeclaration","scope":3153,"src":"274:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3150,"name":"uint256","nodeType":"ElementaryTypeName","src":"274:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"223:67:18"},"src":"193:98:18"},{"documentation":{"id":3154,"nodeType":"StructuredDocumentation","src":"293:121:18","text":" @dev reverts when `operator` of `tokenOwner` send an `amount` of tokens\n larger than the `authorizedAmount`."},"errorSelector":"f3a6b691","id":3164,"name":"LSP7AmountExceedsAuthorizedAmount","nameLocation":"421:33:18","nodeType":"ErrorDefinition","parameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"tokenOwner","nameLocation":"468:10:18","nodeType":"VariableDeclaration","scope":3164,"src":"460:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3155,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3158,"mutability":"mutable","name":"authorizedAmount","nameLocation":"492:16:18","nodeType":"VariableDeclaration","scope":3164,"src":"484:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3157,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3160,"mutability":"mutable","name":"operator","nameLocation":"522:8:18","nodeType":"VariableDeclaration","scope":3164,"src":"514:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3159,"name":"address","nodeType":"ElementaryTypeName","src":"514:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3162,"mutability":"mutable","name":"amount","nameLocation":"544:6:18","nodeType":"VariableDeclaration","scope":3164,"src":"536:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"536:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"454:98:18"},"src":"415:138:18"},{"documentation":{"id":3165,"nodeType":"StructuredDocumentation","src":"555:75:18","text":" @dev reverts when trying to set the zero address as an operator."},"errorSelector":"6355e766","id":3167,"name":"LSP7CannotUseAddressZeroAsOperator","nameLocation":"637:34:18","nodeType":"ErrorDefinition","parameters":{"id":3166,"nodeType":"ParameterList","parameters":[],"src":"671:2:18"},"src":"631:43:18"},{"documentation":{"id":3168,"nodeType":"StructuredDocumentation","src":"676:167:18","text":" @dev reverts when trying to:\n - mint tokens to the zero address.\n - burn tokens from the zero address.\n - transfer tokens from or to the zero address."},"errorSelector":"d2d5ec30","id":3170,"name":"LSP7CannotSendWithAddressZero","nameLocation":"850:29:18","nodeType":"ErrorDefinition","parameters":{"id":3169,"nodeType":"ParameterList","parameters":[],"src":"879:2:18"},"src":"844:38:18"},{"documentation":{"id":3171,"nodeType":"StructuredDocumentation","src":"884:97:18","text":" @dev reverts when the array parameters used in {transferBatch} have different lengths."},"errorSelector":"263eee8d","id":3173,"name":"LSP7InvalidTransferBatch","nameLocation":"988:24:18","nodeType":"ErrorDefinition","parameters":{"id":3172,"nodeType":"ParameterList","parameters":[],"src":"1012:2:18"},"src":"982:33:18"},{"documentation":{"id":3174,"nodeType":"StructuredDocumentation","src":"1017:143:18","text":" @dev reverts if the `tokenReceiver` does not implement LSP1\n when minting or transferring tokens with `bool force` set as `false`."},"errorSelector":"a608fbb6","id":3178,"name":"LSP7NotifyTokenReceiverContractMissingLSP1Interface","nameLocation":"1167:51:18","nodeType":"ErrorDefinition","parameters":{"id":3177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3176,"mutability":"mutable","name":"tokenReceiver","nameLocation":"1232:13:18","nodeType":"VariableDeclaration","scope":3178,"src":"1224:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3175,"name":"address","nodeType":"ElementaryTypeName","src":"1224:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1218:29:18"},"src":"1161:87:18"},{"documentation":{"id":3179,"nodeType":"StructuredDocumentation","src":"1250:126:18","text":" @dev reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`."},"errorSelector":"26c247f4","id":3183,"name":"LSP7NotifyTokenReceiverIsEOA","nameLocation":"1383:28:18","nodeType":"ErrorDefinition","parameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"tokenReceiver","nameLocation":"1420:13:18","nodeType":"VariableDeclaration","scope":3183,"src":"1412:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3180,"name":"address","nodeType":"ElementaryTypeName","src":"1412:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1411:23:18"},"src":"1377:58:18"},{"documentation":{"id":3184,"nodeType":"StructuredDocumentation","src":"1437:92:18","text":" @dev reverts when trying to authorize or revoke the token's owner as an operator."},"errorSelector":"dab75047","id":3186,"name":"LSP7TokenOwnerCannotBeOperator","nameLocation":"1536:30:18","nodeType":"ErrorDefinition","parameters":{"id":3185,"nodeType":"ParameterList","parameters":[],"src":"1566:2:18"},"src":"1530:39:18"},{"documentation":{"id":3187,"nodeType":"StructuredDocumentation","src":"1571:107:18","text":" @dev Reverts when trying to decrease an operator's allowance to more than its current allowance."},"errorSelector":"0ef76c35","id":3189,"name":"LSP7DecreasedAllowanceBelowZero","nameLocation":"1685:31:18","nodeType":"ErrorDefinition","parameters":{"id":3188,"nodeType":"ParameterList","parameters":[],"src":"1716:2:18"},"src":"1679:40:18"},{"documentation":{"id":3190,"nodeType":"StructuredDocumentation","src":"1721:255:18","text":" @dev Error occurs when sending native tokens to the LSP7 contract without sending any data.\n E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\n @notice LSP7 contract cannot receive native tokens."},"errorSelector":"388f5adc","id":3192,"name":"LSP7TokenContractCannotHoldValue","nameLocation":"1983:32:18","nodeType":"ErrorDefinition","parameters":{"id":3191,"nodeType":"ParameterList","parameters":[],"src":"2015:2:18"},"src":"1977:41:18"},{"documentation":{"id":3193,"nodeType":"StructuredDocumentation","src":"2020:114:18","text":" @dev Reverts when token owner call {increaseAllowance} for an operator that does not have any allowance"},"errorSelector":"cba6e977","id":3197,"name":"OperatorAllowanceCannotBeIncreasedFromZero","nameLocation":"2141:42:18","nodeType":"ErrorDefinition","parameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"operator","nameLocation":"2192:8:18","nodeType":"VariableDeclaration","scope":3197,"src":"2184:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3194,"name":"address","nodeType":"ElementaryTypeName","src":"2184:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2183:18:18"},"src":"2135:67:18"},{"documentation":{"id":3198,"nodeType":"StructuredDocumentation","src":"2204:79:18","text":" @dev Reverts when a batch call failed.\n @notice Batch call failed."},"errorSelector":"b774c284","id":3202,"name":"LSP7BatchCallFailed","nameLocation":"2290:19:18","nodeType":"ErrorDefinition","parameters":{"id":3201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3200,"mutability":"mutable","name":"callIndex","nameLocation":"2318:9:18","nodeType":"VariableDeclaration","scope":3202,"src":"2310:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:19:18"},"src":"2284:45:18"},{"documentation":{"id":3203,"nodeType":"StructuredDocumentation","src":"2331:75:18","text":" @dev Reverts when the call to revoke operator is not authorized."},"errorSelector":"1a525b32","id":3211,"name":"LSP7RevokeOperatorNotAuthorized","nameLocation":"2413:31:18","nodeType":"ErrorDefinition","parameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"caller","nameLocation":"2458:6:18","nodeType":"VariableDeclaration","scope":3211,"src":"2450:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3204,"name":"address","nodeType":"ElementaryTypeName","src":"2450:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3207,"mutability":"mutable","name":"tokenOwner","nameLocation":"2478:10:18","nodeType":"VariableDeclaration","scope":3211,"src":"2470:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3206,"name":"address","nodeType":"ElementaryTypeName","src":"2470:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3209,"mutability":"mutable","name":"operator","nameLocation":"2502:8:18","nodeType":"VariableDeclaration","scope":3211,"src":"2494:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3208,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2444:68:18"},"src":"2407:106:18"},{"documentation":{"id":3212,"nodeType":"StructuredDocumentation","src":"2515:78:18","text":" @dev Reverts when the call to decrease allowance is not authorized."},"errorSelector":"98ce2945","id":3220,"name":"LSP7DecreaseAllowanceNotAuthorized","nameLocation":"2600:34:18","nodeType":"ErrorDefinition","parameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"caller","nameLocation":"2648:6:18","nodeType":"VariableDeclaration","scope":3220,"src":"2640:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3213,"name":"address","nodeType":"ElementaryTypeName","src":"2640:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3216,"mutability":"mutable","name":"tokenOwner","nameLocation":"2668:10:18","nodeType":"VariableDeclaration","scope":3220,"src":"2660:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3215,"name":"address","nodeType":"ElementaryTypeName","src":"2660:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3218,"mutability":"mutable","name":"operator","nameLocation":"2692:8:18","nodeType":"VariableDeclaration","scope":3220,"src":"2684:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3217,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2634:68:18"},"src":"2594:109:18"}],"src":"39:2665:18"},"id":18},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3363],"Ownable":[3333]},"id":3334,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3222,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:19"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3334,"sourceUnit":3364,"src":"127:30:19","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3225,"name":"Context","nameLocations":["683:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3363,"src":"683:7:19"},"id":3226,"nodeType":"InheritanceSpecifier","src":"683:7:19"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3224,"nodeType":"StructuredDocumentation","src":"159:494:19","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":3333,"linearizedBaseContracts":[3333,3363],"name":"Ownable","nameLocation":"672:7:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3228,"mutability":"mutable","name":"_owner","nameLocation":"713:6:19","nodeType":"VariableDeclaration","scope":3333,"src":"697:22:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3227,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":3234,"name":"OwnershipTransferred","nameLocation":"732:20:19","nodeType":"EventDefinition","parameters":{"id":3233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:19","nodeType":"VariableDeclaration","scope":3234,"src":"753:29:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3229,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3232,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:19","nodeType":"VariableDeclaration","scope":3234,"src":"784:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3231,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:19"},"src":"726:84:19"},{"body":{"id":3243,"nodeType":"Block","src":"926:49:19","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3239,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"955:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3238,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"936:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3242,"nodeType":"ExpressionStatement","src":"936:32:19"}]},"documentation":{"id":3235,"nodeType":"StructuredDocumentation","src":"816:91:19","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":3244,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3236,"nodeType":"ParameterList","parameters":[],"src":"923:2:19"},"returnParameters":{"id":3237,"nodeType":"ParameterList","parameters":[],"src":"926:0:19"},"scope":3333,"src":"912:63:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3251,"nodeType":"Block","src":"1084:41:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3247,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"1094:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3249,"nodeType":"ExpressionStatement","src":"1094:13:19"},{"id":3250,"nodeType":"PlaceholderStatement","src":"1117:1:19"}]},"documentation":{"id":3245,"nodeType":"StructuredDocumentation","src":"981:77:19","text":" @dev Throws if called by any account other than the owner."},"id":3252,"name":"onlyOwner","nameLocation":"1072:9:19","nodeType":"ModifierDefinition","parameters":{"id":3246,"nodeType":"ParameterList","parameters":[],"src":"1081:2:19"},"src":"1063:62:19","virtual":false,"visibility":"internal"},{"body":{"id":3260,"nodeType":"Block","src":"1256:30:19","statements":[{"expression":{"id":3258,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"1273:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3257,"id":3259,"nodeType":"Return","src":"1266:13:19"}]},"documentation":{"id":3253,"nodeType":"StructuredDocumentation","src":"1131:65:19","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":3261,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:19","nodeType":"FunctionDefinition","parameters":{"id":3254,"nodeType":"ParameterList","parameters":[],"src":"1215:2:19"},"returnParameters":{"id":3257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3261,"src":"1247:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3255,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:19"},"scope":3333,"src":"1201:85:19","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3274,"nodeType":"Block","src":"1404:85:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3266,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"1422:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3268,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"1433:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":3265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3273,"nodeType":"ExpressionStatement","src":"1414:68:19"}]},"documentation":{"id":3262,"nodeType":"StructuredDocumentation","src":"1292:62:19","text":" @dev Throws if the sender is not the owner."},"id":3275,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:19","nodeType":"FunctionDefinition","parameters":{"id":3263,"nodeType":"ParameterList","parameters":[],"src":"1379:2:19"},"returnParameters":{"id":3264,"nodeType":"ParameterList","parameters":[],"src":"1404:0:19"},"scope":3333,"src":"1359:130:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3288,"nodeType":"Block","src":"1878:47:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3282,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:19","typeDescriptions":{}}},"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3281,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"1888:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3287,"nodeType":"ExpressionStatement","src":"1888:30:19"}]},"documentation":{"id":3276,"nodeType":"StructuredDocumentation","src":"1495:324:19","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":3289,"implemented":true,"kind":"function","modifiers":[{"id":3279,"kind":"modifierInvocation","modifierName":{"id":3278,"name":"onlyOwner","nameLocations":["1868:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3252,"src":"1868:9:19"},"nodeType":"ModifierInvocation","src":"1868:9:19"}],"name":"renounceOwnership","nameLocation":"1833:17:19","nodeType":"FunctionDefinition","parameters":{"id":3277,"nodeType":"ParameterList","parameters":[],"src":"1850:2:19"},"returnParameters":{"id":3280,"nodeType":"ParameterList","parameters":[],"src":"1878:0:19"},"scope":3333,"src":"1824:101:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3311,"nodeType":"Block","src":"2144:128:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3298,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"2162:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3299,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:19","typeDescriptions":{}}},"id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":3297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3306,"nodeType":"ExpressionStatement","src":"2154:73:19"},{"expression":{"arguments":[{"id":3308,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"2256:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3307,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"2237:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3310,"nodeType":"ExpressionStatement","src":"2237:28:19"}]},"documentation":{"id":3290,"nodeType":"StructuredDocumentation","src":"1931:138:19","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":3312,"implemented":true,"kind":"function","modifiers":[{"id":3295,"kind":"modifierInvocation","modifierName":{"id":3294,"name":"onlyOwner","nameLocations":["2134:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3252,"src":"2134:9:19"},"nodeType":"ModifierInvocation","src":"2134:9:19"}],"name":"transferOwnership","nameLocation":"2083:17:19","nodeType":"FunctionDefinition","parameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3292,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:19","nodeType":"VariableDeclaration","scope":3312,"src":"2101:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3291,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:19"},"returnParameters":{"id":3296,"nodeType":"ParameterList","parameters":[],"src":"2144:0:19"},"scope":3333,"src":"2074:198:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3331,"nodeType":"Block","src":"2489:124:19","statements":[{"assignments":[3319],"declarations":[{"constant":false,"id":3319,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:19","nodeType":"VariableDeclaration","scope":3331,"src":"2499:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3318,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3321,"initialValue":{"id":3320,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"2518:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:19"},{"expression":{"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3322,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"2534:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3323,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"2543:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3325,"nodeType":"ExpressionStatement","src":"2534:17:19"},{"eventCall":{"arguments":[{"id":3327,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"2587:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3328,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"2597:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3326,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"2566:20:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3330,"nodeType":"EmitStatement","src":"2561:45:19"}]},"documentation":{"id":3313,"nodeType":"StructuredDocumentation","src":"2278:143:19","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":3332,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:19","nodeType":"FunctionDefinition","parameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3315,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:19","nodeType":"VariableDeclaration","scope":3332,"src":"2454:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3314,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:19"},"returnParameters":{"id":3317,"nodeType":"ParameterList","parameters":[],"src":"2489:0:19"},"scope":3333,"src":"2426:187:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3334,"src":"654:1961:19","usedErrors":[]}],"src":"102:2514:19"},"id":19},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3363]},"id":3364,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3335,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:20"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3336,"nodeType":"StructuredDocumentation","src":"126:496:20","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3363,"linearizedBaseContracts":[3363],"name":"Context","nameLocation":"641:7:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3344,"nodeType":"Block","src":"717:34:20","statements":[{"expression":{"expression":{"id":3341,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:20","memberName":"sender","nodeType":"MemberAccess","src":"734:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3340,"id":3343,"nodeType":"Return","src":"727:17:20"}]},"id":3345,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:20","nodeType":"FunctionDefinition","parameters":{"id":3337,"nodeType":"ParameterList","parameters":[],"src":"674:2:20"},"returnParameters":{"id":3340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3345,"src":"708:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3338,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:20"},"scope":3363,"src":"655:96:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3353,"nodeType":"Block","src":"824:32:20","statements":[{"expression":{"expression":{"id":3350,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:20","memberName":"data","nodeType":"MemberAccess","src":"841:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3349,"id":3352,"nodeType":"Return","src":"834:15:20"}]},"id":3354,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:20","nodeType":"FunctionDefinition","parameters":{"id":3346,"nodeType":"ParameterList","parameters":[],"src":"774:2:20"},"returnParameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3354,"src":"808:14:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3347,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:20"},"scope":3363,"src":"757:99:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3361,"nodeType":"Block","src":"934:25:20","statements":[{"expression":{"hexValue":"30","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3358,"id":3360,"nodeType":"Return","src":"944:8:20"}]},"id":3362,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:20","nodeType":"FunctionDefinition","parameters":{"id":3355,"nodeType":"ParameterList","parameters":[],"src":"891:2:20"},"returnParameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3362,"src":"925:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3356,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:20"},"scope":3363,"src":"862:97:20","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3364,"src":"623:338:20","usedErrors":[]}],"src":"101:861:20"},"id":20},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3387],"IERC165":[3593]},"id":3388,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3365,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:21"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3366,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3388,"sourceUnit":3594,"src":"124:23:21","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3368,"name":"IERC165","nameLocations":["754:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":3593,"src":"754:7:21"},"id":3369,"nodeType":"InheritanceSpecifier","src":"754:7:21"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3367,"nodeType":"StructuredDocumentation","src":"149:576:21","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":3387,"linearizedBaseContracts":[3387,3593],"name":"ERC165","nameLocation":"744:6:21","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3592],"body":{"id":3385,"nodeType":"Block","src":"920:64:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3378,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"937:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3380,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"957:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3593_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3593_$","typeString":"type(contract IERC165)"}],"id":3379,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3593","typeString":"type(contract IERC165)"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:21","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3377,"id":3384,"nodeType":"Return","src":"930:47:21"}]},"documentation":{"id":3370,"nodeType":"StructuredDocumentation","src":"768:56:21","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3386,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:21","nodeType":"FunctionDefinition","overrides":{"id":3374,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:21"},"parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3372,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:21","nodeType":"VariableDeclaration","scope":3386,"src":"856:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3371,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:21"},"returnParameters":{"id":3377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3386,"src":"914:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3375,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:21"},"scope":3387,"src":"829:155:21","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3388,"src":"726:260:21","usedErrors":[]}],"src":"99:888:21"},"id":21},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","exportedSymbols":{"ERC165Checker":[3581],"IERC165":[3593]},"id":3582,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3389,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:22"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3390,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3582,"sourceUnit":3594,"src":"146:23:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC165Checker","contractDependencies":[],"contractKind":"library","documentation":{"id":3391,"nodeType":"StructuredDocumentation","src":"171:277:22","text":" @dev Library used to query support of an interface declared via {IERC165}.\n Note that these functions return the actual result of the query: they do not\n `revert` if an interface is not supported. It is up to the caller to decide\n what to do in these cases."},"fullyImplemented":true,"id":3581,"linearizedBaseContracts":[3581],"name":"ERC165Checker","nameLocation":"457:13:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3394,"mutability":"constant","name":"_INTERFACE_ID_INVALID","nameLocation":"575:21:22","nodeType":"VariableDeclaration","scope":3581,"src":"551:58:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3392,"name":"bytes4","nodeType":"ElementaryTypeName","src":"551:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786666666666666666","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"599:10:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"visibility":"private"},{"body":{"id":3416,"nodeType":"Block","src":"774:357:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3403,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"1008:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":3405,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"1022:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3593_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3593_$","typeString":"type(contract IERC165)"}],"id":3404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1017:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1017:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3593","typeString":"type(contract IERC165)"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1031:11:22","memberName":"interfaceId","nodeType":"MemberAccess","src":"1017:25:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3402,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"975:32:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"975:68:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1059:65:22","subExpression":{"arguments":[{"id":3410,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"1093:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3411,"name":"_INTERFACE_ID_INVALID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"1102:21:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3409,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"1060:32:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1060:64:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"975:149:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3401,"id":3415,"nodeType":"Return","src":"956:168:22"}]},"documentation":{"id":3395,"nodeType":"StructuredDocumentation","src":"616:83:22","text":" @dev Returns true if `account` supports the {IERC165} interface."},"id":3417,"implemented":true,"kind":"function","modifiers":[],"name":"supportsERC165","nameLocation":"713:14:22","nodeType":"FunctionDefinition","parameters":{"id":3398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"account","nameLocation":"736:7:22","nodeType":"VariableDeclaration","scope":3417,"src":"728:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3396,"name":"address","nodeType":"ElementaryTypeName","src":"728:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"727:17:22"},"returnParameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3417,"src":"768:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3399,"name":"bool","nodeType":"ElementaryTypeName","src":"768:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"767:6:22"},"scope":3581,"src":"704:427:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3436,"nodeType":"Block","src":"1442:189:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3428,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"1558:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3427,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"1543:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1543:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":3431,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"1603:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3432,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"1612:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3430,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"1570:32:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1570:54:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1543:81:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3426,"id":3435,"nodeType":"Return","src":"1536:88:22"}]},"documentation":{"id":3418,"nodeType":"StructuredDocumentation","src":"1137:207:22","text":" @dev Returns true if `account` supports the interface defined by\n `interfaceId`. Support for {IERC165} itself is queried automatically.\n See {IERC165-supportsInterface}."},"id":3437,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1358:17:22","nodeType":"FunctionDefinition","parameters":{"id":3423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"account","nameLocation":"1384:7:22","nodeType":"VariableDeclaration","scope":3437,"src":"1376:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3419,"name":"address","nodeType":"ElementaryTypeName","src":"1376:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3422,"mutability":"mutable","name":"interfaceId","nameLocation":"1400:11:22","nodeType":"VariableDeclaration","scope":3437,"src":"1393:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3421,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1393:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1375:37:22"},"returnParameters":{"id":3426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3437,"src":"1436:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3424,"name":"bool","nodeType":"ElementaryTypeName","src":"1436:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1435:6:22"},"scope":3581,"src":"1349:282:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3492,"nodeType":"Block","src":"2155:560:22","statements":[{"assignments":[3453],"declarations":[{"constant":false,"id":3453,"mutability":"mutable","name":"interfaceIdsSupported","nameLocation":"2278:21:22","nodeType":"VariableDeclaration","scope":3492,"src":"2264:35:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3451,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3452,"nodeType":"ArrayTypeName","src":"2264:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":3460,"initialValue":{"arguments":[{"expression":{"id":3457,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"2313:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2326:6:22","memberName":"length","nodeType":"MemberAccess","src":"2313:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2302:10:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":3454,"name":"bool","nodeType":"ElementaryTypeName","src":"2306:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3455,"nodeType":"ArrayTypeName","src":"2306:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2302:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2264:69:22"},{"condition":{"arguments":[{"id":3462,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"2405:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3461,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"2390:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2390:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3489,"nodeType":"IfStatement","src":"2386:284:22","trueBody":{"id":3488,"nodeType":"Block","src":"2415:255:22","statements":[{"body":{"id":3486,"nodeType":"Block","src":"2542:118:22","statements":[{"expression":{"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3475,"name":"interfaceIdsSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"2560:21:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3477,"indexExpression":{"id":3476,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"2582:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2560:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3479,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"2620:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3480,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"2629:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3482,"indexExpression":{"id":3481,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"2642:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2629:15:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3478,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"2587:32:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2587:58:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2560:85:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3485,"nodeType":"ExpressionStatement","src":"2560:85:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3468,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"2512:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3469,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"2516:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:22","memberName":"length","nodeType":"MemberAccess","src":"2516:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3487,"initializationExpression":{"assignments":[3465],"declarations":[{"constant":false,"id":3465,"mutability":"mutable","name":"i","nameLocation":"2505:1:22","nodeType":"VariableDeclaration","scope":3487,"src":"2497:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3464,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3467,"initialValue":{"hexValue":"30","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2509:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2497:13:22"},"loopExpression":{"expression":{"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2537:3:22","subExpression":{"id":3472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"2537:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3474,"nodeType":"ExpressionStatement","src":"2537:3:22"},"nodeType":"ForStatement","src":"2492:168:22"}]}},{"expression":{"id":3490,"name":"interfaceIdsSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"2687:21:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"functionReturnParameters":3448,"id":3491,"nodeType":"Return","src":"2680:28:22"}]},"documentation":{"id":3438,"nodeType":"StructuredDocumentation","src":"1637:374:22","text":" @dev Returns a boolean array where each value corresponds to the\n interfaces passed in and whether they're supported or not. This allows\n you to batch check interfaces for a contract where your expectation\n is that some interfaces may not be supported.\n See {IERC165-supportsInterface}.\n _Available since v3.4._"},"id":3493,"implemented":true,"kind":"function","modifiers":[],"name":"getSupportedInterfaces","nameLocation":"2025:22:22","nodeType":"FunctionDefinition","parameters":{"id":3444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3440,"mutability":"mutable","name":"account","nameLocation":"2065:7:22","nodeType":"VariableDeclaration","scope":3493,"src":"2057:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3439,"name":"address","nodeType":"ElementaryTypeName","src":"2057:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3443,"mutability":"mutable","name":"interfaceIds","nameLocation":"2098:12:22","nodeType":"VariableDeclaration","scope":3493,"src":"2082:28:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":3441,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2082:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3442,"nodeType":"ArrayTypeName","src":"2082:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"2047:69:22"},"returnParameters":{"id":3448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3493,"src":"2140:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3445,"name":"bool","nodeType":"ElementaryTypeName","src":"2140:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3446,"nodeType":"ArrayTypeName","src":"2140:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"2139:15:22"},"scope":3581,"src":"2016:699:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3538,"nodeType":"Block","src":"3157:436:22","statements":[{"condition":{"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3213:24:22","subExpression":{"arguments":[{"id":3505,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"3229:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3504,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"3214:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3214:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3511,"nodeType":"IfStatement","src":"3209:67:22","trueBody":{"id":3510,"nodeType":"Block","src":"3239:37:22","statements":[{"expression":{"hexValue":"66616c7365","id":3508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3260:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3503,"id":3509,"nodeType":"Return","src":"3253:12:22"}]}},{"body":{"id":3534,"nodeType":"Block","src":"3395:134:22","statements":[{"condition":{"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3413:59:22","subExpression":{"arguments":[{"id":3524,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"3447:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3525,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"3456:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3527,"indexExpression":{"id":3526,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"3469:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3456:15:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3523,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"3414:32:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3414:58:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3533,"nodeType":"IfStatement","src":"3409:110:22","trueBody":{"id":3532,"nodeType":"Block","src":"3474:45:22","statements":[{"expression":{"hexValue":"66616c7365","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3499:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3503,"id":3531,"nodeType":"Return","src":"3492:12:22"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3516,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"3365:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3517,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"3369:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3382:6:22","memberName":"length","nodeType":"MemberAccess","src":"3369:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3365:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3535,"initializationExpression":{"assignments":[3513],"declarations":[{"constant":false,"id":3513,"mutability":"mutable","name":"i","nameLocation":"3358:1:22","nodeType":"VariableDeclaration","scope":3535,"src":"3350:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"3350:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3515,"initialValue":{"hexValue":"30","id":3514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3362:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3350:13:22"},"loopExpression":{"expression":{"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3390:3:22","subExpression":{"id":3520,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"3390:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3522,"nodeType":"ExpressionStatement","src":"3390:3:22"},"nodeType":"ForStatement","src":"3345:184:22"},{"expression":{"hexValue":"74727565","id":3536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3582:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3503,"id":3537,"nodeType":"Return","src":"3575:11:22"}]},"documentation":{"id":3494,"nodeType":"StructuredDocumentation","src":"2721:324:22","text":" @dev Returns true if `account` supports all the interfaces defined in\n `interfaceIds`. Support for {IERC165} itself is queried automatically.\n Batch-querying can lead to gas savings by skipping repeated checks for\n {IERC165} support.\n See {IERC165-supportsInterface}."},"id":3539,"implemented":true,"kind":"function","modifiers":[],"name":"supportsAllInterfaces","nameLocation":"3059:21:22","nodeType":"FunctionDefinition","parameters":{"id":3500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"account","nameLocation":"3089:7:22","nodeType":"VariableDeclaration","scope":3539,"src":"3081:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3495,"name":"address","nodeType":"ElementaryTypeName","src":"3081:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3499,"mutability":"mutable","name":"interfaceIds","nameLocation":"3114:12:22","nodeType":"VariableDeclaration","scope":3539,"src":"3098:28:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":3497,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3098:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3498,"nodeType":"ArrayTypeName","src":"3098:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"3080:47:22"},"returnParameters":{"id":3503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3539,"src":"3151:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3501,"name":"bool","nodeType":"ElementaryTypeName","src":"3151:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3150:6:22"},"scope":3581,"src":"3050:543:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3579,"nodeType":"Block","src":"4529:539:22","statements":[{"assignments":[3550],"declarations":[{"constant":false,"id":3550,"mutability":"mutable","name":"encodedParams","nameLocation":"4576:13:22","nodeType":"VariableDeclaration","scope":3579,"src":"4563:26:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3549,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3558,"initialValue":{"arguments":[{"expression":{"expression":{"id":3553,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"4615:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3593_$","typeString":"type(contract IERC165)"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4623:17:22","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3592,"src":"4615:25:22","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes4_$returns$_t_bool_$","typeString":"function IERC165.supportsInterface(bytes4) view returns (bool)"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4641:8:22","memberName":"selector","nodeType":"MemberAccess","src":"4615:34:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3556,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"4651:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3551,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4592:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4596:18:22","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4592:22:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4592:71:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4563:100:22"},{"assignments":[3560],"declarations":[{"constant":false,"id":3560,"mutability":"mutable","name":"success","nameLocation":"4710:7:22","nodeType":"VariableDeclaration","scope":3579,"src":"4705:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3559,"name":"bool","nodeType":"ElementaryTypeName","src":"4705:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3561,"nodeType":"VariableDeclarationStatement","src":"4705:12:22"},{"assignments":[3563],"declarations":[{"constant":false,"id":3563,"mutability":"mutable","name":"returnSize","nameLocation":"4735:10:22","nodeType":"VariableDeclaration","scope":3579,"src":"4727:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"4727:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3564,"nodeType":"VariableDeclarationStatement","src":"4727:18:22"},{"assignments":[3566],"declarations":[{"constant":false,"id":3566,"mutability":"mutable","name":"returnValue","nameLocation":"4763:11:22","nodeType":"VariableDeclaration","scope":3579,"src":"4755:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"4755:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3567,"nodeType":"VariableDeclarationStatement","src":"4755:19:22"},{"AST":{"nodeType":"YulBlock","src":"4793:203:22","statements":[{"nodeType":"YulAssignment","src":"4807:97:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4829:5:22","type":"","value":"30000"},{"name":"account","nodeType":"YulIdentifier","src":"4836:7:22"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"4849:13:22"},{"kind":"number","nodeType":"YulLiteral","src":"4864:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4845:3:22"},"nodeType":"YulFunctionCall","src":"4845:24:22"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"4877:13:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4871:5:22"},"nodeType":"YulFunctionCall","src":"4871:20:22"},{"kind":"number","nodeType":"YulLiteral","src":"4893:4:22","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4899:4:22","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"4818:10:22"},"nodeType":"YulFunctionCall","src":"4818:86:22"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"4807:7:22"}]},{"nodeType":"YulAssignment","src":"4917:30:22","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4931:14:22"},"nodeType":"YulFunctionCall","src":"4931:16:22"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"4917:10:22"}]},{"nodeType":"YulAssignment","src":"4960:26:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4981:4:22","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4975:5:22"},"nodeType":"YulFunctionCall","src":"4975:11:22"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"4960:11:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3542,"isOffset":false,"isSlot":false,"src":"4836:7:22","valueSize":1},{"declaration":3550,"isOffset":false,"isSlot":false,"src":"4849:13:22","valueSize":1},{"declaration":3550,"isOffset":false,"isSlot":false,"src":"4877:13:22","valueSize":1},{"declaration":3563,"isOffset":false,"isSlot":false,"src":"4917:10:22","valueSize":1},{"declaration":3566,"isOffset":false,"isSlot":false,"src":"4960:11:22","valueSize":1},{"declaration":3560,"isOffset":false,"isSlot":false,"src":"4807:7:22","valueSize":1}],"id":3568,"nodeType":"InlineAssembly","src":"4784:212:22"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3569,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"5013:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3570,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"5024:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783230","id":3571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5038:4:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5024:18:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5013:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3574,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"5046:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5060:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5046:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5013:48:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3548,"id":3578,"nodeType":"Return","src":"5006:55:22"}]},"documentation":{"id":3540,"nodeType":"StructuredDocumentation","src":"3599:817:22","text":" @notice Query if a contract implements an interface, does not check ERC165 support\n @param account The address of the contract to query for support of an interface\n @param interfaceId The interface identifier, as specified in ERC-165\n @return true if the contract at account indicates support of the interface with\n identifier interfaceId, false otherwise\n @dev Assumes that account contains a contract that supports ERC165, otherwise\n the behavior of this method is undefined. This precondition can be checked\n with {supportsERC165}.\n Some precompiled contracts will falsely indicate support for a given interface, so caution\n should be exercised when using this function.\n Interface identification is specified in ERC-165."},"id":3580,"implemented":true,"kind":"function","modifiers":[],"name":"supportsERC165InterfaceUnchecked","nameLocation":"4430:32:22","nodeType":"FunctionDefinition","parameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"mutability":"mutable","name":"account","nameLocation":"4471:7:22","nodeType":"VariableDeclaration","scope":3580,"src":"4463:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3541,"name":"address","nodeType":"ElementaryTypeName","src":"4463:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3544,"mutability":"mutable","name":"interfaceId","nameLocation":"4487:11:22","nodeType":"VariableDeclaration","scope":3580,"src":"4480:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3543,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4480:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4462:37:22"},"returnParameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3580,"src":"4523:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3546,"name":"bool","nodeType":"ElementaryTypeName","src":"4523:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4522:6:22"},"scope":3581,"src":"4421:647:22","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3582,"src":"449:4621:22","usedErrors":[]}],"src":"121:4950:22"},"id":22},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3593]},"id":3594,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3583,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3584,"nodeType":"StructuredDocumentation","src":"125:279:23","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3593,"linearizedBaseContracts":[3593],"name":"IERC165","nameLocation":"415:7:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3585,"nodeType":"StructuredDocumentation","src":"429:340:23","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3592,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:23","nodeType":"FunctionDefinition","parameters":{"id":3588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:23","nodeType":"VariableDeclaration","scope":3592,"src":"801:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3586,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:23"},"returnParameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3592,"src":"844:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3589,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:23"},"scope":3593,"src":"774:76:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3594,"src":"405:447:23","usedErrors":[]}],"src":"100:753:23"},"id":23},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[4206]},"id":4207,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3595,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":3596,"nodeType":"StructuredDocumentation","src":"230:1098:24","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":4206,"linearizedBaseContracts":[4206],"name":"EnumerableSet","nameLocation":"1337:13:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":3604,"members":[{"constant":false,"id":3599,"mutability":"mutable","name":"_values","nameLocation":"1861:7:24","nodeType":"VariableDeclaration","scope":3604,"src":"1851:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1851:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3598,"nodeType":"ArrayTypeName","src":"1851:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3603,"mutability":"mutable","name":"_indexes","nameLocation":"2029:8:24","nodeType":"VariableDeclaration","scope":3604,"src":"2001:36:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":3602,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2009:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2001:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2020:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1804:3:24","nodeType":"StructDefinition","scope":4206,"src":"1797:247:24","visibility":"public"},{"body":{"id":3645,"nodeType":"Block","src":"2283:335:24","statements":[{"condition":{"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2297:22:24","subExpression":{"arguments":[{"id":3616,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"2308:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":3617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"2313:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3615,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"2298:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3604_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2298:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3643,"nodeType":"Block","src":"2575:37:24","statements":[{"expression":{"hexValue":"66616c7365","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2596:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3614,"id":3642,"nodeType":"Return","src":"2589:12:24"}]},"id":3644,"nodeType":"IfStatement","src":"2293:319:24","trueBody":{"id":3640,"nodeType":"Block","src":"2321:248:24","statements":[{"expression":{"arguments":[{"id":3625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"2352:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":3620,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"2335:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2339:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3599,"src":"2335:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2347:4:24","memberName":"push","nodeType":"MemberAccess","src":"2335:16:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3627,"nodeType":"ExpressionStatement","src":"2335:23:24"},{"expression":{"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3628,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"2493:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2497:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3603,"src":"2493:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3632,"indexExpression":{"id":3630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"2506:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2493:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":3633,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"2515:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2519:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3599,"src":"2515:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2527:6:24","memberName":"length","nodeType":"MemberAccess","src":"2515:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2493:40:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3637,"nodeType":"ExpressionStatement","src":"2493:40:24"},{"expression":{"hexValue":"74727565","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2554:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3614,"id":3639,"nodeType":"Return","src":"2547:11:24"}]}}]},"documentation":{"id":3605,"nodeType":"StructuredDocumentation","src":"2050:159:24","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3646,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2223:4:24","nodeType":"FunctionDefinition","parameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"set","nameLocation":"2240:3:24","nodeType":"VariableDeclaration","scope":3646,"src":"2228:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3607,"nodeType":"UserDefinedTypeName","pathNode":{"id":3606,"name":"Set","nameLocations":["2228:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3604,"src":"2228:3:24"},"referencedDeclaration":3604,"src":"2228:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3610,"mutability":"mutable","name":"value","nameLocation":"2253:5:24","nodeType":"VariableDeclaration","scope":3646,"src":"2245:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2245:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2227:32:24"},"returnParameters":{"id":3614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3646,"src":"2277:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3612,"name":"bool","nodeType":"ElementaryTypeName","src":"2277:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2276:6:24"},"scope":4206,"src":"2214:404:24","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3729,"nodeType":"Block","src":"2858:1316:24","statements":[{"assignments":[3658],"declarations":[{"constant":false,"id":3658,"mutability":"mutable","name":"valueIndex","nameLocation":"2976:10:24","nodeType":"VariableDeclaration","scope":3729,"src":"2968:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3657,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3663,"initialValue":{"baseExpression":{"expression":{"id":3659,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"2989:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2993:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3603,"src":"2989:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3662,"indexExpression":{"id":3661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"3002:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2968:40:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3664,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"3023:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3023:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3727,"nodeType":"Block","src":"4131:37:24","statements":[{"expression":{"hexValue":"66616c7365","id":3725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4152:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3656,"id":3726,"nodeType":"Return","src":"4145:12:24"}]},"id":3728,"nodeType":"IfStatement","src":"3019:1149:24","trueBody":{"id":3724,"nodeType":"Block","src":"3040:1085:24","statements":[{"assignments":[3668],"declarations":[{"constant":false,"id":3668,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3400:13:24","nodeType":"VariableDeclaration","scope":3724,"src":"3392:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3667,"name":"uint256","nodeType":"ElementaryTypeName","src":"3392:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3672,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3669,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"3416:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3429:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3416:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3392:38:24"},{"assignments":[3674],"declarations":[{"constant":false,"id":3674,"mutability":"mutable","name":"lastIndex","nameLocation":"3452:9:24","nodeType":"VariableDeclaration","scope":3724,"src":"3444:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3680,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3675,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"3464:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3676,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3468:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3599,"src":"3464:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3476:6:24","memberName":"length","nodeType":"MemberAccess","src":"3464:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3485:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3464:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3444:42:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3681,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"3505:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3682,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"3518:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3505:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3708,"nodeType":"IfStatement","src":"3501:398:24","trueBody":{"id":3707,"nodeType":"Block","src":"3533:366:24","statements":[{"assignments":[3685],"declarations":[{"constant":false,"id":3685,"mutability":"mutable","name":"lastValue","nameLocation":"3559:9:24","nodeType":"VariableDeclaration","scope":3707,"src":"3551:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3551:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3690,"initialValue":{"baseExpression":{"expression":{"id":3686,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"3571:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3575:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3599,"src":"3571:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3689,"indexExpression":{"id":3688,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"3583:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3571:22:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3551:42:24"},{"expression":{"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3691,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"3693:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3694,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3697:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3599,"src":"3693:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3695,"indexExpression":{"id":3693,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"3705:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3693:26:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3696,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"3722:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3693:38:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3698,"nodeType":"ExpressionStatement","src":"3693:38:24"},{"expression":{"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3699,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"3805:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3809:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3603,"src":"3805:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3703,"indexExpression":{"id":3701,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"3818:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3805:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3704,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"3831:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3805:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3706,"nodeType":"ExpressionStatement","src":"3805:36:24"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":3709,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"3977:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3981:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3599,"src":"3977:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3989:3:24","memberName":"pop","nodeType":"MemberAccess","src":"3977:15:24","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3977:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3715,"nodeType":"ExpressionStatement","src":"3977:17:24"},{"expression":{"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4062:26:24","subExpression":{"baseExpression":{"expression":{"id":3716,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"4069:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4073:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3603,"src":"4069:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3719,"indexExpression":{"id":3718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"4082:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4069:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3721,"nodeType":"ExpressionStatement","src":"4062:26:24"},{"expression":{"hexValue":"74727565","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4110:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3656,"id":3723,"nodeType":"Return","src":"4103:11:24"}]}}]},"documentation":{"id":3647,"nodeType":"StructuredDocumentation","src":"2624:157:24","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3730,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2795:7:24","nodeType":"FunctionDefinition","parameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3650,"mutability":"mutable","name":"set","nameLocation":"2815:3:24","nodeType":"VariableDeclaration","scope":3730,"src":"2803:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3649,"nodeType":"UserDefinedTypeName","pathNode":{"id":3648,"name":"Set","nameLocations":["2803:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3604,"src":"2803:3:24"},"referencedDeclaration":3604,"src":"2803:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3652,"mutability":"mutable","name":"value","nameLocation":"2828:5:24","nodeType":"VariableDeclaration","scope":3730,"src":"2820:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2820:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2802:32:24"},"returnParameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3730,"src":"2852:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3654,"name":"bool","nodeType":"ElementaryTypeName","src":"2852:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2851:6:24"},"scope":4206,"src":"2786:1388:24","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3748,"nodeType":"Block","src":"4334:48:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":3741,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"4351:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4355:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3603,"src":"4351:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3744,"indexExpression":{"id":3743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"4364:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4351:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4351:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3740,"id":3747,"nodeType":"Return","src":"4344:31:24"}]},"documentation":{"id":3731,"nodeType":"StructuredDocumentation","src":"4180:70:24","text":" @dev Returns true if the value is in the set. O(1)."},"id":3749,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4264:9:24","nodeType":"FunctionDefinition","parameters":{"id":3737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3734,"mutability":"mutable","name":"set","nameLocation":"4286:3:24","nodeType":"VariableDeclaration","scope":3749,"src":"4274:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3733,"nodeType":"UserDefinedTypeName","pathNode":{"id":3732,"name":"Set","nameLocations":["4274:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3604,"src":"4274:3:24"},"referencedDeclaration":3604,"src":"4274:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3736,"mutability":"mutable","name":"value","nameLocation":"4299:5:24","nodeType":"VariableDeclaration","scope":3749,"src":"4291:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4273:32:24"},"returnParameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3749,"src":"4328:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3738,"name":"bool","nodeType":"ElementaryTypeName","src":"4328:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4327:6:24"},"scope":4206,"src":"4255:127:24","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3762,"nodeType":"Block","src":"4528:42:24","statements":[{"expression":{"expression":{"expression":{"id":3758,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"4545:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4549:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3599,"src":"4545:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4557:6:24","memberName":"length","nodeType":"MemberAccess","src":"4545:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3757,"id":3761,"nodeType":"Return","src":"4538:25:24"}]},"documentation":{"id":3750,"nodeType":"StructuredDocumentation","src":"4388:70:24","text":" @dev Returns the number of values on the set. O(1)."},"id":3763,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4472:7:24","nodeType":"FunctionDefinition","parameters":{"id":3754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3753,"mutability":"mutable","name":"set","nameLocation":"4492:3:24","nodeType":"VariableDeclaration","scope":3763,"src":"4480:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3752,"nodeType":"UserDefinedTypeName","pathNode":{"id":3751,"name":"Set","nameLocations":["4480:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3604,"src":"4480:3:24"},"referencedDeclaration":3604,"src":"4480:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4479:17:24"},"returnParameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3763,"src":"4519:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"4519:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4518:9:24"},"scope":4206,"src":"4463:107:24","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3779,"nodeType":"Block","src":"4988:42:24","statements":[{"expression":{"baseExpression":{"expression":{"id":3774,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"5005:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5009:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3599,"src":"5005:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3777,"indexExpression":{"id":3776,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"5017:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5005:18:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3773,"id":3778,"nodeType":"Return","src":"4998:25:24"}]},"documentation":{"id":3764,"nodeType":"StructuredDocumentation","src":"4576:331:24","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3780,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4921:3:24","nodeType":"FunctionDefinition","parameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3767,"mutability":"mutable","name":"set","nameLocation":"4937:3:24","nodeType":"VariableDeclaration","scope":3780,"src":"4925:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3766,"nodeType":"UserDefinedTypeName","pathNode":{"id":3765,"name":"Set","nameLocations":["4925:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3604,"src":"4925:3:24"},"referencedDeclaration":3604,"src":"4925:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3769,"mutability":"mutable","name":"index","nameLocation":"4950:5:24","nodeType":"VariableDeclaration","scope":3780,"src":"4942:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3768,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4924:32:24"},"returnParameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3780,"src":"4979:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4979:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4978:9:24"},"scope":4206,"src":"4912:118:24","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3793,"nodeType":"Block","src":"5644:35:24","statements":[{"expression":{"expression":{"id":3790,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"5661:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5665:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3599,"src":"5661:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":3789,"id":3792,"nodeType":"Return","src":"5654:18:24"}]},"documentation":{"id":3781,"nodeType":"StructuredDocumentation","src":"5036:529:24","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3794,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5579:7:24","nodeType":"FunctionDefinition","parameters":{"id":3785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3784,"mutability":"mutable","name":"set","nameLocation":"5599:3:24","nodeType":"VariableDeclaration","scope":3794,"src":"5587:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3783,"nodeType":"UserDefinedTypeName","pathNode":{"id":3782,"name":"Set","nameLocations":["5587:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3604,"src":"5587:3:24"},"referencedDeclaration":3604,"src":"5587:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5586:17:24"},"returnParameters":{"id":3789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3794,"src":"5626:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3786,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5626:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3787,"nodeType":"ArrayTypeName","src":"5626:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5625:18:24"},"scope":4206,"src":"5570:109:24","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":3798,"members":[{"constant":false,"id":3797,"mutability":"mutable","name":"_inner","nameLocation":"5736:6:24","nodeType":"VariableDeclaration","scope":3798,"src":"5732:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3796,"nodeType":"UserDefinedTypeName","pathNode":{"id":3795,"name":"Set","nameLocations":["5732:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3604,"src":"5732:3:24"},"referencedDeclaration":3604,"src":"5732:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5711:10:24","nodeType":"StructDefinition","scope":4206,"src":"5704:45:24","visibility":"public"},{"body":{"id":3815,"nodeType":"Block","src":"5995:47:24","statements":[{"expression":{"arguments":[{"expression":{"id":3810,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"6017:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6021:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3797,"src":"6017:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"6029:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3809,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"6012:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3604_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3808,"id":3814,"nodeType":"Return","src":"6005:30:24"}]},"documentation":{"id":3799,"nodeType":"StructuredDocumentation","src":"5755:159:24","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3816,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5928:3:24","nodeType":"FunctionDefinition","parameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3802,"mutability":"mutable","name":"set","nameLocation":"5951:3:24","nodeType":"VariableDeclaration","scope":3816,"src":"5932:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3801,"nodeType":"UserDefinedTypeName","pathNode":{"id":3800,"name":"Bytes32Set","nameLocations":["5932:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3798,"src":"5932:10:24"},"referencedDeclaration":3798,"src":"5932:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3804,"mutability":"mutable","name":"value","nameLocation":"5964:5:24","nodeType":"VariableDeclaration","scope":3816,"src":"5956:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5956:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5931:39:24"},"returnParameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3816,"src":"5989:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3806,"name":"bool","nodeType":"ElementaryTypeName","src":"5989:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5988:6:24"},"scope":4206,"src":"5919:123:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3833,"nodeType":"Block","src":"6289:50:24","statements":[{"expression":{"arguments":[{"expression":{"id":3828,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"6314:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6318:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3797,"src":"6314:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"6326:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3827,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"6306:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3604_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6306:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3826,"id":3832,"nodeType":"Return","src":"6299:33:24"}]},"documentation":{"id":3817,"nodeType":"StructuredDocumentation","src":"6048:157:24","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3834,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6219:6:24","nodeType":"FunctionDefinition","parameters":{"id":3823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"set","nameLocation":"6245:3:24","nodeType":"VariableDeclaration","scope":3834,"src":"6226:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3819,"nodeType":"UserDefinedTypeName","pathNode":{"id":3818,"name":"Bytes32Set","nameLocations":["6226:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3798,"src":"6226:10:24"},"referencedDeclaration":3798,"src":"6226:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3822,"mutability":"mutable","name":"value","nameLocation":"6258:5:24","nodeType":"VariableDeclaration","scope":3834,"src":"6250:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6225:39:24"},"returnParameters":{"id":3826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3834,"src":"6283:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3824,"name":"bool","nodeType":"ElementaryTypeName","src":"6283:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6282:6:24"},"scope":4206,"src":"6210:129:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3851,"nodeType":"Block","src":"6506:52:24","statements":[{"expression":{"arguments":[{"expression":{"id":3846,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"6533:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6537:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3797,"src":"6533:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"6545:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3845,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"6523:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3604_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6523:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3844,"id":3850,"nodeType":"Return","src":"6516:35:24"}]},"documentation":{"id":3835,"nodeType":"StructuredDocumentation","src":"6345:70:24","text":" @dev Returns true if the value is in the set. O(1)."},"id":3852,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6429:8:24","nodeType":"FunctionDefinition","parameters":{"id":3841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3838,"mutability":"mutable","name":"set","nameLocation":"6457:3:24","nodeType":"VariableDeclaration","scope":3852,"src":"6438:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3837,"nodeType":"UserDefinedTypeName","pathNode":{"id":3836,"name":"Bytes32Set","nameLocations":["6438:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3798,"src":"6438:10:24"},"referencedDeclaration":3798,"src":"6438:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3840,"mutability":"mutable","name":"value","nameLocation":"6470:5:24","nodeType":"VariableDeclaration","scope":3852,"src":"6462:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3839,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6462:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6437:39:24"},"returnParameters":{"id":3844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3852,"src":"6500:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3842,"name":"bool","nodeType":"ElementaryTypeName","src":"6500:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6499:6:24"},"scope":4206,"src":"6420:138:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3866,"nodeType":"Block","src":"6711:43:24","statements":[{"expression":{"arguments":[{"expression":{"id":3862,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"6736:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6740:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3797,"src":"6736:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3861,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"6728:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3604_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6728:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3860,"id":3865,"nodeType":"Return","src":"6721:26:24"}]},"documentation":{"id":3853,"nodeType":"StructuredDocumentation","src":"6564:70:24","text":" @dev Returns the number of values in the set. O(1)."},"id":3867,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6648:6:24","nodeType":"FunctionDefinition","parameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"set","nameLocation":"6674:3:24","nodeType":"VariableDeclaration","scope":3867,"src":"6655:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3855,"nodeType":"UserDefinedTypeName","pathNode":{"id":3854,"name":"Bytes32Set","nameLocations":["6655:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3798,"src":"6655:10:24"},"referencedDeclaration":3798,"src":"6655:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6654:24:24"},"returnParameters":{"id":3860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3867,"src":"6702:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3858,"name":"uint256","nodeType":"ElementaryTypeName","src":"6702:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6701:9:24"},"scope":4206,"src":"6639:115:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3884,"nodeType":"Block","src":"7179:46:24","statements":[{"expression":{"arguments":[{"expression":{"id":3879,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"7200:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7204:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3797,"src":"7200:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3881,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"7212:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3878,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"7196:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3604_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7196:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3877,"id":3883,"nodeType":"Return","src":"7189:29:24"}]},"documentation":{"id":3868,"nodeType":"StructuredDocumentation","src":"6760:331:24","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3885,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7105:2:24","nodeType":"FunctionDefinition","parameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"set","nameLocation":"7127:3:24","nodeType":"VariableDeclaration","scope":3885,"src":"7108:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3870,"nodeType":"UserDefinedTypeName","pathNode":{"id":3869,"name":"Bytes32Set","nameLocations":["7108:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3798,"src":"7108:10:24"},"referencedDeclaration":3798,"src":"7108:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3873,"mutability":"mutable","name":"index","nameLocation":"7140:5:24","nodeType":"VariableDeclaration","scope":3885,"src":"7132:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3872,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:39:24"},"returnParameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3885,"src":"7170:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7170:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7169:9:24"},"scope":4206,"src":"7096:129:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3914,"nodeType":"Block","src":"7846:219:24","statements":[{"assignments":[3899],"declarations":[{"constant":false,"id":3899,"mutability":"mutable","name":"store","nameLocation":"7873:5:24","nodeType":"VariableDeclaration","scope":3914,"src":"7856:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7856:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3898,"nodeType":"ArrayTypeName","src":"7856:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3904,"initialValue":{"arguments":[{"expression":{"id":3901,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"7889:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7893:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3797,"src":"7889:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3900,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"7881:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3604_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7881:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7856:44:24"},{"assignments":[3909],"declarations":[{"constant":false,"id":3909,"mutability":"mutable","name":"result","nameLocation":"7927:6:24","nodeType":"VariableDeclaration","scope":3914,"src":"7910:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3907,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7910:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3908,"nodeType":"ArrayTypeName","src":"7910:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3910,"nodeType":"VariableDeclarationStatement","src":"7910:23:24"},{"AST":{"nodeType":"YulBlock","src":"7996:39:24","statements":[{"nodeType":"YulAssignment","src":"8010:15:24","value":{"name":"store","nodeType":"YulIdentifier","src":"8020:5:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8010:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3909,"isOffset":false,"isSlot":false,"src":"8010:6:24","valueSize":1},{"declaration":3899,"isOffset":false,"isSlot":false,"src":"8020:5:24","valueSize":1}],"id":3911,"nodeType":"InlineAssembly","src":"7987:48:24"},{"expression":{"id":3912,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"8052:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3894,"id":3913,"nodeType":"Return","src":"8045:13:24"}]},"documentation":{"id":3886,"nodeType":"StructuredDocumentation","src":"7231:529:24","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3915,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7774:6:24","nodeType":"FunctionDefinition","parameters":{"id":3890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3889,"mutability":"mutable","name":"set","nameLocation":"7800:3:24","nodeType":"VariableDeclaration","scope":3915,"src":"7781:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3888,"nodeType":"UserDefinedTypeName","pathNode":{"id":3887,"name":"Bytes32Set","nameLocations":["7781:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3798,"src":"7781:10:24"},"referencedDeclaration":3798,"src":"7781:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3798_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7780:24:24"},"returnParameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3915,"src":"7828:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7828:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3892,"nodeType":"ArrayTypeName","src":"7828:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7827:18:24"},"scope":4206,"src":"7765:300:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":3919,"members":[{"constant":false,"id":3918,"mutability":"mutable","name":"_inner","nameLocation":"8122:6:24","nodeType":"VariableDeclaration","scope":3919,"src":"8118:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3917,"nodeType":"UserDefinedTypeName","pathNode":{"id":3916,"name":"Set","nameLocations":["8118:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3604,"src":"8118:3:24"},"referencedDeclaration":3604,"src":"8118:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8097:10:24","nodeType":"StructDefinition","scope":4206,"src":"8090:45:24","visibility":"public"},{"body":{"id":3945,"nodeType":"Block","src":"8381:74:24","statements":[{"expression":{"arguments":[{"expression":{"id":3931,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"8403:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8407:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"8403:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"8439:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8431:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3937,"name":"uint160","nodeType":"ElementaryTypeName","src":"8431:7:24","typeDescriptions":{}}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8431:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3935,"name":"uint256","nodeType":"ElementaryTypeName","src":"8423:7:24","typeDescriptions":{}}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8423:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8415:7:24","typeDescriptions":{}}},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8415:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3930,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"8398:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3604_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8398:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3929,"id":3944,"nodeType":"Return","src":"8391:57:24"}]},"documentation":{"id":3920,"nodeType":"StructuredDocumentation","src":"8141:159:24","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3946,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8314:3:24","nodeType":"FunctionDefinition","parameters":{"id":3926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"set","nameLocation":"8337:3:24","nodeType":"VariableDeclaration","scope":3946,"src":"8318:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3922,"nodeType":"UserDefinedTypeName","pathNode":{"id":3921,"name":"AddressSet","nameLocations":["8318:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3919,"src":"8318:10:24"},"referencedDeclaration":3919,"src":"8318:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3925,"mutability":"mutable","name":"value","nameLocation":"8350:5:24","nodeType":"VariableDeclaration","scope":3946,"src":"8342:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3924,"name":"address","nodeType":"ElementaryTypeName","src":"8342:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8317:39:24"},"returnParameters":{"id":3929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3946,"src":"8375:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3927,"name":"bool","nodeType":"ElementaryTypeName","src":"8375:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8374:6:24"},"scope":4206,"src":"8305:150:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3972,"nodeType":"Block","src":"8702:77:24","statements":[{"expression":{"arguments":[{"expression":{"id":3958,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"8727:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8731:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"8727:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"8763:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8755:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3964,"name":"uint160","nodeType":"ElementaryTypeName","src":"8755:7:24","typeDescriptions":{}}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8755:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3962,"name":"uint256","nodeType":"ElementaryTypeName","src":"8747:7:24","typeDescriptions":{}}},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8747:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8739:7:24","typeDescriptions":{}}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3957,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"8719:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3604_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8719:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3956,"id":3971,"nodeType":"Return","src":"8712:60:24"}]},"documentation":{"id":3947,"nodeType":"StructuredDocumentation","src":"8461:157:24","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3973,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8632:6:24","nodeType":"FunctionDefinition","parameters":{"id":3953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3950,"mutability":"mutable","name":"set","nameLocation":"8658:3:24","nodeType":"VariableDeclaration","scope":3973,"src":"8639:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3949,"nodeType":"UserDefinedTypeName","pathNode":{"id":3948,"name":"AddressSet","nameLocations":["8639:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3919,"src":"8639:10:24"},"referencedDeclaration":3919,"src":"8639:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3952,"mutability":"mutable","name":"value","nameLocation":"8671:5:24","nodeType":"VariableDeclaration","scope":3973,"src":"8663:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3951,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8638:39:24"},"returnParameters":{"id":3956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3973,"src":"8696:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3954,"name":"bool","nodeType":"ElementaryTypeName","src":"8696:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8695:6:24"},"scope":4206,"src":"8623:156:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3999,"nodeType":"Block","src":"8946:79:24","statements":[{"expression":{"arguments":[{"expression":{"id":3985,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"8973:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8977:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"8973:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"9009:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3991,"name":"uint160","nodeType":"ElementaryTypeName","src":"9001:7:24","typeDescriptions":{}}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9001:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3989,"name":"uint256","nodeType":"ElementaryTypeName","src":"8993:7:24","typeDescriptions":{}}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8993:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8985:7:24","typeDescriptions":{}}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8985:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3984,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"8963:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3604_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8963:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3983,"id":3998,"nodeType":"Return","src":"8956:62:24"}]},"documentation":{"id":3974,"nodeType":"StructuredDocumentation","src":"8785:70:24","text":" @dev Returns true if the value is in the set. O(1)."},"id":4000,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8869:8:24","nodeType":"FunctionDefinition","parameters":{"id":3980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3977,"mutability":"mutable","name":"set","nameLocation":"8897:3:24","nodeType":"VariableDeclaration","scope":4000,"src":"8878:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3976,"nodeType":"UserDefinedTypeName","pathNode":{"id":3975,"name":"AddressSet","nameLocations":["8878:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3919,"src":"8878:10:24"},"referencedDeclaration":3919,"src":"8878:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3979,"mutability":"mutable","name":"value","nameLocation":"8910:5:24","nodeType":"VariableDeclaration","scope":4000,"src":"8902:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3978,"name":"address","nodeType":"ElementaryTypeName","src":"8902:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:39:24"},"returnParameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4000,"src":"8940:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3981,"name":"bool","nodeType":"ElementaryTypeName","src":"8940:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8939:6:24"},"scope":4206,"src":"8860:165:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4014,"nodeType":"Block","src":"9178:43:24","statements":[{"expression":{"arguments":[{"expression":{"id":4010,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"9203:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9207:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"9203:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4009,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"9195:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3604_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9195:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4008,"id":4013,"nodeType":"Return","src":"9188:26:24"}]},"documentation":{"id":4001,"nodeType":"StructuredDocumentation","src":"9031:70:24","text":" @dev Returns the number of values in the set. O(1)."},"id":4015,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9115:6:24","nodeType":"FunctionDefinition","parameters":{"id":4005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4004,"mutability":"mutable","name":"set","nameLocation":"9141:3:24","nodeType":"VariableDeclaration","scope":4015,"src":"9122:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4003,"nodeType":"UserDefinedTypeName","pathNode":{"id":4002,"name":"AddressSet","nameLocations":["9122:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3919,"src":"9122:10:24"},"referencedDeclaration":3919,"src":"9122:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9121:24:24"},"returnParameters":{"id":4008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4015,"src":"9169:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"9169:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9168:9:24"},"scope":4206,"src":"9106:115:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4041,"nodeType":"Block","src":"9646:73:24","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":4033,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"9691:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9695:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"9691:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4035,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"9703:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4032,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"9687:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3604_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9687:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9679:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4030,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:24","typeDescriptions":{}}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9679:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4028,"name":"uint160","nodeType":"ElementaryTypeName","src":"9671:7:24","typeDescriptions":{}}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9671:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4026,"name":"address","nodeType":"ElementaryTypeName","src":"9663:7:24","typeDescriptions":{}}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9663:49:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4025,"id":4040,"nodeType":"Return","src":"9656:56:24"}]},"documentation":{"id":4016,"nodeType":"StructuredDocumentation","src":"9227:331:24","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4042,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9572:2:24","nodeType":"FunctionDefinition","parameters":{"id":4022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4019,"mutability":"mutable","name":"set","nameLocation":"9594:3:24","nodeType":"VariableDeclaration","scope":4042,"src":"9575:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4018,"nodeType":"UserDefinedTypeName","pathNode":{"id":4017,"name":"AddressSet","nameLocations":["9575:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3919,"src":"9575:10:24"},"referencedDeclaration":3919,"src":"9575:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4021,"mutability":"mutable","name":"index","nameLocation":"9607:5:24","nodeType":"VariableDeclaration","scope":4042,"src":"9599:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"9599:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9574:39:24"},"returnParameters":{"id":4025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4042,"src":"9637:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4023,"name":"address","nodeType":"ElementaryTypeName","src":"9637:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9636:9:24"},"scope":4206,"src":"9563:156:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4071,"nodeType":"Block","src":"10340:219:24","statements":[{"assignments":[4056],"declarations":[{"constant":false,"id":4056,"mutability":"mutable","name":"store","nameLocation":"10367:5:24","nodeType":"VariableDeclaration","scope":4071,"src":"10350:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10350:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4055,"nodeType":"ArrayTypeName","src":"10350:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4061,"initialValue":{"arguments":[{"expression":{"id":4058,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"10383:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4059,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10387:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"10383:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4057,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10375:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3604_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10375:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10350:44:24"},{"assignments":[4066],"declarations":[{"constant":false,"id":4066,"mutability":"mutable","name":"result","nameLocation":"10421:6:24","nodeType":"VariableDeclaration","scope":4071,"src":"10404:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4064,"name":"address","nodeType":"ElementaryTypeName","src":"10404:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4065,"nodeType":"ArrayTypeName","src":"10404:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4067,"nodeType":"VariableDeclarationStatement","src":"10404:23:24"},{"AST":{"nodeType":"YulBlock","src":"10490:39:24","statements":[{"nodeType":"YulAssignment","src":"10504:15:24","value":{"name":"store","nodeType":"YulIdentifier","src":"10514:5:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10504:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4066,"isOffset":false,"isSlot":false,"src":"10504:6:24","valueSize":1},{"declaration":4056,"isOffset":false,"isSlot":false,"src":"10514:5:24","valueSize":1}],"id":4068,"nodeType":"InlineAssembly","src":"10481:48:24"},{"expression":{"id":4069,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"10546:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4051,"id":4070,"nodeType":"Return","src":"10539:13:24"}]},"documentation":{"id":4043,"nodeType":"StructuredDocumentation","src":"9725:529:24","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4072,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10268:6:24","nodeType":"FunctionDefinition","parameters":{"id":4047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4046,"mutability":"mutable","name":"set","nameLocation":"10294:3:24","nodeType":"VariableDeclaration","scope":4072,"src":"10275:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4045,"nodeType":"UserDefinedTypeName","pathNode":{"id":4044,"name":"AddressSet","nameLocations":["10275:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3919,"src":"10275:10:24"},"referencedDeclaration":3919,"src":"10275:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3919_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10274:24:24"},"returnParameters":{"id":4051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4072,"src":"10322:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4048,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4049,"nodeType":"ArrayTypeName","src":"10322:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10321:18:24"},"scope":4206,"src":"10259:300:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":4076,"members":[{"constant":false,"id":4075,"mutability":"mutable","name":"_inner","nameLocation":"10610:6:24","nodeType":"VariableDeclaration","scope":4076,"src":"10606:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4074,"nodeType":"UserDefinedTypeName","pathNode":{"id":4073,"name":"Set","nameLocations":["10606:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3604,"src":"10606:3:24"},"referencedDeclaration":3604,"src":"10606:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10588:7:24","nodeType":"StructDefinition","scope":4206,"src":"10581:42:24","visibility":"public"},{"body":{"id":4096,"nodeType":"Block","src":"10866:56:24","statements":[{"expression":{"arguments":[{"expression":{"id":4088,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"10888:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10892:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4075,"src":"10888:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"10908:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10900:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10900:7:24","typeDescriptions":{}}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10900:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4087,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"10883:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3604_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10883:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4086,"id":4095,"nodeType":"Return","src":"10876:39:24"}]},"documentation":{"id":4077,"nodeType":"StructuredDocumentation","src":"10629:159:24","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4097,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10802:3:24","nodeType":"FunctionDefinition","parameters":{"id":4083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4080,"mutability":"mutable","name":"set","nameLocation":"10822:3:24","nodeType":"VariableDeclaration","scope":4097,"src":"10806:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4079,"nodeType":"UserDefinedTypeName","pathNode":{"id":4078,"name":"UintSet","nameLocations":["10806:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":4076,"src":"10806:7:24"},"referencedDeclaration":4076,"src":"10806:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4082,"mutability":"mutable","name":"value","nameLocation":"10835:5:24","nodeType":"VariableDeclaration","scope":4097,"src":"10827:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4081,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10805:36:24"},"returnParameters":{"id":4086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4097,"src":"10860:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4084,"name":"bool","nodeType":"ElementaryTypeName","src":"10860:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10859:6:24"},"scope":4206,"src":"10793:129:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4117,"nodeType":"Block","src":"11166:59:24","statements":[{"expression":{"arguments":[{"expression":{"id":4109,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"11191:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11195:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4075,"src":"11191:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"11211:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11203:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11203:7:24","typeDescriptions":{}}},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11203:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4108,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"11183:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3604_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11183:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4107,"id":4116,"nodeType":"Return","src":"11176:42:24"}]},"documentation":{"id":4098,"nodeType":"StructuredDocumentation","src":"10928:157:24","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4118,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11099:6:24","nodeType":"FunctionDefinition","parameters":{"id":4104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4101,"mutability":"mutable","name":"set","nameLocation":"11122:3:24","nodeType":"VariableDeclaration","scope":4118,"src":"11106:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4100,"nodeType":"UserDefinedTypeName","pathNode":{"id":4099,"name":"UintSet","nameLocations":["11106:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":4076,"src":"11106:7:24"},"referencedDeclaration":4076,"src":"11106:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4103,"mutability":"mutable","name":"value","nameLocation":"11135:5:24","nodeType":"VariableDeclaration","scope":4118,"src":"11127:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4102,"name":"uint256","nodeType":"ElementaryTypeName","src":"11127:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11105:36:24"},"returnParameters":{"id":4107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4118,"src":"11160:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4105,"name":"bool","nodeType":"ElementaryTypeName","src":"11160:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11159:6:24"},"scope":4206,"src":"11090:135:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4138,"nodeType":"Block","src":"11389:61:24","statements":[{"expression":{"arguments":[{"expression":{"id":4130,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"11416:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11420:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4075,"src":"11416:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"11436:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11428:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11428:7:24","typeDescriptions":{}}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11428:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4129,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"11406:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3604_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11406:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4128,"id":4137,"nodeType":"Return","src":"11399:44:24"}]},"documentation":{"id":4119,"nodeType":"StructuredDocumentation","src":"11231:70:24","text":" @dev Returns true if the value is in the set. O(1)."},"id":4139,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11315:8:24","nodeType":"FunctionDefinition","parameters":{"id":4125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"mutability":"mutable","name":"set","nameLocation":"11340:3:24","nodeType":"VariableDeclaration","scope":4139,"src":"11324:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4121,"nodeType":"UserDefinedTypeName","pathNode":{"id":4120,"name":"UintSet","nameLocations":["11324:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":4076,"src":"11324:7:24"},"referencedDeclaration":4076,"src":"11324:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4124,"mutability":"mutable","name":"value","nameLocation":"11353:5:24","nodeType":"VariableDeclaration","scope":4139,"src":"11345:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4123,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11323:36:24"},"returnParameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4139,"src":"11383:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4126,"name":"bool","nodeType":"ElementaryTypeName","src":"11383:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11382:6:24"},"scope":4206,"src":"11306:144:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4153,"nodeType":"Block","src":"11600:43:24","statements":[{"expression":{"arguments":[{"expression":{"id":4149,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"11625:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11629:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4075,"src":"11625:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4148,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"11617:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3604_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11617:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4147,"id":4152,"nodeType":"Return","src":"11610:26:24"}]},"documentation":{"id":4140,"nodeType":"StructuredDocumentation","src":"11456:70:24","text":" @dev Returns the number of values in the set. O(1)."},"id":4154,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11540:6:24","nodeType":"FunctionDefinition","parameters":{"id":4144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4143,"mutability":"mutable","name":"set","nameLocation":"11563:3:24","nodeType":"VariableDeclaration","scope":4154,"src":"11547:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4142,"nodeType":"UserDefinedTypeName","pathNode":{"id":4141,"name":"UintSet","nameLocations":["11547:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":4076,"src":"11547:7:24"},"referencedDeclaration":4076,"src":"11547:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11546:21:24"},"returnParameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4154,"src":"11591:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"11591:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11590:9:24"},"scope":4206,"src":"11531:112:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4174,"nodeType":"Block","src":"12065:55:24","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4168,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"12094:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12098:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4075,"src":"12094:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4170,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"12106:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4167,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"12090:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3604_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12090:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12082:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4165,"name":"uint256","nodeType":"ElementaryTypeName","src":"12082:7:24","typeDescriptions":{}}},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12082:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4164,"id":4173,"nodeType":"Return","src":"12075:38:24"}]},"documentation":{"id":4155,"nodeType":"StructuredDocumentation","src":"11649:331:24","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4175,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11994:2:24","nodeType":"FunctionDefinition","parameters":{"id":4161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4158,"mutability":"mutable","name":"set","nameLocation":"12013:3:24","nodeType":"VariableDeclaration","scope":4175,"src":"11997:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4157,"nodeType":"UserDefinedTypeName","pathNode":{"id":4156,"name":"UintSet","nameLocations":["11997:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":4076,"src":"11997:7:24"},"referencedDeclaration":4076,"src":"11997:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4160,"mutability":"mutable","name":"index","nameLocation":"12026:5:24","nodeType":"VariableDeclaration","scope":4175,"src":"12018:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4159,"name":"uint256","nodeType":"ElementaryTypeName","src":"12018:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11996:36:24"},"returnParameters":{"id":4164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4175,"src":"12056:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4162,"name":"uint256","nodeType":"ElementaryTypeName","src":"12056:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12055:9:24"},"scope":4206,"src":"11985:135:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4204,"nodeType":"Block","src":"12738:219:24","statements":[{"assignments":[4189],"declarations":[{"constant":false,"id":4189,"mutability":"mutable","name":"store","nameLocation":"12765:5:24","nodeType":"VariableDeclaration","scope":4204,"src":"12748:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12748:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4188,"nodeType":"ArrayTypeName","src":"12748:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4194,"initialValue":{"arguments":[{"expression":{"id":4191,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"12781:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12785:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4075,"src":"12781:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3604_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4190,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"12773:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3604_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12773:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12748:44:24"},{"assignments":[4199],"declarations":[{"constant":false,"id":4199,"mutability":"mutable","name":"result","nameLocation":"12819:6:24","nodeType":"VariableDeclaration","scope":4204,"src":"12802:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4197,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4198,"nodeType":"ArrayTypeName","src":"12802:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4200,"nodeType":"VariableDeclarationStatement","src":"12802:23:24"},{"AST":{"nodeType":"YulBlock","src":"12888:39:24","statements":[{"nodeType":"YulAssignment","src":"12902:15:24","value":{"name":"store","nodeType":"YulIdentifier","src":"12912:5:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12902:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4199,"isOffset":false,"isSlot":false,"src":"12902:6:24","valueSize":1},{"declaration":4189,"isOffset":false,"isSlot":false,"src":"12912:5:24","valueSize":1}],"id":4201,"nodeType":"InlineAssembly","src":"12879:48:24"},{"expression":{"id":4202,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"12944:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4184,"id":4203,"nodeType":"Return","src":"12937:13:24"}]},"documentation":{"id":4176,"nodeType":"StructuredDocumentation","src":"12126:529:24","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4205,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12669:6:24","nodeType":"FunctionDefinition","parameters":{"id":4180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4179,"mutability":"mutable","name":"set","nameLocation":"12692:3:24","nodeType":"VariableDeclaration","scope":4205,"src":"12676:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4178,"nodeType":"UserDefinedTypeName","pathNode":{"id":4177,"name":"UintSet","nameLocations":["12676:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":4076,"src":"12676:7:24"},"referencedDeclaration":4076,"src":"12676:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4076_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12675:21:24"},"returnParameters":{"id":4184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4205,"src":"12720:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4181,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4182,"nodeType":"ArrayTypeName","src":"12720:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12719:18:24"},"scope":4206,"src":"12660:297:24","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4207,"src":"1329:11630:24","usedErrors":[]}],"src":"205:12755:24"},"id":24},"contracts/ama.sol":{"ast":{"absolutePath":"contracts/ama.sol","exportedSymbols":{"ERC165Checker":[3581],"ERC725Y":[269],"EnumerableSet":[4206],"ILSP1":[464],"ILSP7DigitalAsset":[1792],"InvalidExtensionAddress":[591],"InvalidFunctionSelector":[586],"LSP17Extendable":[725],"LSP1Utils":[563],"LSP2Utils":[1462],"LSP4DigitalAssetMetadata":[1614],"LSP7AmountExceedsAuthorizedAmount":[3164],"LSP7AmountExceedsBalance":[3153],"LSP7BatchCallFailed":[3202],"LSP7CannotSendWithAddressZero":[3170],"LSP7CannotUseAddressZeroAsOperator":[3167],"LSP7DecreaseAllowanceNotAuthorized":[3220],"LSP7DecreasedAllowanceBelowZero":[3189],"LSP7DigitalAsset":[3142],"LSP7InvalidTransferBatch":[3173],"LSP7NotifyTokenReceiverContractMissingLSP1Interface":[3178],"LSP7NotifyTokenReceiverIsEOA":[3183],"LSP7RevokeOperatorNotAuthorized":[3211],"LSP7TokenContractCannotHoldValue":[3192],"LSP7TokenOwnerCannotBeOperator":[3186],"NoExtensionFoundForFunctionSelector":[581],"OperatorAllowanceCannotBeIncreasedFromZero":[3197],"SimpleAMA":[4459],"_INTERFACEID_LSP1":[469],"_INTERFACEID_LSP7":[1797],"_LSP17_EXTENSION_PREFIX":[574],"_TYPEID_LSP7_TOKENOPERATOR":[1818],"_TYPEID_LSP7_TOKENSRECIPIENT":[1815],"_TYPEID_LSP7_TOKENSSENDER":[1812]},"id":4460,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4208,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:25"},{"absolutePath":"@lukso/lsp7-contracts/contracts/LSP7DigitalAsset.sol","file":"@lukso/lsp7-contracts/contracts/LSP7DigitalAsset.sol","id":4209,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4460,"sourceUnit":3143,"src":"58:62:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4210,"name":"LSP7DigitalAsset","nameLocations":["144:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":3142,"src":"144:16:25"},"id":4211,"nodeType":"InheritanceSpecifier","src":"144:16:25"}],"canonicalName":"SimpleAMA","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4459,"linearizedBaseContracts":[4459,3142,725,1614,269,386,3387,3593,3333,3363,1792],"name":"SimpleAMA","nameLocation":"131:9:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"SimpleAMA.Question","id":4220,"members":[{"constant":false,"id":4213,"mutability":"mutable","name":"sender","nameLocation":"201:6:25","nodeType":"VariableDeclaration","scope":4220,"src":"193:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4212,"name":"address","nodeType":"ElementaryTypeName","src":"193:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4215,"mutability":"mutable","name":"questionText","nameLocation":"224:12:25","nodeType":"VariableDeclaration","scope":4220,"src":"217:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4214,"name":"string","nodeType":"ElementaryTypeName","src":"217:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4217,"mutability":"mutable","name":"answerText","nameLocation":"253:10:25","nodeType":"VariableDeclaration","scope":4220,"src":"246:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4216,"name":"string","nodeType":"ElementaryTypeName","src":"246:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4219,"mutability":"mutable","name":"answered","nameLocation":"278:8:25","nodeType":"VariableDeclaration","scope":4220,"src":"273:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4218,"name":"bool","nodeType":"ElementaryTypeName","src":"273:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Question","nameLocation":"174:8:25","nodeType":"StructDefinition","scope":4459,"src":"167:126:25","visibility":"public"},{"constant":false,"functionSelector":"ac0f05f6","id":4222,"mutability":"mutable","name":"profileOwner","nameLocation":"314:12:25","nodeType":"VariableDeclaration","scope":4459,"src":"299:27:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4221,"name":"address","nodeType":"ElementaryTypeName","src":"299:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"b7b064a8","id":4224,"mutability":"mutable","name":"questionCounter","nameLocation":"347:15:25","nodeType":"VariableDeclaration","scope":4459,"src":"332:30:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4223,"name":"uint256","nodeType":"ElementaryTypeName","src":"332:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"31b1b978","id":4229,"mutability":"mutable","name":"questions","nameLocation":"404:9:25","nodeType":"VariableDeclaration","scope":4459,"src":"368:45:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Question_$4220_storage_$","typeString":"mapping(uint256 => struct SimpleAMA.Question)"},"typeName":{"id":4228,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4225,"name":"uint256","nodeType":"ElementaryTypeName","src":"376:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"368:28:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Question_$4220_storage_$","typeString":"mapping(uint256 => struct SimpleAMA.Question)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4227,"nodeType":"UserDefinedTypeName","pathNode":{"id":4226,"name":"Question","nameLocations":["387:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":4220,"src":"387:8:25"},"referencedDeclaration":4220,"src":"387:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$4220_storage_ptr","typeString":"struct SimpleAMA.Question"}}},"visibility":"public"},{"constant":false,"functionSelector":"73a6f6a6","id":4233,"mutability":"mutable","name":"hasReceivedToken","nameLocation":"451:16:25","nodeType":"VariableDeclaration","scope":4459,"src":"419:48:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":4232,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4230,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"419:24:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4231,"name":"bool","nodeType":"ElementaryTypeName","src":"438:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":4249,"nodeType":"Block","src":"585:40:25","statements":[{"expression":{"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4245,"name":"profileOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"595:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4246,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"610:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"595:23:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4248,"nodeType":"ExpressionStatement","src":"595:23:25"}]},"id":4250,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"46726565205175657374696f6e20546f6b656e","id":4238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"535:21:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b4436deea757e648a4ebe1551d3ec7e919f1d2f211755c3473889ab61d08b1a","typeString":"literal_string \"Free Question Token\""},"value":"Free Question Token"},{"hexValue":"465154","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"558:5:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_38108d282f3462909785aa7e2ea693bc5ca516ea99d0a5ecc6d13a81c2daa6aa","typeString":"literal_string \"FQT\""},"value":"FQT"},{"id":4240,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"565:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"575:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"578:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":4243,"kind":"baseConstructorSpecifier","modifierName":{"id":4237,"name":"LSP7DigitalAsset","nameLocations":["518:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":3142,"src":"518:16:25"},"nodeType":"ModifierInvocation","src":"518:66:25"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"newOwner","nameLocation":"503:8:25","nodeType":"VariableDeclaration","scope":4250,"src":"495:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4234,"name":"address","nodeType":"ElementaryTypeName","src":"495:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"485:32:25"},"returnParameters":{"id":4244,"nodeType":"ParameterList","parameters":[],"src":"585:0:25"},"scope":4459,"src":"474:151:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4281,"nodeType":"Block","src":"699:211:25","statements":[{"expression":{"arguments":[{"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"717:29:25","subExpression":{"baseExpression":{"id":4254,"name":"hasReceivedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"718:16:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4257,"indexExpression":{"expression":{"id":4255,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:25","memberName":"sender","nodeType":"MemberAccess","src":"735:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"718:28:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920636c61696d65642061206672656520746f6b656e","id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"748:30:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_4eb56e33b190c911f9a62dafbc06b9f3d9c8ebfa91addfd5c4ed064caf80fb28","typeString":"literal_string \"Already claimed a free token\""},"value":"Already claimed a free token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4eb56e33b190c911f9a62dafbc06b9f3d9c8ebfa91addfd5c4ed064caf80fb28","typeString":"literal_string \"Already claimed a free token\""}],"id":4253,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"709:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"709:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4261,"nodeType":"ExpressionStatement","src":"709:70:25"},{"expression":{"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4262,"name":"hasReceivedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"790:16:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4265,"indexExpression":{"expression":{"id":4263,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"807:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"811:6:25","memberName":"sender","nodeType":"MemberAccess","src":"807:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"790:28:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"821:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"790:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4268,"nodeType":"ExpressionStatement","src":"790:35:25"},{"expression":{"arguments":[{"expression":{"id":4270,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:6:25","memberName":"sender","nodeType":"MemberAccess","src":"841:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"853:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"857:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"863:2:25","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"857:8:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"853:12:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},{"hexValue":"74727565","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"867:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"4672656520746f6b656e20666f7220414d41207175657374696f6e","id":4278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"873:29:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a198832122cd9f1ca832e810c02968e3abfb5e200519ae09b25af00870cffa1","typeString":"literal_string \"Free token for AMA question\""},"value":"Free token for AMA question"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a198832122cd9f1ca832e810c02968e3abfb5e200519ae09b25af00870cffa1","typeString":"literal_string \"Free token for AMA question\""}],"id":4269,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"835:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bool,bytes memory)"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"835:68:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4280,"nodeType":"ExpressionStatement","src":"835:68:25"}]},"functionSelector":"adcea55a","id":4282,"implemented":true,"kind":"function","modifiers":[],"name":"claimFreeToken","nameLocation":"675:14:25","nodeType":"FunctionDefinition","parameters":{"id":4251,"nodeType":"ParameterList","parameters":[],"src":"689:2:25"},"returnParameters":{"id":4252,"nodeType":"ParameterList","parameters":[],"src":"699:0:25"},"scope":4459,"src":"666:244:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4327,"nodeType":"Block","src":"1045:386:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4289,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1086:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1090:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1086:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4288,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"1076:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1076:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1101:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1105:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1111:2:25","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1105:8:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1101:12:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1076:37:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206e656564206120746f6b656e20746f207375626d69742061207175657374696f6e","id":4298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1127:39:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff075107381d702750af5e734cb03ff5255767cbecd0d4c2fe55faaadb5b2448","typeString":"literal_string \"You need a token to submit a question\""},"value":"You need a token to submit a question"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff075107381d702750af5e734cb03ff5255767cbecd0d4c2fe55faaadb5b2448","typeString":"literal_string \"You need a token to submit a question\""}],"id":4287,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1055:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1055:121:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4300,"nodeType":"ExpressionStatement","src":"1055:121:25"},{"expression":{"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1187:17:25","subExpression":{"id":4301,"name":"questionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"1187:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4303,"nodeType":"ExpressionStatement","src":"1187:17:25"},{"expression":{"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4304,"name":"questions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"1214:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Question_$4220_storage_$","typeString":"mapping(uint256 => struct SimpleAMA.Question storage ref)"}},"id":4306,"indexExpression":{"id":4305,"name":"questionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"1224:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1214:26:25","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$4220_storage","typeString":"struct SimpleAMA.Question storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4308,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1265:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1269:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1265:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4310,"name":"_questionText","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"1289:13:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"","id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1316:2:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"66616c7365","id":4312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1332:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4307,"name":"Question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"1243:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Question_$4220_storage_ptr_$","typeString":"type(struct SimpleAMA.Question storage pointer)"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:104:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Question_$4220_memory_ptr","typeString":"struct SimpleAMA.Question memory"}},"src":"1214:133:25","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$4220_storage","typeString":"struct SimpleAMA.Question storage ref"}},"id":4315,"nodeType":"ExpressionStatement","src":"1214:133:25"},{"expression":{"arguments":[{"expression":{"id":4317,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1364:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1368:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1364:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1376:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1380:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1386:2:25","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1380:8:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1376:12:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},{"hexValue":"4275726e20746f6b656e20746f207375626d69742061207175657374696f6e","id":4324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1390:33:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_fd6a94add54dff5cef5ac25a6ee7051cdf64331486c0d45e5fc86d0c6a7d95d7","typeString":"literal_string \"Burn token to submit a question\""},"value":"Burn token to submit a question"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},{"typeIdentifier":"t_stringliteral_fd6a94add54dff5cef5ac25a6ee7051cdf64331486c0d45e5fc86d0c6a7d95d7","typeString":"literal_string \"Burn token to submit a question\""}],"id":4316,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"1358:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1358:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4326,"nodeType":"ExpressionStatement","src":"1358:66:25"}]},"functionSelector":"099ee6f2","id":4328,"implemented":true,"kind":"function","modifiers":[],"name":"submitQuestion","nameLocation":"994:14:25","nodeType":"FunctionDefinition","parameters":{"id":4285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4284,"mutability":"mutable","name":"_questionText","nameLocation":"1023:13:25","nodeType":"VariableDeclaration","scope":4328,"src":"1009:27:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4283,"name":"string","nodeType":"ElementaryTypeName","src":"1009:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1008:29:25"},"returnParameters":{"id":4286,"nodeType":"ParameterList","parameters":[],"src":"1045:0:25"},"scope":4459,"src":"985:446:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4369,"nodeType":"Block","src":"1585:343:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4336,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1616:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1616:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4338,"name":"profileOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"1630:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1616:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79207468652070726f66696c65206f776e65722063616e20616e73776572207175657374696f6e73","id":4340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1656:45:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_feffb919f33f741fb31a502394ba298782f4310d28ba5450a753fb62b6059085","typeString":"literal_string \"Only the profile owner can answer questions\""},"value":"Only the profile owner can answer questions"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_feffb919f33f741fb31a502394ba298782f4310d28ba5450a753fb62b6059085","typeString":"literal_string \"Only the profile owner can answer questions\""}],"id":4335,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1595:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1595:116:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4342,"nodeType":"ExpressionStatement","src":"1595:116:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4344,"name":"_questionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"1729:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4345,"name":"questionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"1744:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1729:30:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207175657374696f6e204944","id":4347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1761:21:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_7012ed5ec9b5652af45260c130745cf693bfe45361b071a180578cecce6252c4","typeString":"literal_string \"Invalid question ID\""},"value":"Invalid question ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7012ed5ec9b5652af45260c130745cf693bfe45361b071a180578cecce6252c4","typeString":"literal_string \"Invalid question ID\""}],"id":4343,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1721:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:62:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4349,"nodeType":"ExpressionStatement","src":"1721:62:25"},{"assignments":[4352],"declarations":[{"constant":false,"id":4352,"mutability":"mutable","name":"question","nameLocation":"1811:8:25","nodeType":"VariableDeclaration","scope":4369,"src":"1794:25:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$4220_storage_ptr","typeString":"struct SimpleAMA.Question"},"typeName":{"id":4351,"nodeType":"UserDefinedTypeName","pathNode":{"id":4350,"name":"Question","nameLocations":["1794:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":4220,"src":"1794:8:25"},"referencedDeclaration":4220,"src":"1794:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$4220_storage_ptr","typeString":"struct SimpleAMA.Question"}},"visibility":"internal"}],"id":4356,"initialValue":{"baseExpression":{"id":4353,"name":"questions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"1822:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Question_$4220_storage_$","typeString":"mapping(uint256 => struct SimpleAMA.Question storage ref)"}},"id":4355,"indexExpression":{"id":4354,"name":"_questionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"1832:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1822:22:25","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$4220_storage","typeString":"struct SimpleAMA.Question storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1794:50:25"},{"expression":{"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4357,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"1854:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$4220_storage_ptr","typeString":"struct SimpleAMA.Question storage pointer"}},"id":4359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1863:10:25","memberName":"answerText","nodeType":"MemberAccess","referencedDeclaration":4217,"src":"1854:19:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4360,"name":"_answerText","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"1876:11:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1854:33:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4362,"nodeType":"ExpressionStatement","src":"1854:33:25"},{"expression":{"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4363,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"1897:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$4220_storage_ptr","typeString":"struct SimpleAMA.Question storage pointer"}},"id":4365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1906:8:25","memberName":"answered","nodeType":"MemberAccess","referencedDeclaration":4219,"src":"1897:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1917:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1897:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4368,"nodeType":"ExpressionStatement","src":"1897:24:25"}]},"functionSelector":"447e52a0","id":4370,"implemented":true,"kind":"function","modifiers":[],"name":"answerQuestion","nameLocation":"1493:14:25","nodeType":"FunctionDefinition","parameters":{"id":4333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4330,"mutability":"mutable","name":"_questionId","nameLocation":"1525:11:25","nodeType":"VariableDeclaration","scope":4370,"src":"1517:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1517:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4332,"mutability":"mutable","name":"_answerText","nameLocation":"1560:11:25","nodeType":"VariableDeclaration","scope":4370,"src":"1546:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4331,"name":"string","nodeType":"ElementaryTypeName","src":"1546:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1507:70:25"},"returnParameters":{"id":4334,"nodeType":"ParameterList","parameters":[],"src":"1585:0:25"},"scope":4459,"src":"1484:444:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4413,"nodeType":"Block","src":"2001:226:25","statements":[{"assignments":[4381],"declarations":[{"constant":false,"id":4381,"mutability":"mutable","name":"allQuestions","nameLocation":"2029:12:25","nodeType":"VariableDeclaration","scope":4413,"src":"2011:30:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr","typeString":"struct SimpleAMA.Question[]"},"typeName":{"baseType":{"id":4379,"nodeType":"UserDefinedTypeName","pathNode":{"id":4378,"name":"Question","nameLocations":["2011:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":4220,"src":"2011:8:25"},"referencedDeclaration":4220,"src":"2011:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$4220_storage_ptr","typeString":"struct SimpleAMA.Question"}},"id":4380,"nodeType":"ArrayTypeName","src":"2011:10:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Question_$4220_storage_$dyn_storage_ptr","typeString":"struct SimpleAMA.Question[]"}},"visibility":"internal"}],"id":4388,"initialValue":{"arguments":[{"id":4386,"name":"questionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"2059:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2044:14:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct SimpleAMA.Question memory[] memory)"},"typeName":{"baseType":{"id":4383,"nodeType":"UserDefinedTypeName","pathNode":{"id":4382,"name":"Question","nameLocations":["2048:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":4220,"src":"2048:8:25"},"referencedDeclaration":4220,"src":"2048:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$4220_storage_ptr","typeString":"struct SimpleAMA.Question"}},"id":4384,"nodeType":"ArrayTypeName","src":"2048:10:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Question_$4220_storage_$dyn_storage_ptr","typeString":"struct SimpleAMA.Question[]"}}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2044:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr","typeString":"struct SimpleAMA.Question memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2011:64:25"},{"body":{"id":4409,"nodeType":"Block","src":"2132:59:25","statements":[{"expression":{"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4399,"name":"allQuestions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"2146:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr","typeString":"struct SimpleAMA.Question memory[] memory"}},"id":4403,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4400,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"2159:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2163:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2159:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2146:19:25","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$4220_memory_ptr","typeString":"struct SimpleAMA.Question memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4404,"name":"questions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"2168:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Question_$4220_storage_$","typeString":"mapping(uint256 => struct SimpleAMA.Question storage ref)"}},"id":4406,"indexExpression":{"id":4405,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"2178:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2168:12:25","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$4220_storage","typeString":"struct SimpleAMA.Question storage ref"}},"src":"2146:34:25","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$4220_memory_ptr","typeString":"struct SimpleAMA.Question memory"}},"id":4408,"nodeType":"ExpressionStatement","src":"2146:34:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4393,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"2105:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4394,"name":"questionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"2110:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2105:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4410,"initializationExpression":{"assignments":[4390],"declarations":[{"constant":false,"id":4390,"mutability":"mutable","name":"i","nameLocation":"2098:1:25","nodeType":"VariableDeclaration","scope":4410,"src":"2090:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4389,"name":"uint256","nodeType":"ElementaryTypeName","src":"2090:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4392,"initialValue":{"hexValue":"31","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2102:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"2090:13:25"},"loopExpression":{"expression":{"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2127:3:25","subExpression":{"id":4396,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"2127:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4398,"nodeType":"ExpressionStatement","src":"2127:3:25"},"nodeType":"ForStatement","src":"2085:106:25"},{"expression":{"id":4411,"name":"allQuestions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"2208:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr","typeString":"struct SimpleAMA.Question memory[] memory"}},"functionReturnParameters":4376,"id":4412,"nodeType":"Return","src":"2201:19:25"}]},"functionSelector":"2af9338e","id":4414,"implemented":true,"kind":"function","modifiers":[],"name":"getAllQuestions","nameLocation":"1943:15:25","nodeType":"FunctionDefinition","parameters":{"id":4371,"nodeType":"ParameterList","parameters":[],"src":"1958:2:25"},"returnParameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4414,"src":"1982:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr","typeString":"struct SimpleAMA.Question[]"},"typeName":{"baseType":{"id":4373,"nodeType":"UserDefinedTypeName","pathNode":{"id":4372,"name":"Question","nameLocations":["1982:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":4220,"src":"1982:8:25"},"referencedDeclaration":4220,"src":"1982:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$4220_storage_ptr","typeString":"struct SimpleAMA.Question"}},"id":4374,"nodeType":"ArrayTypeName","src":"1982:10:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Question_$4220_storage_$dyn_storage_ptr","typeString":"struct SimpleAMA.Question[]"}},"visibility":"internal"}],"src":"1981:19:25"},"scope":4459,"src":"1934:293:25","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4445,"nodeType":"Block","src":"2347:186:25","statements":[{"body":{"id":4441,"nodeType":"Block","src":"2404:101:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4431,"name":"questions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"2422:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Question_$4220_storage_$","typeString":"mapping(uint256 => struct SimpleAMA.Question storage ref)"}},"id":4433,"indexExpression":{"id":4432,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"2432:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2422:12:25","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$4220_storage","typeString":"struct SimpleAMA.Question storage ref"}},"id":4434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2435:6:25","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":4213,"src":"2422:19:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4435,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"2445:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2422:27:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4440,"nodeType":"IfStatement","src":"2418:77:25","trueBody":{"id":4439,"nodeType":"Block","src":"2451:44:25","statements":[{"expression":{"hexValue":"74727565","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2476:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4420,"id":4438,"nodeType":"Return","src":"2469:11:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4425,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"2377:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4426,"name":"questionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"2382:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2377:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4442,"initializationExpression":{"assignments":[4422],"declarations":[{"constant":false,"id":4422,"mutability":"mutable","name":"i","nameLocation":"2370:1:25","nodeType":"VariableDeclaration","scope":4442,"src":"2362:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4421,"name":"uint256","nodeType":"ElementaryTypeName","src":"2362:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4424,"initialValue":{"hexValue":"31","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2374:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"2362:13:25"},"loopExpression":{"expression":{"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2399:3:25","subExpression":{"id":4428,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"2399:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4430,"nodeType":"ExpressionStatement","src":"2399:3:25"},"nodeType":"ForStatement","src":"2357:148:25"},{"expression":{"hexValue":"66616c7365","id":4443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2521:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4420,"id":4444,"nodeType":"Return","src":"2514:12:25"}]},"functionSelector":"0f86c618","id":4446,"implemented":true,"kind":"function","modifiers":[],"name":"hasSubmittedQuestion","nameLocation":"2285:20:25","nodeType":"FunctionDefinition","parameters":{"id":4417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"user","nameLocation":"2314:4:25","nodeType":"VariableDeclaration","scope":4446,"src":"2306:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4415,"name":"address","nodeType":"ElementaryTypeName","src":"2306:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2305:14:25"},"returnParameters":{"id":4420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4446,"src":"2341:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4418,"name":"bool","nodeType":"ElementaryTypeName","src":"2341:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2340:6:25"},"scope":4459,"src":"2276:257:25","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4457,"nodeType":"Block","src":"2635:39:25","statements":[{"expression":{"arguments":[{"id":4454,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"2662:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4453,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"2652:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4452,"id":4456,"nodeType":"Return","src":"2645:22:25"}]},"functionSelector":"821dc5d1","id":4458,"implemented":true,"kind":"function","modifiers":[],"name":"getFQTBalance","nameLocation":"2577:13:25","nodeType":"FunctionDefinition","parameters":{"id":4449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4448,"mutability":"mutable","name":"user","nameLocation":"2599:4:25","nodeType":"VariableDeclaration","scope":4458,"src":"2591:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4447,"name":"address","nodeType":"ElementaryTypeName","src":"2591:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2590:14:25"},"returnParameters":{"id":4452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4458,"src":"2626:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4450,"name":"uint256","nodeType":"ElementaryTypeName","src":"2626:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2625:9:25"},"scope":4459,"src":"2568:106:25","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4460,"src":"122:2554:25","usedErrors":[330,333,336,339,581,586,591,1619,1622,1625,3153,3164,3167,3170,3173,3178,3183,3186,3189,3192,3197,3202,3211,3220]}],"src":"32:2645:25"},"id":25}},"contracts":{"@erc725/smart-contracts-v8/contracts/ERC725Y.sol":{"ERC725Y":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"payable","type":"constructor"},{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3244":{"entryPoint":null,"id":3244,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_msgSender_3345":{"entryPoint":200,"id":3345,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_3332":{"entryPoint":208,"id":3332,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":487,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":510,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":441,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":409,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":404,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":461,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"379:81:26","statements":[{"nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:26"},"nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nodeType":"YulBlock","src":"511:51:26","statements":[{"nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:26"},"nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nodeType":"YulBlock","src":"611:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:26"},"nodeType":"YulFunctionCall","src":"670:12:26"},"nodeType":"YulExpressionStatement","src":"670:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:26"},"nodeType":"YulFunctionCall","src":"641:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:26"},"nodeType":"YulFunctionCall","src":"631:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:26"},"nodeType":"YulFunctionCall","src":"624:43:26"},"nodeType":"YulIf","src":"621:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:26","type":""}],"src":"568:122:26"},{"body":{"nodeType":"YulBlock","src":"759:80:26","statements":[{"nodeType":"YulAssignment","src":"769:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:26"},"nodeType":"YulFunctionCall","src":"778:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:26"},"nodeType":"YulFunctionCall","src":"800:33:26"},"nodeType":"YulExpressionStatement","src":"800:33:26"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:26","type":""}],"src":"696:143:26"},{"body":{"nodeType":"YulBlock","src":"922:274:26","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:26"},"nodeType":"YulFunctionCall","src":"970:79:26"},"nodeType":"YulExpressionStatement","src":"970:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:26"},"nodeType":"YulFunctionCall","src":"939:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:26"},"nodeType":"YulFunctionCall","src":"935:32:26"},"nodeType":"YulIf","src":"932:119:26"},{"nodeType":"YulBlock","src":"1061:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:26"},"nodeType":"YulFunctionCall","src":"1147:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:26"},"nodeType":"YulFunctionCall","src":"1115:64:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:26"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:26","type":""}],"src":"845:351:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405260405162001642380380620016428339818101604052810190620000299190620001fe565b620000496200003d620000c860201b60201c565b620000d060201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b0576040517f1ad8836c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620000c181620000d060201b60201c565b5062000230565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001c68262000199565b9050919050565b620001d881620001b9565b8114620001e457600080fd5b50565b600081519050620001f881620001cd565b92915050565b60006020828403121562000217576200021662000194565b5b60006200022784828501620001e7565b91505092915050565b61140280620002406000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b1461012d5780639790242114610158578063dedff9c614610174578063f2fde38b146101b15761007b565b806301ffc9a71461008057806354f6127f146100bd578063715018a6146100fa5780637f23690c14610111575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610850565b6101da565b6040516100b49190610898565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df91906108e9565b61023b565b6040516100f191906109a6565b60405180910390f35b34801561010657600080fd5b5061010f61024d565b005b61012b60048036038101906101269190610afd565b610261565b005b34801561013957600080fd5b506101426102b1565b60405161014f9190610b9a565b60405180910390f35b610172600480360381019061016d9190610d5e565b6102da565b005b34801561018057600080fd5b5061019b60048036038101906101969190610dd6565b61032a565b6040516101a89190610f2b565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d39190610f79565b6103db565b005b600063629aa69460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061023457506102338261045e565b5b9050919050565b6060610246826104c8565b9050919050565b61025561056d565b61025f60006105eb565b565b61026961056d565b600034146102a3576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102ad82826106af565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102e261056d565b6000341461031c576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610326828261070c565b5050565b6060815167ffffffffffffffff811115610347576103466109d2565b5b60405190808252806020026020018201604052801561037a57816020015b60608152602001906001900390816103655790505b50905060005b82518110156103d5576103ac83828151811061039f5761039e610fa6565b5b60200260200101516104c8565b8282815181106103bf576103be610fa6565b5b6020026020010181905250806001019050610380565b50919050565b6103e361056d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044990611058565b60405180910390fd5b61045b816105eb565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60606001600083815260200190815260200160002080546104e8906110a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610514906110a7565b80156105615780601f1061053657610100808354040283529160200191610561565b820191906000526020600020905b81548152906001019060200180831161054457829003601f168201915b50505050509050919050565b6105756107dc565b73ffffffffffffffffffffffffffffffffffffffff166105936102b1565b73ffffffffffffffffffffffffffffffffffffffff16146105e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e090611124565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b806001600084815260200190815260200160002090816106cf91906112fa565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b28260405161070091906109a6565b60405180910390a25050565b8051825114610747576040517f3bcc897900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000825103610782576040517f97da5f9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82518110156107d7576107cc8382815181106107a4576107a3610fa6565b5b60200260200101518383815181106107bf576107be610fa6565b5b60200260200101516106af565b806001019050610785565b505050565b600033905090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61082d816107f8565b811461083857600080fd5b50565b60008135905061084a81610824565b92915050565b600060208284031215610866576108656107ee565b5b60006108748482850161083b565b91505092915050565b60008115159050919050565b6108928161087d565b82525050565b60006020820190506108ad6000830184610889565b92915050565b6000819050919050565b6108c6816108b3565b81146108d157600080fd5b50565b6000813590506108e3816108bd565b92915050565b6000602082840312156108ff576108fe6107ee565b5b600061090d848285016108d4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610950578082015181840152602081019050610935565b60008484015250505050565b6000601f19601f8301169050919050565b600061097882610916565b6109828185610921565b9350610992818560208601610932565b61099b8161095c565b840191505092915050565b600060208201905081810360008301526109c0818461096d565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a0a8261095c565b810181811067ffffffffffffffff82111715610a2957610a286109d2565b5b80604052505050565b6000610a3c6107e4565b9050610a488282610a01565b919050565b600067ffffffffffffffff821115610a6857610a676109d2565b5b610a718261095c565b9050602081019050919050565b82818337600083830152505050565b6000610aa0610a9b84610a4d565b610a32565b905082815260208101848484011115610abc57610abb6109cd565b5b610ac7848285610a7e565b509392505050565b600082601f830112610ae457610ae36109c8565b5b8135610af4848260208601610a8d565b91505092915050565b60008060408385031215610b1457610b136107ee565b5b6000610b22858286016108d4565b925050602083013567ffffffffffffffff811115610b4357610b426107f3565b5b610b4f85828601610acf565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8482610b59565b9050919050565b610b9481610b79565b82525050565b6000602082019050610baf6000830184610b8b565b92915050565b600067ffffffffffffffff821115610bd057610bcf6109d2565b5b602082029050602081019050919050565b600080fd5b6000610bf9610bf484610bb5565b610a32565b90508083825260208201905060208402830185811115610c1c57610c1b610be1565b5b835b81811015610c455780610c3188826108d4565b845260208401935050602081019050610c1e565b5050509392505050565b600082601f830112610c6457610c636109c8565b5b8135610c74848260208601610be6565b91505092915050565b600067ffffffffffffffff821115610c9857610c976109d2565b5b602082029050602081019050919050565b6000610cbc610cb784610c7d565b610a32565b90508083825260208201905060208402830185811115610cdf57610cde610be1565b5b835b81811015610d2657803567ffffffffffffffff811115610d0457610d036109c8565b5b808601610d118982610acf565b85526020850194505050602081019050610ce1565b5050509392505050565b600082601f830112610d4557610d446109c8565b5b8135610d55848260208601610ca9565b91505092915050565b60008060408385031215610d7557610d746107ee565b5b600083013567ffffffffffffffff811115610d9357610d926107f3565b5b610d9f85828601610c4f565b925050602083013567ffffffffffffffff811115610dc057610dbf6107f3565b5b610dcc85828601610d30565b9150509250929050565b600060208284031215610dec57610deb6107ee565b5b600082013567ffffffffffffffff811115610e0a57610e096107f3565b5b610e1684828501610c4f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610e6782610916565b610e718185610e4b565b9350610e81818560208601610932565b610e8a8161095c565b840191505092915050565b6000610ea18383610e5c565b905092915050565b6000602082019050919050565b6000610ec182610e1f565b610ecb8185610e2a565b935083602082028501610edd85610e3b565b8060005b85811015610f195784840389528151610efa8582610e95565b9450610f0583610ea9565b925060208a01995050600181019050610ee1565b50829750879550505050505092915050565b60006020820190508181036000830152610f458184610eb6565b905092915050565b610f5681610b79565b8114610f6157600080fd5b50565b600081359050610f7381610f4d565b92915050565b600060208284031215610f8f57610f8e6107ee565b5b6000610f9d84828501610f64565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611042602683610fd5565b915061104d82610fe6565b604082019050919050565b6000602082019050818103600083015261107181611035565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110bf57607f821691505b6020821081036110d2576110d1611078565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061110e602083610fd5565b9150611119826110d8565b602082019050919050565b6000602082019050818103600083015261113d81611101565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111a67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611169565b6111b08683611169565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006111f76111f26111ed846111c8565b6111d2565b6111c8565b9050919050565b6000819050919050565b611211836111dc565b61122561121d826111fe565b848454611176565b825550505050565b600090565b61123a61122d565b611245818484611208565b505050565b5b818110156112695761125e600082611232565b60018101905061124b565b5050565b601f8211156112ae5761127f81611144565b61128884611159565b81016020851015611297578190505b6112ab6112a385611159565b83018261124a565b50505b505050565b600082821c905092915050565b60006112d1600019846008026112b3565b1980831691505092915050565b60006112ea83836112c0565b9150826002028217905092915050565b61130382610916565b67ffffffffffffffff81111561131c5761131b6109d2565b5b61132682546110a7565b61133182828561126d565b600060209050601f8311600181146113645760008415611352578287015190505b61135c85826112de565b8655506113c4565b601f19841661137286611144565b60005b8281101561139a57848901518255600182019150602085019450602081019050611375565b868310156113b757848901516113b3601f8916826112c0565b8355505b6001600288020188555050505b50505050505056fea26469706673582212201f5cca8c76f06eacba4b2ef498c7cf16fc25ded315f4f4cde92f565fdbbb998864736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0x1642 CODESIZE SUB DUP1 PUSH3 0x1642 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x29 SWAP2 SWAP1 PUSH3 0x1FE JUMP JUMPDEST PUSH3 0x49 PUSH3 0x3D PUSH3 0xC8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xD0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1AD8836C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC1 DUP2 PUSH3 0xD0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x230 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C6 DUP3 PUSH3 0x199 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1D8 DUP2 PUSH3 0x1B9 JUMP JUMPDEST DUP2 EQ PUSH3 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1F8 DUP2 PUSH3 0x1CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x217 JUMPI PUSH3 0x216 PUSH3 0x194 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x227 DUP5 DUP3 DUP6 ADD PUSH3 0x1E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1402 DUP1 PUSH3 0x240 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B1 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x8E9 JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x126 SWAP2 SWAP1 PUSH2 0xAFD JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0x32A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x629AA694 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x234 JUMPI POP PUSH2 0x233 DUP3 PUSH2 0x45E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x246 DUP3 PUSH2 0x4C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x255 PUSH2 0x56D JUMP JUMPDEST PUSH2 0x25F PUSH1 0x0 PUSH2 0x5EB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x269 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x2A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AD DUP3 DUP3 PUSH2 0x6AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x31C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x326 DUP3 DUP3 PUSH2 0x70C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x347 JUMPI PUSH2 0x346 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x37A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x365 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x3AC DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x39F JUMPI PUSH2 0x39E PUSH2 0xFA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x4C8 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3BF JUMPI PUSH2 0x3BE PUSH2 0xFA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x380 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E3 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x449 SWAP1 PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x45B DUP2 PUSH2 0x5EB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x4E8 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x514 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x561 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x536 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x561 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x544 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x575 PUSH2 0x7DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x593 PUSH2 0x2B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E0 SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x6CF SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3BCC897900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD SUB PUSH2 0x782 JUMPI PUSH1 0x40 MLOAD PUSH32 0x97DA5F9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x7D7 JUMPI PUSH2 0x7CC DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7A4 JUMPI PUSH2 0x7A3 PUSH2 0xFA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7BF JUMPI PUSH2 0x7BE PUSH2 0xFA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x6AF JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x785 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82D DUP2 PUSH2 0x7F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x84A DUP2 PUSH2 0x824 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x866 JUMPI PUSH2 0x865 PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x874 DUP5 DUP3 DUP6 ADD PUSH2 0x83B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x892 DUP2 PUSH2 0x87D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x889 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C6 DUP2 PUSH2 0x8B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x8D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8E3 DUP2 PUSH2 0x8BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8FF JUMPI PUSH2 0x8FE PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x90D DUP5 DUP3 DUP6 ADD PUSH2 0x8D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x950 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x978 DUP3 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x982 DUP2 DUP6 PUSH2 0x921 JUMP JUMPDEST SWAP4 POP PUSH2 0x992 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x932 JUMP JUMPDEST PUSH2 0x99B DUP2 PUSH2 0x95C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9C0 DUP2 DUP5 PUSH2 0x96D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xA0A DUP3 PUSH2 0x95C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA29 JUMPI PUSH2 0xA28 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3C PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH2 0xA48 DUP3 DUP3 PUSH2 0xA01 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA68 JUMPI PUSH2 0xA67 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH2 0xA71 DUP3 PUSH2 0x95C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA0 PUSH2 0xA9B DUP5 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xABC JUMPI PUSH2 0xABB PUSH2 0x9CD JUMP JUMPDEST JUMPDEST PUSH2 0xAC7 DUP5 DUP3 DUP6 PUSH2 0xA7E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAE4 JUMPI PUSH2 0xAE3 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAF4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xA8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB14 JUMPI PUSH2 0xB13 PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB22 DUP6 DUP3 DUP7 ADD PUSH2 0x8D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB43 JUMPI PUSH2 0xB42 PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST PUSH2 0xB4F DUP6 DUP3 DUP7 ADD PUSH2 0xACF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB84 DUP3 PUSH2 0xB59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB94 DUP2 PUSH2 0xB79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xBD0 JUMPI PUSH2 0xBCF PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBF9 PUSH2 0xBF4 DUP5 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xC1C JUMPI PUSH2 0xC1B PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC45 JUMPI DUP1 PUSH2 0xC31 DUP9 DUP3 PUSH2 0x8D4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC1E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC64 JUMPI PUSH2 0xC63 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC74 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC98 JUMPI PUSH2 0xC97 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBC PUSH2 0xCB7 DUP5 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xCDF JUMPI PUSH2 0xCDE PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD26 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD04 JUMPI PUSH2 0xD03 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0xD11 DUP10 DUP3 PUSH2 0xACF JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCE1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD45 JUMPI PUSH2 0xD44 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD55 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xCA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH2 0xD74 PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD93 JUMPI PUSH2 0xD92 PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST PUSH2 0xD9F DUP6 DUP3 DUP7 ADD PUSH2 0xC4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDC0 JUMPI PUSH2 0xDBF PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST PUSH2 0xDCC DUP6 DUP3 DUP7 ADD PUSH2 0xD30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEC JUMPI PUSH2 0xDEB PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE0A JUMPI PUSH2 0xE09 PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST PUSH2 0xE16 DUP5 DUP3 DUP6 ADD PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE67 DUP3 PUSH2 0x916 JUMP JUMPDEST PUSH2 0xE71 DUP2 DUP6 PUSH2 0xE4B JUMP JUMPDEST SWAP4 POP PUSH2 0xE81 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x932 JUMP JUMPDEST PUSH2 0xE8A DUP2 PUSH2 0x95C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA1 DUP4 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC1 DUP3 PUSH2 0xE1F JUMP JUMPDEST PUSH2 0xECB DUP2 DUP6 PUSH2 0xE2A JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0xEDD DUP6 PUSH2 0xE3B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xF19 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0xEFA DUP6 DUP3 PUSH2 0xE95 JUMP JUMPDEST SWAP5 POP PUSH2 0xF05 DUP4 PUSH2 0xEA9 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xEE1 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF45 DUP2 DUP5 PUSH2 0xEB6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF56 DUP2 PUSH2 0xB79 JUMP JUMPDEST DUP2 EQ PUSH2 0xF61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF73 DUP2 PUSH2 0xF4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8F JUMPI PUSH2 0xF8E PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF9D DUP5 DUP3 DUP6 ADD PUSH2 0xF64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1042 PUSH1 0x26 DUP4 PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x104D DUP3 PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1071 DUP2 PUSH2 0x1035 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10BF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10D2 JUMPI PUSH2 0x10D1 PUSH2 0x1078 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110E PUSH1 0x20 DUP4 PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1119 DUP3 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x113D DUP2 PUSH2 0x1101 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x11A6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1169 JUMP JUMPDEST PUSH2 0x11B0 DUP7 DUP4 PUSH2 0x1169 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F7 PUSH2 0x11F2 PUSH2 0x11ED DUP5 PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0x11D2 JUMP JUMPDEST PUSH2 0x11C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1211 DUP4 PUSH2 0x11DC JUMP JUMPDEST PUSH2 0x1225 PUSH2 0x121D DUP3 PUSH2 0x11FE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1176 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x123A PUSH2 0x122D JUMP JUMPDEST PUSH2 0x1245 DUP2 DUP5 DUP5 PUSH2 0x1208 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1269 JUMPI PUSH2 0x125E PUSH1 0x0 DUP3 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x124B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x12AE JUMPI PUSH2 0x127F DUP2 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0x1288 DUP5 PUSH2 0x1159 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1297 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x12AB PUSH2 0x12A3 DUP6 PUSH2 0x1159 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x124A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D1 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x12B3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12EA DUP4 DUP4 PUSH2 0x12C0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1303 DUP3 PUSH2 0x916 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x131C JUMPI PUSH2 0x131B PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH2 0x1326 DUP3 SLOAD PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x1331 DUP3 DUP3 DUP6 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1364 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1352 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x135C DUP6 DUP3 PUSH2 0x12DE JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1372 DUP7 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x139A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1375 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x13B7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x13B3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x12C0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0x5C 0xCA DUP13 PUSH23 0xF06EACBA4B2EF498C7CF16FC25DED315F4F4CDE92F565F 0xDB 0xBB SWAP10 DUP9 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1009:6184:0:-:0;;;1557:208;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:19;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1637:1:0;1613:26;;:12;:26;;;1609:100;;1662:36;;;;;;;;;;;;;;1609:100;1718:40;1745:12;1718:26;;;:40;;:::i;:::-;1557:208;1009:6184;;655:96:20;708:7;734:10;727:17;;655:96;:::o;2426:187:19:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;88:117:26:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1009:6184:0:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_3275":{"entryPoint":1389,"id":3275,"parameterSlots":0,"returnSlots":0},"@_getData_176":{"entryPoint":1224,"id":176,"parameterSlots":1,"returnSlots":1},"@_msgSender_3345":{"entryPoint":2012,"id":3345,"parameterSlots":0,"returnSlots":1},"@_setDataBatch_249":{"entryPoint":1804,"id":249,"parameterSlots":2,"returnSlots":0},"@_setData_196":{"entryPoint":1711,"id":196,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_3332":{"entryPoint":1515,"id":3332,"parameterSlots":1,"returnSlots":0},"@getDataBatch_111":{"entryPoint":810,"id":111,"parameterSlots":1,"returnSlots":1},"@getData_64":{"entryPoint":571,"id":64,"parameterSlots":1,"returnSlots":1},"@owner_3261":{"entryPoint":689,"id":3261,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_3289":{"entryPoint":589,"id":3289,"parameterSlots":0,"returnSlots":0},"@setDataBatch_163":{"entryPoint":730,"id":163,"parameterSlots":2,"returnSlots":0},"@setData_136":{"entryPoint":609,"id":136,"parameterSlots":2,"returnSlots":0},"@supportsInterface_268":{"entryPoint":474,"id":268,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3386":{"entryPoint":1118,"id":3386,"parameterSlots":1,"returnSlots":1},"@transferOwnership_3312":{"entryPoint":987,"id":3312,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":3046,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3241,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":2701,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":3151,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3376,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":2260,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":2107,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":2767,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3961,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":3542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3422,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":2281,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes_memory_ptr":{"entryPoint":2813,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":2128,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":3733,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2955,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":3766,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2185,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":3676,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":2413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":4149,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":4353,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2970,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":3883,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2200,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2470,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4184,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4388,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":2610,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2020,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":2997,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3197,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":2637,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3643,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage":{"entryPoint":4420,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3615,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2326,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3753,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":3626,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":3659,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":2337,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4053,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_bytes_storage":{"entryPoint":4717,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2937,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2173,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2227,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":2040,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2905,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4552,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":4682,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":4572,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":4858,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":2686,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2354,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":4441,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4263,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":4830,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2561,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":4562,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":4800,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":4216,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4006,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2514,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":4606,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2504,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3041,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":2509,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2035,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2030,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2396,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":4457,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":4787,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":4658,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":4070,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":4312,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":4470,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":4616,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3917,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":2237,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":2084,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":4653,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22278:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"378:105:26","statements":[{"nodeType":"YulAssignment","src":"388:89:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:26","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:26"},"nodeType":"YulFunctionCall","src":"399:78:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:26"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:26","type":""}],"src":"334:149:26"},{"body":{"nodeType":"YulBlock","src":"531:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:26"},"nodeType":"YulFunctionCall","src":"589:12:26"},"nodeType":"YulExpressionStatement","src":"589:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:26"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:26"},"nodeType":"YulFunctionCall","src":"561:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:26"},"nodeType":"YulFunctionCall","src":"551:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:26"},"nodeType":"YulFunctionCall","src":"544:42:26"},"nodeType":"YulIf","src":"541:62:26"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:26","type":""}],"src":"489:120:26"},{"body":{"nodeType":"YulBlock","src":"666:86:26","statements":[{"nodeType":"YulAssignment","src":"676:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:26"},"nodeType":"YulFunctionCall","src":"685:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:26"},"nodeType":"YulFunctionCall","src":"714:32:26"},"nodeType":"YulExpressionStatement","src":"714:32:26"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:26","type":""}],"src":"615:137:26"},{"body":{"nodeType":"YulBlock","src":"823:262:26","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:26"},"nodeType":"YulFunctionCall","src":"871:79:26"},"nodeType":"YulExpressionStatement","src":"871:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:26"},"nodeType":"YulFunctionCall","src":"840:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:26"},"nodeType":"YulFunctionCall","src":"836:32:26"},"nodeType":"YulIf","src":"833:119:26"},{"nodeType":"YulBlock","src":"962:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:26"},"nodeType":"YulFunctionCall","src":"1036:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:26"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:26"},"nodeType":"YulFunctionCall","src":"1016:52:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:26","type":""}],"src":"758:327:26"},{"body":{"nodeType":"YulBlock","src":"1133:48:26","statements":[{"nodeType":"YulAssignment","src":"1143:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:26"},"nodeType":"YulFunctionCall","src":"1161:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:26"},"nodeType":"YulFunctionCall","src":"1154:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:26","type":""}],"src":"1091:90:26"},{"body":{"nodeType":"YulBlock","src":"1246:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:26"},"nodeType":"YulFunctionCall","src":"1268:21:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:26"},"nodeType":"YulFunctionCall","src":"1256:34:26"},"nodeType":"YulExpressionStatement","src":"1256:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:26","type":""}],"src":"1187:109:26"},{"body":{"nodeType":"YulBlock","src":"1394:118:26","statements":[{"nodeType":"YulAssignment","src":"1404:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:26"},"nodeType":"YulFunctionCall","src":"1412:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:26"},"nodeType":"YulFunctionCall","src":"1487:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:26"},"nodeType":"YulFunctionCall","src":"1440:65:26"},"nodeType":"YulExpressionStatement","src":"1440:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:26","type":""}],"src":"1302:210:26"},{"body":{"nodeType":"YulBlock","src":"1563:32:26","statements":[{"nodeType":"YulAssignment","src":"1573:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1584:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:26"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:26","type":""}],"src":"1518:77:26"},{"body":{"nodeType":"YulBlock","src":"1644:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"1701:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1710:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1713:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1703:6:26"},"nodeType":"YulFunctionCall","src":"1703:12:26"},"nodeType":"YulExpressionStatement","src":"1703:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1667:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1692:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1674:17:26"},"nodeType":"YulFunctionCall","src":"1674:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1664:2:26"},"nodeType":"YulFunctionCall","src":"1664:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1657:6:26"},"nodeType":"YulFunctionCall","src":"1657:43:26"},"nodeType":"YulIf","src":"1654:63:26"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1637:5:26","type":""}],"src":"1601:122:26"},{"body":{"nodeType":"YulBlock","src":"1781:87:26","statements":[{"nodeType":"YulAssignment","src":"1791:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1813:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1800:12:26"},"nodeType":"YulFunctionCall","src":"1800:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1791:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1856:5:26"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1829:26:26"},"nodeType":"YulFunctionCall","src":"1829:33:26"},"nodeType":"YulExpressionStatement","src":"1829:33:26"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1759:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"1767:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1775:5:26","type":""}],"src":"1729:139:26"},{"body":{"nodeType":"YulBlock","src":"1940:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"1986:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1988:77:26"},"nodeType":"YulFunctionCall","src":"1988:79:26"},"nodeType":"YulExpressionStatement","src":"1988:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1961:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1970:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1957:3:26"},"nodeType":"YulFunctionCall","src":"1957:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1982:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1953:3:26"},"nodeType":"YulFunctionCall","src":"1953:32:26"},"nodeType":"YulIf","src":"1950:119:26"},{"nodeType":"YulBlock","src":"2079:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2094:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2108:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2098:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2123:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2158:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2169:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2154:3:26"},"nodeType":"YulFunctionCall","src":"2154:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2178:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2133:20:26"},"nodeType":"YulFunctionCall","src":"2133:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2123:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1910:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1921:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1933:6:26","type":""}],"src":"1874:329:26"},{"body":{"nodeType":"YulBlock","src":"2267:40:26","statements":[{"nodeType":"YulAssignment","src":"2278:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2294:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2288:5:26"},"nodeType":"YulFunctionCall","src":"2288:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2278:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2250:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2260:6:26","type":""}],"src":"2209:98:26"},{"body":{"nodeType":"YulBlock","src":"2408:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2425:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2430:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2418:6:26"},"nodeType":"YulFunctionCall","src":"2418:19:26"},"nodeType":"YulExpressionStatement","src":"2418:19:26"},{"nodeType":"YulAssignment","src":"2446:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2465:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2470:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:26"},"nodeType":"YulFunctionCall","src":"2461:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2446:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2380:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"2385:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2396:11:26","type":""}],"src":"2313:168:26"},{"body":{"nodeType":"YulBlock","src":"2549:184:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2559:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2568:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2563:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2628:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2653:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"2658:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2649:3:26"},"nodeType":"YulFunctionCall","src":"2649:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2672:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"2677:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2668:3:26"},"nodeType":"YulFunctionCall","src":"2668:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2662:5:26"},"nodeType":"YulFunctionCall","src":"2662:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2642:6:26"},"nodeType":"YulFunctionCall","src":"2642:39:26"},"nodeType":"YulExpressionStatement","src":"2642:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2589:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"2592:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2586:2:26"},"nodeType":"YulFunctionCall","src":"2586:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2600:19:26","statements":[{"nodeType":"YulAssignment","src":"2602:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2611:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"2614:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2607:3:26"},"nodeType":"YulFunctionCall","src":"2607:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2602:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"2582:3:26","statements":[]},"src":"2578:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2711:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2716:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2707:3:26"},"nodeType":"YulFunctionCall","src":"2707:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"2725:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2700:6:26"},"nodeType":"YulFunctionCall","src":"2700:27:26"},"nodeType":"YulExpressionStatement","src":"2700:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2531:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2536:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"2541:6:26","type":""}],"src":"2487:246:26"},{"body":{"nodeType":"YulBlock","src":"2787:54:26","statements":[{"nodeType":"YulAssignment","src":"2797:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2815:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2822:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2811:3:26"},"nodeType":"YulFunctionCall","src":"2811:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2831:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2827:3:26"},"nodeType":"YulFunctionCall","src":"2827:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2807:3:26"},"nodeType":"YulFunctionCall","src":"2807:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2797:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2770:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2780:6:26","type":""}],"src":"2739:102:26"},{"body":{"nodeType":"YulBlock","src":"2937:283:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2947:52:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2993:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2961:31:26"},"nodeType":"YulFunctionCall","src":"2961:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2951:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3008:77:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3073:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"3078:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3015:57:26"},"nodeType":"YulFunctionCall","src":"3015:70:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3008:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3140:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3129:3:26"},"nodeType":"YulFunctionCall","src":"3129:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"3147:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"3152:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3094:34:26"},"nodeType":"YulFunctionCall","src":"3094:65:26"},"nodeType":"YulExpressionStatement","src":"3094:65:26"},{"nodeType":"YulAssignment","src":"3168:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3179:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3206:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3184:21:26"},"nodeType":"YulFunctionCall","src":"3184:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:26"},"nodeType":"YulFunctionCall","src":"3175:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3168:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2918:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2925:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2933:3:26","type":""}],"src":"2847:373:26"},{"body":{"nodeType":"YulBlock","src":"3342:193:26","statements":[{"nodeType":"YulAssignment","src":"3352:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3364:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3375:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3360:3:26"},"nodeType":"YulFunctionCall","src":"3360:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3352:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3399:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3410:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3395:3:26"},"nodeType":"YulFunctionCall","src":"3395:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3418:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3424:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3414:3:26"},"nodeType":"YulFunctionCall","src":"3414:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3388:6:26"},"nodeType":"YulFunctionCall","src":"3388:47:26"},"nodeType":"YulExpressionStatement","src":"3388:47:26"},{"nodeType":"YulAssignment","src":"3444:84:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3514:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"3523:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3452:61:26"},"nodeType":"YulFunctionCall","src":"3452:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3444:4:26"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3314:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3326:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3337:4:26","type":""}],"src":"3226:309:26"},{"body":{"nodeType":"YulBlock","src":"3630:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3647:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3650:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3640:6:26"},"nodeType":"YulFunctionCall","src":"3640:12:26"},"nodeType":"YulExpressionStatement","src":"3640:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3541:117:26"},{"body":{"nodeType":"YulBlock","src":"3753:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3770:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3773:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3763:6:26"},"nodeType":"YulFunctionCall","src":"3763:12:26"},"nodeType":"YulExpressionStatement","src":"3763:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3664:117:26"},{"body":{"nodeType":"YulBlock","src":"3815:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3832:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3835:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3825:6:26"},"nodeType":"YulFunctionCall","src":"3825:88:26"},"nodeType":"YulExpressionStatement","src":"3825:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3929:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3932:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3922:6:26"},"nodeType":"YulFunctionCall","src":"3922:15:26"},"nodeType":"YulExpressionStatement","src":"3922:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3953:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3956:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3946:6:26"},"nodeType":"YulFunctionCall","src":"3946:15:26"},"nodeType":"YulExpressionStatement","src":"3946:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3787:180:26"},{"body":{"nodeType":"YulBlock","src":"4016:238:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4026:58:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4048:6:26"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4078:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4056:21:26"},"nodeType":"YulFunctionCall","src":"4056:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4044:3:26"},"nodeType":"YulFunctionCall","src":"4044:40:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4030:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4195:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4197:16:26"},"nodeType":"YulFunctionCall","src":"4197:18:26"},"nodeType":"YulExpressionStatement","src":"4197:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4138:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"4150:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4135:2:26"},"nodeType":"YulFunctionCall","src":"4135:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4174:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4186:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4171:2:26"},"nodeType":"YulFunctionCall","src":"4171:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4132:2:26"},"nodeType":"YulFunctionCall","src":"4132:62:26"},"nodeType":"YulIf","src":"4129:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4233:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4237:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4226:6:26"},"nodeType":"YulFunctionCall","src":"4226:22:26"},"nodeType":"YulExpressionStatement","src":"4226:22:26"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4002:6:26","type":""},{"name":"size","nodeType":"YulTypedName","src":"4010:4:26","type":""}],"src":"3973:281:26"},{"body":{"nodeType":"YulBlock","src":"4301:88:26","statements":[{"nodeType":"YulAssignment","src":"4311:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4321:18:26"},"nodeType":"YulFunctionCall","src":"4321:20:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4311:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4370:6:26"},{"name":"size","nodeType":"YulIdentifier","src":"4378:4:26"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4350:19:26"},"nodeType":"YulFunctionCall","src":"4350:33:26"},"nodeType":"YulExpressionStatement","src":"4350:33:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4285:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4294:6:26","type":""}],"src":"4260:129:26"},{"body":{"nodeType":"YulBlock","src":"4461:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"4566:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4568:16:26"},"nodeType":"YulFunctionCall","src":"4568:18:26"},"nodeType":"YulExpressionStatement","src":"4568:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4538:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4546:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4535:2:26"},"nodeType":"YulFunctionCall","src":"4535:30:26"},"nodeType":"YulIf","src":"4532:56:26"},{"nodeType":"YulAssignment","src":"4598:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4628:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4606:21:26"},"nodeType":"YulFunctionCall","src":"4606:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4598:4:26"}]},{"nodeType":"YulAssignment","src":"4672:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4684:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"4690:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4680:3:26"},"nodeType":"YulFunctionCall","src":"4680:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4672:4:26"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4445:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4456:4:26","type":""}],"src":"4395:307:26"},{"body":{"nodeType":"YulBlock","src":"4772:82:26","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4795:3:26"},{"name":"src","nodeType":"YulIdentifier","src":"4800:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"4805:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4782:12:26"},"nodeType":"YulFunctionCall","src":"4782:30:26"},"nodeType":"YulExpressionStatement","src":"4782:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4832:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"4837:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4828:3:26"},"nodeType":"YulFunctionCall","src":"4828:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"4846:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4821:6:26"},"nodeType":"YulFunctionCall","src":"4821:27:26"},"nodeType":"YulExpressionStatement","src":"4821:27:26"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4754:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4759:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"4764:6:26","type":""}],"src":"4708:146:26"},{"body":{"nodeType":"YulBlock","src":"4943:340:26","statements":[{"nodeType":"YulAssignment","src":"4953:74:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5019:6:26"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4978:40:26"},"nodeType":"YulFunctionCall","src":"4978:48:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4962:15:26"},"nodeType":"YulFunctionCall","src":"4962:65:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4953:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5043:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"5050:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5036:6:26"},"nodeType":"YulFunctionCall","src":"5036:21:26"},"nodeType":"YulExpressionStatement","src":"5036:21:26"},{"nodeType":"YulVariableDeclaration","src":"5066:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5081:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"5088:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5077:3:26"},"nodeType":"YulFunctionCall","src":"5077:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5070:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5131:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"5133:77:26"},"nodeType":"YulFunctionCall","src":"5133:79:26"},"nodeType":"YulExpressionStatement","src":"5133:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5112:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"5117:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5108:3:26"},"nodeType":"YulFunctionCall","src":"5108:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"5126:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5105:2:26"},"nodeType":"YulFunctionCall","src":"5105:25:26"},"nodeType":"YulIf","src":"5102:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5260:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"5265:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"5270:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5223:36:26"},"nodeType":"YulFunctionCall","src":"5223:54:26"},"nodeType":"YulExpressionStatement","src":"5223:54:26"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4916:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"4921:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4929:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4937:5:26","type":""}],"src":"4860:423:26"},{"body":{"nodeType":"YulBlock","src":"5363:277:26","statements":[{"body":{"nodeType":"YulBlock","src":"5412:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5414:77:26"},"nodeType":"YulFunctionCall","src":"5414:79:26"},"nodeType":"YulExpressionStatement","src":"5414:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5391:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5399:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5387:3:26"},"nodeType":"YulFunctionCall","src":"5387:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"5406:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5383:3:26"},"nodeType":"YulFunctionCall","src":"5383:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5376:6:26"},"nodeType":"YulFunctionCall","src":"5376:35:26"},"nodeType":"YulIf","src":"5373:122:26"},{"nodeType":"YulVariableDeclaration","src":"5504:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5531:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5518:12:26"},"nodeType":"YulFunctionCall","src":"5518:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5508:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5547:87:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5607:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5615:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5603:3:26"},"nodeType":"YulFunctionCall","src":"5603:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"5622:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"5630:3:26"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5556:46:26"},"nodeType":"YulFunctionCall","src":"5556:78:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5547:5:26"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5341:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"5349:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5357:5:26","type":""}],"src":"5302:338:26"},{"body":{"nodeType":"YulBlock","src":"5738:560:26","statements":[{"body":{"nodeType":"YulBlock","src":"5784:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5786:77:26"},"nodeType":"YulFunctionCall","src":"5786:79:26"},"nodeType":"YulExpressionStatement","src":"5786:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5759:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5768:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5755:3:26"},"nodeType":"YulFunctionCall","src":"5755:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5780:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5751:3:26"},"nodeType":"YulFunctionCall","src":"5751:32:26"},"nodeType":"YulIf","src":"5748:119:26"},{"nodeType":"YulBlock","src":"5877:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5892:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5906:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5896:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5921:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5956:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5967:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5952:3:26"},"nodeType":"YulFunctionCall","src":"5952:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5976:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5931:20:26"},"nodeType":"YulFunctionCall","src":"5931:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5921:6:26"}]}]},{"nodeType":"YulBlock","src":"6004:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6019:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6050:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6061:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6046:3:26"},"nodeType":"YulFunctionCall","src":"6046:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6033:12:26"},"nodeType":"YulFunctionCall","src":"6033:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6023:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"6112:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6114:77:26"},"nodeType":"YulFunctionCall","src":"6114:79:26"},"nodeType":"YulExpressionStatement","src":"6114:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6084:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6092:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6081:2:26"},"nodeType":"YulFunctionCall","src":"6081:30:26"},"nodeType":"YulIf","src":"6078:117:26"},{"nodeType":"YulAssignment","src":"6209:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6253:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6264:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6249:3:26"},"nodeType":"YulFunctionCall","src":"6249:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6273:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6219:29:26"},"nodeType":"YulFunctionCall","src":"6219:62:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6209:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5700:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5711:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5723:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5731:6:26","type":""}],"src":"5646:652:26"},{"body":{"nodeType":"YulBlock","src":"6349:81:26","statements":[{"nodeType":"YulAssignment","src":"6359:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6374:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"6381:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6370:3:26"},"nodeType":"YulFunctionCall","src":"6370:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6359:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6331:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6341:7:26","type":""}],"src":"6304:126:26"},{"body":{"nodeType":"YulBlock","src":"6481:51:26","statements":[{"nodeType":"YulAssignment","src":"6491:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6520:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6502:17:26"},"nodeType":"YulFunctionCall","src":"6502:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6491:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6463:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6473:7:26","type":""}],"src":"6436:96:26"},{"body":{"nodeType":"YulBlock","src":"6603:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6620:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6643:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6625:17:26"},"nodeType":"YulFunctionCall","src":"6625:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6613:6:26"},"nodeType":"YulFunctionCall","src":"6613:37:26"},"nodeType":"YulExpressionStatement","src":"6613:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6591:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6598:3:26","type":""}],"src":"6538:118:26"},{"body":{"nodeType":"YulBlock","src":"6760:124:26","statements":[{"nodeType":"YulAssignment","src":"6770:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6782:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6793:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6778:3:26"},"nodeType":"YulFunctionCall","src":"6778:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6770:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6850:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6863:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6874:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6859:3:26"},"nodeType":"YulFunctionCall","src":"6859:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6806:43:26"},"nodeType":"YulFunctionCall","src":"6806:71:26"},"nodeType":"YulExpressionStatement","src":"6806:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6732:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6744:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6755:4:26","type":""}],"src":"6662:222:26"},{"body":{"nodeType":"YulBlock","src":"6972:229:26","statements":[{"body":{"nodeType":"YulBlock","src":"7077:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7079:16:26"},"nodeType":"YulFunctionCall","src":"7079:18:26"},"nodeType":"YulExpressionStatement","src":"7079:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7049:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7057:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7046:2:26"},"nodeType":"YulFunctionCall","src":"7046:30:26"},"nodeType":"YulIf","src":"7043:56:26"},{"nodeType":"YulAssignment","src":"7109:25:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7121:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7129:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7117:3:26"},"nodeType":"YulFunctionCall","src":"7117:17:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7109:4:26"}]},{"nodeType":"YulAssignment","src":"7171:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7183:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"7189:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7179:3:26"},"nodeType":"YulFunctionCall","src":"7179:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7171:4:26"}]}]},"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6956:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6967:4:26","type":""}],"src":"6890:311:26"},{"body":{"nodeType":"YulBlock","src":"7296:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7313:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7316:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7306:6:26"},"nodeType":"YulFunctionCall","src":"7306:12:26"},"nodeType":"YulExpressionStatement","src":"7306:12:26"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"7207:117:26"},{"body":{"nodeType":"YulBlock","src":"7449:608:26","statements":[{"nodeType":"YulAssignment","src":"7459:90:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7541:6:26"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7484:56:26"},"nodeType":"YulFunctionCall","src":"7484:64:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7468:15:26"},"nodeType":"YulFunctionCall","src":"7468:81:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7459:5:26"}]},{"nodeType":"YulVariableDeclaration","src":"7558:16:26","value":{"name":"array","nodeType":"YulIdentifier","src":"7569:5:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7562:3:26","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7591:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"7598:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7584:6:26"},"nodeType":"YulFunctionCall","src":"7584:21:26"},"nodeType":"YulExpressionStatement","src":"7584:21:26"},{"nodeType":"YulAssignment","src":"7614:23:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7625:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"7632:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7621:3:26"},"nodeType":"YulFunctionCall","src":"7621:16:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7614:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"7647:44:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7665:6:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7677:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7685:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7673:3:26"},"nodeType":"YulFunctionCall","src":"7673:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7661:3:26"},"nodeType":"YulFunctionCall","src":"7661:30:26"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7651:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7719:103:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7733:77:26"},"nodeType":"YulFunctionCall","src":"7733:79:26"},"nodeType":"YulExpressionStatement","src":"7733:79:26"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7706:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"7714:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7703:2:26"},"nodeType":"YulFunctionCall","src":"7703:15:26"},"nodeType":"YulIf","src":"7700:122:26"},{"body":{"nodeType":"YulBlock","src":"7907:144:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7922:21:26","value":{"name":"src","nodeType":"YulIdentifier","src":"7940:3:26"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7926:10:26","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7964:3:26"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"7990:10:26"},{"name":"end","nodeType":"YulIdentifier","src":"8002:3:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7969:20:26"},"nodeType":"YulFunctionCall","src":"7969:37:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7957:6:26"},"nodeType":"YulFunctionCall","src":"7957:50:26"},"nodeType":"YulExpressionStatement","src":"7957:50:26"},{"nodeType":"YulAssignment","src":"8020:21:26","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8031:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"8036:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8027:3:26"},"nodeType":"YulFunctionCall","src":"8027:14:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"8020:3:26"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7860:3:26"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7865:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7857:2:26"},"nodeType":"YulFunctionCall","src":"7857:15:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7873:25:26","statements":[{"nodeType":"YulAssignment","src":"7875:21:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7886:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"7891:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7882:3:26"},"nodeType":"YulFunctionCall","src":"7882:14:26"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7875:3:26"}]}]},"pre":{"nodeType":"YulBlock","src":"7835:21:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7837:17:26","value":{"name":"offset","nodeType":"YulIdentifier","src":"7848:6:26"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7841:3:26","type":""}]}]},"src":"7831:220:26"}]},"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7419:6:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"7427:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"7435:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7443:5:26","type":""}],"src":"7347:710:26"},{"body":{"nodeType":"YulBlock","src":"8157:293:26","statements":[{"body":{"nodeType":"YulBlock","src":"8206:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8208:77:26"},"nodeType":"YulFunctionCall","src":"8208:79:26"},"nodeType":"YulExpressionStatement","src":"8208:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8185:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8193:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8181:3:26"},"nodeType":"YulFunctionCall","src":"8181:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"8200:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8177:3:26"},"nodeType":"YulFunctionCall","src":"8177:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8170:6:26"},"nodeType":"YulFunctionCall","src":"8170:35:26"},"nodeType":"YulIf","src":"8167:122:26"},{"nodeType":"YulVariableDeclaration","src":"8298:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8325:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8312:12:26"},"nodeType":"YulFunctionCall","src":"8312:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8302:6:26","type":""}]},{"nodeType":"YulAssignment","src":"8341:103:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8417:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8425:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8413:3:26"},"nodeType":"YulFunctionCall","src":"8413:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"8432:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"8440:3:26"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8350:62:26"},"nodeType":"YulFunctionCall","src":"8350:94:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8341:5:26"}]}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8135:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8143:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8151:5:26","type":""}],"src":"8080:370:26"},{"body":{"nodeType":"YulBlock","src":"8547:229:26","statements":[{"body":{"nodeType":"YulBlock","src":"8652:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8654:16:26"},"nodeType":"YulFunctionCall","src":"8654:18:26"},"nodeType":"YulExpressionStatement","src":"8654:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8624:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8632:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8621:2:26"},"nodeType":"YulFunctionCall","src":"8621:30:26"},"nodeType":"YulIf","src":"8618:56:26"},{"nodeType":"YulAssignment","src":"8684:25:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8696:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8704:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8692:3:26"},"nodeType":"YulFunctionCall","src":"8692:17:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8684:4:26"}]},{"nodeType":"YulAssignment","src":"8746:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8758:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"8764:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8754:3:26"},"nodeType":"YulFunctionCall","src":"8754:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8746:4:26"}]}]},"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8531:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8542:4:26","type":""}],"src":"8456:320:26"},{"body":{"nodeType":"YulBlock","src":"8908:831:26","statements":[{"nodeType":"YulAssignment","src":"8918:99:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9009:6:26"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8943:65:26"},"nodeType":"YulFunctionCall","src":"8943:73:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8927:15:26"},"nodeType":"YulFunctionCall","src":"8927:90:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8918:5:26"}]},{"nodeType":"YulVariableDeclaration","src":"9026:16:26","value":{"name":"array","nodeType":"YulIdentifier","src":"9037:5:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"9030:3:26","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9059:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"9066:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9052:6:26"},"nodeType":"YulFunctionCall","src":"9052:21:26"},"nodeType":"YulExpressionStatement","src":"9052:21:26"},{"nodeType":"YulAssignment","src":"9082:23:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9093:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"9100:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9089:3:26"},"nodeType":"YulFunctionCall","src":"9089:16:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9082:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"9115:44:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9133:6:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9145:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9153:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9141:3:26"},"nodeType":"YulFunctionCall","src":"9141:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9129:3:26"},"nodeType":"YulFunctionCall","src":"9129:30:26"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"9119:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"9187:103:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"9201:77:26"},"nodeType":"YulFunctionCall","src":"9201:79:26"},"nodeType":"YulExpressionStatement","src":"9201:79:26"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"9174:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"9182:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9171:2:26"},"nodeType":"YulFunctionCall","src":"9171:15:26"},"nodeType":"YulIf","src":"9168:122:26"},{"body":{"nodeType":"YulBlock","src":"9375:358:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9390:36:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9422:3:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9409:12:26"},"nodeType":"YulFunctionCall","src":"9409:17:26"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"9394:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"9478:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9480:77:26"},"nodeType":"YulFunctionCall","src":"9480:79:26"},"nodeType":"YulExpressionStatement","src":"9480:79:26"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"9445:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"9458:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9442:2:26"},"nodeType":"YulFunctionCall","src":"9442:35:26"},"nodeType":"YulIf","src":"9439:122:26"},{"nodeType":"YulVariableDeclaration","src":"9574:42:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9596:6:26"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"9604:11:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9592:3:26"},"nodeType":"YulFunctionCall","src":"9592:24:26"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"9578:10:26","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9637:3:26"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"9672:10:26"},{"name":"end","nodeType":"YulIdentifier","src":"9684:3:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9642:29:26"},"nodeType":"YulFunctionCall","src":"9642:46:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9630:6:26"},"nodeType":"YulFunctionCall","src":"9630:59:26"},"nodeType":"YulExpressionStatement","src":"9630:59:26"},{"nodeType":"YulAssignment","src":"9702:21:26","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9713:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"9718:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9709:3:26"},"nodeType":"YulFunctionCall","src":"9709:14:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9702:3:26"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9328:3:26"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"9333:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9325:2:26"},"nodeType":"YulFunctionCall","src":"9325:15:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9341:25:26","statements":[{"nodeType":"YulAssignment","src":"9343:21:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9354:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"9359:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9350:3:26"},"nodeType":"YulFunctionCall","src":"9350:14:26"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"9343:3:26"}]}]},"pre":{"nodeType":"YulBlock","src":"9303:21:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9305:17:26","value":{"name":"offset","nodeType":"YulIdentifier","src":"9316:6:26"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"9309:3:26","type":""}]}]},"src":"9299:434:26"}]},"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8878:6:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8886:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8894:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8902:5:26","type":""}],"src":"8797:942:26"},{"body":{"nodeType":"YulBlock","src":"9846:302:26","statements":[{"body":{"nodeType":"YulBlock","src":"9895:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9897:77:26"},"nodeType":"YulFunctionCall","src":"9897:79:26"},"nodeType":"YulExpressionStatement","src":"9897:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9874:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9882:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9870:3:26"},"nodeType":"YulFunctionCall","src":"9870:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"9889:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9866:3:26"},"nodeType":"YulFunctionCall","src":"9866:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9859:6:26"},"nodeType":"YulFunctionCall","src":"9859:35:26"},"nodeType":"YulIf","src":"9856:122:26"},{"nodeType":"YulVariableDeclaration","src":"9987:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10014:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10001:12:26"},"nodeType":"YulFunctionCall","src":"10001:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9991:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10030:112:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10115:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10123:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10111:3:26"},"nodeType":"YulFunctionCall","src":"10111:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"10130:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"10138:3:26"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10039:71:26"},"nodeType":"YulFunctionCall","src":"10039:103:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10030:5:26"}]}]},"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9824:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"9832:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9840:5:26","type":""}],"src":"9760:388:26"},{"body":{"nodeType":"YulBlock","src":"10296:770:26","statements":[{"body":{"nodeType":"YulBlock","src":"10342:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10344:77:26"},"nodeType":"YulFunctionCall","src":"10344:79:26"},"nodeType":"YulExpressionStatement","src":"10344:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10317:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"10326:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10313:3:26"},"nodeType":"YulFunctionCall","src":"10313:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"10338:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10309:3:26"},"nodeType":"YulFunctionCall","src":"10309:32:26"},"nodeType":"YulIf","src":"10306:119:26"},{"nodeType":"YulBlock","src":"10435:302:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10450:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10481:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10492:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10477:3:26"},"nodeType":"YulFunctionCall","src":"10477:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10464:12:26"},"nodeType":"YulFunctionCall","src":"10464:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10454:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"10542:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10544:77:26"},"nodeType":"YulFunctionCall","src":"10544:79:26"},"nodeType":"YulExpressionStatement","src":"10544:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10514:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10522:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10511:2:26"},"nodeType":"YulFunctionCall","src":"10511:30:26"},"nodeType":"YulIf","src":"10508:117:26"},{"nodeType":"YulAssignment","src":"10639:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10699:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10710:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10695:3:26"},"nodeType":"YulFunctionCall","src":"10695:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10719:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10649:45:26"},"nodeType":"YulFunctionCall","src":"10649:78:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10639:6:26"}]}]},{"nodeType":"YulBlock","src":"10747:312:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10762:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10793:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10804:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10789:3:26"},"nodeType":"YulFunctionCall","src":"10789:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10776:12:26"},"nodeType":"YulFunctionCall","src":"10776:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10766:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"10855:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10857:77:26"},"nodeType":"YulFunctionCall","src":"10857:79:26"},"nodeType":"YulExpressionStatement","src":"10857:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10827:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10835:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10824:2:26"},"nodeType":"YulFunctionCall","src":"10824:30:26"},"nodeType":"YulIf","src":"10821:117:26"},{"nodeType":"YulAssignment","src":"10952:97:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11021:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"11032:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11017:3:26"},"nodeType":"YulFunctionCall","src":"11017:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11041:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10962:54:26"},"nodeType":"YulFunctionCall","src":"10962:87:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10952:6:26"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10258:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10269:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10281:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10289:6:26","type":""}],"src":"10154:912:26"},{"body":{"nodeType":"YulBlock","src":"11163:448:26","statements":[{"body":{"nodeType":"YulBlock","src":"11209:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11211:77:26"},"nodeType":"YulFunctionCall","src":"11211:79:26"},"nodeType":"YulExpressionStatement","src":"11211:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11184:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"11193:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11180:3:26"},"nodeType":"YulFunctionCall","src":"11180:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"11205:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11176:3:26"},"nodeType":"YulFunctionCall","src":"11176:32:26"},"nodeType":"YulIf","src":"11173:119:26"},{"nodeType":"YulBlock","src":"11302:302:26","statements":[{"nodeType":"YulVariableDeclaration","src":"11317:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11348:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11359:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11344:3:26"},"nodeType":"YulFunctionCall","src":"11344:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11331:12:26"},"nodeType":"YulFunctionCall","src":"11331:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11321:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"11409:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11411:77:26"},"nodeType":"YulFunctionCall","src":"11411:79:26"},"nodeType":"YulExpressionStatement","src":"11411:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11381:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"11389:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11378:2:26"},"nodeType":"YulFunctionCall","src":"11378:30:26"},"nodeType":"YulIf","src":"11375:117:26"},{"nodeType":"YulAssignment","src":"11506:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11566:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"11577:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11562:3:26"},"nodeType":"YulFunctionCall","src":"11562:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11586:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11516:45:26"},"nodeType":"YulFunctionCall","src":"11516:78:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11506:6:26"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11133:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11144:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11156:6:26","type":""}],"src":"11072:539:26"},{"body":{"nodeType":"YulBlock","src":"11700:40:26","statements":[{"nodeType":"YulAssignment","src":"11711:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11727:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11721:5:26"},"nodeType":"YulFunctionCall","src":"11721:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11711:6:26"}]}]},"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11683:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11693:6:26","type":""}],"src":"11617:123:26"},{"body":{"nodeType":"YulBlock","src":"11866:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11883:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"11888:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11876:6:26"},"nodeType":"YulFunctionCall","src":"11876:19:26"},"nodeType":"YulExpressionStatement","src":"11876:19:26"},{"nodeType":"YulAssignment","src":"11904:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11923:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11928:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11919:3:26"},"nodeType":"YulFunctionCall","src":"11919:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11904:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11838:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"11843:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11854:11:26","type":""}],"src":"11746:193:26"},{"body":{"nodeType":"YulBlock","src":"12026:60:26","statements":[{"nodeType":"YulAssignment","src":"12036:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"12044:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12036:4:26"}]},{"nodeType":"YulAssignment","src":"12057:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12069:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12074:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12065:3:26"},"nodeType":"YulFunctionCall","src":"12065:14:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12057:4:26"}]}]},"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12013:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12021:4:26","type":""}],"src":"11945:141:26"},{"body":{"nodeType":"YulBlock","src":"12177:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12194:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"12199:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12187:6:26"},"nodeType":"YulFunctionCall","src":"12187:19:26"},"nodeType":"YulExpressionStatement","src":"12187:19:26"},{"nodeType":"YulAssignment","src":"12215:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12234:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12239:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12230:3:26"},"nodeType":"YulFunctionCall","src":"12230:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12215:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12149:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"12154:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12165:11:26","type":""}],"src":"12092:158:26"},{"body":{"nodeType":"YulBlock","src":"12336:273:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12346:52:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12392:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12360:31:26"},"nodeType":"YulFunctionCall","src":"12360:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12350:6:26","type":""}]},{"nodeType":"YulAssignment","src":"12407:67:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12462:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"12467:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12414:47:26"},"nodeType":"YulFunctionCall","src":"12414:60:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12407:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12522:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"12529:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12518:3:26"},"nodeType":"YulFunctionCall","src":"12518:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"12536:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"12541:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12483:34:26"},"nodeType":"YulFunctionCall","src":"12483:65:26"},"nodeType":"YulExpressionStatement","src":"12483:65:26"},{"nodeType":"YulAssignment","src":"12557:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12568:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12595:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"12573:21:26"},"nodeType":"YulFunctionCall","src":"12573:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12564:3:26"},"nodeType":"YulFunctionCall","src":"12564:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12557:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12317:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12324:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12332:3:26","type":""}],"src":"12256:353:26"},{"body":{"nodeType":"YulBlock","src":"12713:94:26","statements":[{"nodeType":"YulAssignment","src":"12723:78:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12789:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"12797:3:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12737:51:26"},"nodeType":"YulFunctionCall","src":"12737:64:26"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"12723:10:26"}]}]},"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"12686:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12694:3:26","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"12702:10:26","type":""}],"src":"12615:192:26"},{"body":{"nodeType":"YulBlock","src":"12897:38:26","statements":[{"nodeType":"YulAssignment","src":"12907:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12919:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12924:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12915:3:26"},"nodeType":"YulFunctionCall","src":"12915:14:26"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"12907:4:26"}]}]},"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12884:3:26","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"12892:4:26","type":""}],"src":"12813:122:26"},{"body":{"nodeType":"YulBlock","src":"13109:841:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13119:77:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13190:5:26"}],"functionName":{"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13133:56:26"},"nodeType":"YulFunctionCall","src":"13133:63:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13123:6:26","type":""}]},{"nodeType":"YulAssignment","src":"13205:102:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13295:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13300:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13212:82:26"},"nodeType":"YulFunctionCall","src":"13212:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13205:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"13316:20:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"13333:3:26"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"13320:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13345:39:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13361:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13370:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13378:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13366:3:26"},"nodeType":"YulFunctionCall","src":"13366:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13357:3:26"},"nodeType":"YulFunctionCall","src":"13357:27:26"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"13349:4:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13393:80:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13467:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13408:58:26"},"nodeType":"YulFunctionCall","src":"13408:65:26"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"13397:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13482:21:26","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"13496:7:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"13486:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"13572:333:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13593:3:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13602:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"13608:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13598:3:26"},"nodeType":"YulFunctionCall","src":"13598:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13586:6:26"},"nodeType":"YulFunctionCall","src":"13586:33:26"},"nodeType":"YulExpressionStatement","src":"13586:33:26"},{"nodeType":"YulVariableDeclaration","src":"13632:34:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13659:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13653:5:26"},"nodeType":"YulFunctionCall","src":"13653:13:26"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"13636:13:26","type":""}]},{"nodeType":"YulAssignment","src":"13679:90:26","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"13749:13:26"},{"name":"tail","nodeType":"YulIdentifier","src":"13764:4:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13687:61:26"},"nodeType":"YulFunctionCall","src":"13687:82:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13679:4:26"}]},{"nodeType":"YulAssignment","src":"13782:79:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13854:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13792:61:26"},"nodeType":"YulFunctionCall","src":"13792:69:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13782:6:26"}]},{"nodeType":"YulAssignment","src":"13874:21:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13885:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"13890:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13881:3:26"},"nodeType":"YulFunctionCall","src":"13881:14:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13874:3:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13534:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"13537:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13531:2:26"},"nodeType":"YulFunctionCall","src":"13531:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13545:18:26","statements":[{"nodeType":"YulAssignment","src":"13547:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13556:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"13559:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13552:3:26"},"nodeType":"YulFunctionCall","src":"13552:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13547:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"13516:14:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13518:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"13527:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13522:1:26","type":""}]}]},"src":"13512:393:26"},{"nodeType":"YulAssignment","src":"13914:11:26","value":{"name":"tail","nodeType":"YulIdentifier","src":"13921:4:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13914:3:26"}]},{"nodeType":"YulAssignment","src":"13934:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"13941:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13934:3:26"}]}]},"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13088:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13095:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13104:3:26","type":""}],"src":"12967:983:26"},{"body":{"nodeType":"YulBlock","src":"14122:243:26","statements":[{"nodeType":"YulAssignment","src":"14132:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14144:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14155:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14140:3:26"},"nodeType":"YulFunctionCall","src":"14140:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14132:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14179:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14190:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14175:3:26"},"nodeType":"YulFunctionCall","src":"14175:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14198:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"14204:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14194:3:26"},"nodeType":"YulFunctionCall","src":"14194:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14168:6:26"},"nodeType":"YulFunctionCall","src":"14168:47:26"},"nodeType":"YulExpressionStatement","src":"14168:47:26"},{"nodeType":"YulAssignment","src":"14224:134:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14344:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"14353:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14232:111:26"},"nodeType":"YulFunctionCall","src":"14232:126:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14224:4:26"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14094:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14106:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14117:4:26","type":""}],"src":"13956:409:26"},{"body":{"nodeType":"YulBlock","src":"14414:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"14471:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14480:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14483:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14473:6:26"},"nodeType":"YulFunctionCall","src":"14473:12:26"},"nodeType":"YulExpressionStatement","src":"14473:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14437:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14462:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14444:17:26"},"nodeType":"YulFunctionCall","src":"14444:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14434:2:26"},"nodeType":"YulFunctionCall","src":"14434:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14427:6:26"},"nodeType":"YulFunctionCall","src":"14427:43:26"},"nodeType":"YulIf","src":"14424:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14407:5:26","type":""}],"src":"14371:122:26"},{"body":{"nodeType":"YulBlock","src":"14551:87:26","statements":[{"nodeType":"YulAssignment","src":"14561:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14583:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14570:12:26"},"nodeType":"YulFunctionCall","src":"14570:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14561:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14626:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"14599:26:26"},"nodeType":"YulFunctionCall","src":"14599:33:26"},"nodeType":"YulExpressionStatement","src":"14599:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14529:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"14537:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14545:5:26","type":""}],"src":"14499:139:26"},{"body":{"nodeType":"YulBlock","src":"14710:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"14756:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14758:77:26"},"nodeType":"YulFunctionCall","src":"14758:79:26"},"nodeType":"YulExpressionStatement","src":"14758:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14731:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"14740:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14727:3:26"},"nodeType":"YulFunctionCall","src":"14727:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"14752:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14723:3:26"},"nodeType":"YulFunctionCall","src":"14723:32:26"},"nodeType":"YulIf","src":"14720:119:26"},{"nodeType":"YulBlock","src":"14849:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"14864:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"14878:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14868:6:26","type":""}]},{"nodeType":"YulAssignment","src":"14893:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14928:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"14939:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14924:3:26"},"nodeType":"YulFunctionCall","src":"14924:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14948:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14903:20:26"},"nodeType":"YulFunctionCall","src":"14903:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14893:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14680:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14691:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14703:6:26","type":""}],"src":"14644:329:26"},{"body":{"nodeType":"YulBlock","src":"15007:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15024:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15027:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15017:6:26"},"nodeType":"YulFunctionCall","src":"15017:88:26"},"nodeType":"YulExpressionStatement","src":"15017:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15121:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15124:4:26","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15114:6:26"},"nodeType":"YulFunctionCall","src":"15114:15:26"},"nodeType":"YulExpressionStatement","src":"15114:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15145:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15148:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15138:6:26"},"nodeType":"YulFunctionCall","src":"15138:15:26"},"nodeType":"YulExpressionStatement","src":"15138:15:26"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"14979:180:26"},{"body":{"nodeType":"YulBlock","src":"15261:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15278:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"15283:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15271:6:26"},"nodeType":"YulFunctionCall","src":"15271:19:26"},"nodeType":"YulExpressionStatement","src":"15271:19:26"},{"nodeType":"YulAssignment","src":"15299:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15318:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"15323:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15314:3:26"},"nodeType":"YulFunctionCall","src":"15314:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15299:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15233:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"15238:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15249:11:26","type":""}],"src":"15165:169:26"},{"body":{"nodeType":"YulBlock","src":"15446:119:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15468:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"15476:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15464:3:26"},"nodeType":"YulFunctionCall","src":"15464:14:26"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"15480:34:26","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15457:6:26"},"nodeType":"YulFunctionCall","src":"15457:58:26"},"nodeType":"YulExpressionStatement","src":"15457:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15536:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"15544:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15532:3:26"},"nodeType":"YulFunctionCall","src":"15532:15:26"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"15549:8:26","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15525:6:26"},"nodeType":"YulFunctionCall","src":"15525:33:26"},"nodeType":"YulExpressionStatement","src":"15525:33:26"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15438:6:26","type":""}],"src":"15340:225:26"},{"body":{"nodeType":"YulBlock","src":"15717:220:26","statements":[{"nodeType":"YulAssignment","src":"15727:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15793:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"15798:2:26","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15734:58:26"},"nodeType":"YulFunctionCall","src":"15734:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15727:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15899:3:26"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"15810:88:26"},"nodeType":"YulFunctionCall","src":"15810:93:26"},"nodeType":"YulExpressionStatement","src":"15810:93:26"},{"nodeType":"YulAssignment","src":"15912:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15923:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"15928:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15919:3:26"},"nodeType":"YulFunctionCall","src":"15919:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15912:3:26"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15705:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15713:3:26","type":""}],"src":"15571:366:26"},{"body":{"nodeType":"YulBlock","src":"16114:248:26","statements":[{"nodeType":"YulAssignment","src":"16124:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16136:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16147:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16132:3:26"},"nodeType":"YulFunctionCall","src":"16132:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16124:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16171:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16182:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16167:3:26"},"nodeType":"YulFunctionCall","src":"16167:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16190:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"16196:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16186:3:26"},"nodeType":"YulFunctionCall","src":"16186:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16160:6:26"},"nodeType":"YulFunctionCall","src":"16160:47:26"},"nodeType":"YulExpressionStatement","src":"16160:47:26"},{"nodeType":"YulAssignment","src":"16216:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16350:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16224:124:26"},"nodeType":"YulFunctionCall","src":"16224:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16216:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16094:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16109:4:26","type":""}],"src":"15943:419:26"},{"body":{"nodeType":"YulBlock","src":"16396:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16413:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16416:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16406:6:26"},"nodeType":"YulFunctionCall","src":"16406:88:26"},"nodeType":"YulExpressionStatement","src":"16406:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16510:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16513:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16503:6:26"},"nodeType":"YulFunctionCall","src":"16503:15:26"},"nodeType":"YulExpressionStatement","src":"16503:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16534:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16537:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16527:6:26"},"nodeType":"YulFunctionCall","src":"16527:15:26"},"nodeType":"YulExpressionStatement","src":"16527:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"16368:180:26"},{"body":{"nodeType":"YulBlock","src":"16605:269:26","statements":[{"nodeType":"YulAssignment","src":"16615:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16629:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"16635:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16625:3:26"},"nodeType":"YulFunctionCall","src":"16625:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16615:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"16646:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16676:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"16682:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16672:3:26"},"nodeType":"YulFunctionCall","src":"16672:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"16650:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"16723:51:26","statements":[{"nodeType":"YulAssignment","src":"16737:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16751:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"16759:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16747:3:26"},"nodeType":"YulFunctionCall","src":"16747:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16737:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16703:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16696:6:26"},"nodeType":"YulFunctionCall","src":"16696:26:26"},"nodeType":"YulIf","src":"16693:81:26"},{"body":{"nodeType":"YulBlock","src":"16826:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"16840:16:26"},"nodeType":"YulFunctionCall","src":"16840:18:26"},"nodeType":"YulExpressionStatement","src":"16840:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16790:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16813:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"16821:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16810:2:26"},"nodeType":"YulFunctionCall","src":"16810:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16787:2:26"},"nodeType":"YulFunctionCall","src":"16787:38:26"},"nodeType":"YulIf","src":"16784:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"16589:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16598:6:26","type":""}],"src":"16554:320:26"},{"body":{"nodeType":"YulBlock","src":"16986:76:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17008:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17016:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17004:3:26"},"nodeType":"YulFunctionCall","src":"17004:14:26"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"17020:34:26","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16997:6:26"},"nodeType":"YulFunctionCall","src":"16997:58:26"},"nodeType":"YulExpressionStatement","src":"16997:58:26"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16978:6:26","type":""}],"src":"16880:182:26"},{"body":{"nodeType":"YulBlock","src":"17214:220:26","statements":[{"nodeType":"YulAssignment","src":"17224:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17290:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"17295:2:26","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17231:58:26"},"nodeType":"YulFunctionCall","src":"17231:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17224:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17396:3:26"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"17307:88:26"},"nodeType":"YulFunctionCall","src":"17307:93:26"},"nodeType":"YulExpressionStatement","src":"17307:93:26"},{"nodeType":"YulAssignment","src":"17409:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17420:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"17425:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17416:3:26"},"nodeType":"YulFunctionCall","src":"17416:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17409:3:26"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17202:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17210:3:26","type":""}],"src":"17068:366:26"},{"body":{"nodeType":"YulBlock","src":"17611:248:26","statements":[{"nodeType":"YulAssignment","src":"17621:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17633:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17644:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17629:3:26"},"nodeType":"YulFunctionCall","src":"17629:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17621:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17668:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17679:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17664:3:26"},"nodeType":"YulFunctionCall","src":"17664:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17687:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"17693:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17683:3:26"},"nodeType":"YulFunctionCall","src":"17683:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17657:6:26"},"nodeType":"YulFunctionCall","src":"17657:47:26"},"nodeType":"YulExpressionStatement","src":"17657:47:26"},{"nodeType":"YulAssignment","src":"17713:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17847:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17721:124:26"},"nodeType":"YulFunctionCall","src":"17721:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17713:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17591:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17606:4:26","type":""}],"src":"17440:419:26"},{"body":{"nodeType":"YulBlock","src":"17918:87:26","statements":[{"nodeType":"YulAssignment","src":"17928:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"17936:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17928:4:26"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17956:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"17959:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17949:6:26"},"nodeType":"YulFunctionCall","src":"17949:14:26"},"nodeType":"YulExpressionStatement","src":"17949:14:26"},{"nodeType":"YulAssignment","src":"17972:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17990:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17993:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17980:9:26"},"nodeType":"YulFunctionCall","src":"17980:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17972:4:26"}]}]},"name":"array_dataslot_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17905:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"17913:4:26","type":""}],"src":"17865:140:26"},{"body":{"nodeType":"YulBlock","src":"18055:49:26","statements":[{"nodeType":"YulAssignment","src":"18065:33:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18083:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"18090:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18079:3:26"},"nodeType":"YulFunctionCall","src":"18079:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"18095:2:26","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18075:3:26"},"nodeType":"YulFunctionCall","src":"18075:23:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18065:6:26"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18038:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"18048:6:26","type":""}],"src":"18011:93:26"},{"body":{"nodeType":"YulBlock","src":"18163:54:26","statements":[{"nodeType":"YulAssignment","src":"18173:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"18198:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"18204:5:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18194:3:26"},"nodeType":"YulFunctionCall","src":"18194:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"18173:8:26"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"18138:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"18144:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"18154:8:26","type":""}],"src":"18110:107:26"},{"body":{"nodeType":"YulBlock","src":"18299:317:26","statements":[{"nodeType":"YulVariableDeclaration","src":"18309:35:26","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"18330:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"18342:1:26","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18326:3:26"},"nodeType":"YulFunctionCall","src":"18326:18:26"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"18313:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18353:109:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"18384:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18395:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"18365:18:26"},"nodeType":"YulFunctionCall","src":"18365:97:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"18357:4:26","type":""}]},{"nodeType":"YulAssignment","src":"18471:51:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"18502:9:26"},{"name":"toInsert","nodeType":"YulIdentifier","src":"18513:8:26"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"18483:18:26"},"nodeType":"YulFunctionCall","src":"18483:39:26"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"18471:8:26"}]},{"nodeType":"YulAssignment","src":"18531:30:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18544:5:26"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"18555:4:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18551:3:26"},"nodeType":"YulFunctionCall","src":"18551:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18540:3:26"},"nodeType":"YulFunctionCall","src":"18540:21:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18531:5:26"}]},{"nodeType":"YulAssignment","src":"18570:40:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18583:5:26"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"18594:8:26"},{"name":"mask","nodeType":"YulIdentifier","src":"18604:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18590:3:26"},"nodeType":"YulFunctionCall","src":"18590:19:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18580:2:26"},"nodeType":"YulFunctionCall","src":"18580:30:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18570:6:26"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18260:5:26","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"18267:10:26","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"18279:8:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"18292:6:26","type":""}],"src":"18223:393:26"},{"body":{"nodeType":"YulBlock","src":"18667:32:26","statements":[{"nodeType":"YulAssignment","src":"18677:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"18688:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18677:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18649:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18659:7:26","type":""}],"src":"18622:77:26"},{"body":{"nodeType":"YulBlock","src":"18737:28:26","statements":[{"nodeType":"YulAssignment","src":"18747:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"18754:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18747:3:26"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18723:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18733:3:26","type":""}],"src":"18705:60:26"},{"body":{"nodeType":"YulBlock","src":"18831:82:26","statements":[{"nodeType":"YulAssignment","src":"18841:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18899:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18881:17:26"},"nodeType":"YulFunctionCall","src":"18881:24:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"18872:8:26"},"nodeType":"YulFunctionCall","src":"18872:34:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18854:17:26"},"nodeType":"YulFunctionCall","src":"18854:53:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"18841:9:26"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18811:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"18821:9:26","type":""}],"src":"18771:142:26"},{"body":{"nodeType":"YulBlock","src":"18966:28:26","statements":[{"nodeType":"YulAssignment","src":"18976:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"18983:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18976:3:26"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18952:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18962:3:26","type":""}],"src":"18919:75:26"},{"body":{"nodeType":"YulBlock","src":"19076:193:26","statements":[{"nodeType":"YulVariableDeclaration","src":"19086:63:26","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"19141:7:26"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"19110:30:26"},"nodeType":"YulFunctionCall","src":"19110:39:26"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"19090:16:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19165:4:26"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19205:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"19199:5:26"},"nodeType":"YulFunctionCall","src":"19199:11:26"},{"name":"offset","nodeType":"YulIdentifier","src":"19212:6:26"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"19244:16:26"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"19220:23:26"},"nodeType":"YulFunctionCall","src":"19220:41:26"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"19171:27:26"},"nodeType":"YulFunctionCall","src":"19171:91:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19158:6:26"},"nodeType":"YulFunctionCall","src":"19158:105:26"},"nodeType":"YulExpressionStatement","src":"19158:105:26"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"19053:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"19059:6:26","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"19067:7:26","type":""}],"src":"19000:269:26"},{"body":{"nodeType":"YulBlock","src":"19324:24:26","statements":[{"nodeType":"YulAssignment","src":"19334:8:26","value":{"kind":"number","nodeType":"YulLiteral","src":"19341:1:26","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19334:3:26"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19320:3:26","type":""}],"src":"19275:73:26"},{"body":{"nodeType":"YulBlock","src":"19407:136:26","statements":[{"nodeType":"YulVariableDeclaration","src":"19417:46:26","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"19431:30:26"},"nodeType":"YulFunctionCall","src":"19431:32:26"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"19421:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19516:4:26"},{"name":"offset","nodeType":"YulIdentifier","src":"19522:6:26"},{"name":"zero_0","nodeType":"YulIdentifier","src":"19530:6:26"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"19472:43:26"},"nodeType":"YulFunctionCall","src":"19472:65:26"},"nodeType":"YulExpressionStatement","src":"19472:65:26"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"19393:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"19399:6:26","type":""}],"src":"19354:189:26"},{"body":{"nodeType":"YulBlock","src":"19599:136:26","statements":[{"body":{"nodeType":"YulBlock","src":"19666:63:26","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19710:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"19717:1:26","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"19680:29:26"},"nodeType":"YulFunctionCall","src":"19680:39:26"},"nodeType":"YulExpressionStatement","src":"19680:39:26"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19619:5:26"},{"name":"end","nodeType":"YulIdentifier","src":"19626:3:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19616:2:26"},"nodeType":"YulFunctionCall","src":"19616:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19631:26:26","statements":[{"nodeType":"YulAssignment","src":"19633:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19646:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"19653:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19642:3:26"},"nodeType":"YulFunctionCall","src":"19642:13:26"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"19633:5:26"}]}]},"pre":{"nodeType":"YulBlock","src":"19613:2:26","statements":[]},"src":"19609:120:26"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"19587:5:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"19594:3:26","type":""}],"src":"19549:186:26"},{"body":{"nodeType":"YulBlock","src":"19819:463:26","statements":[{"body":{"nodeType":"YulBlock","src":"19845:430:26","statements":[{"nodeType":"YulVariableDeclaration","src":"19859:53:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19906:5:26"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"19875:30:26"},"nodeType":"YulFunctionCall","src":"19875:37:26"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"19863:8:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19925:63:26","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"19948:8:26"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"19976:10:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"19958:17:26"},"nodeType":"YulFunctionCall","src":"19958:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19944:3:26"},"nodeType":"YulFunctionCall","src":"19944:44:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"19929:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"20145:27:26","statements":[{"nodeType":"YulAssignment","src":"20147:23:26","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"20162:8:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"20147:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"20129:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"20141:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20126:2:26"},"nodeType":"YulFunctionCall","src":"20126:18:26"},"nodeType":"YulIf","src":"20123:49:26"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"20214:11:26"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"20231:8:26"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"20259:3:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"20241:17:26"},"nodeType":"YulFunctionCall","src":"20241:22:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20227:3:26"},"nodeType":"YulFunctionCall","src":"20227:37:26"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"20185:28:26"},"nodeType":"YulFunctionCall","src":"20185:80:26"},"nodeType":"YulExpressionStatement","src":"20185:80:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"19836:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19841:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19833:2:26"},"nodeType":"YulFunctionCall","src":"19833:11:26"},"nodeType":"YulIf","src":"19830:445:26"}]},"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"19795:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"19802:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"19807:10:26","type":""}],"src":"19741:541:26"},{"body":{"nodeType":"YulBlock","src":"20351:54:26","statements":[{"nodeType":"YulAssignment","src":"20361:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"20386:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"20392:5:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"20382:3:26"},"nodeType":"YulFunctionCall","src":"20382:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"20361:8:26"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"20326:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"20332:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"20342:8:26","type":""}],"src":"20288:117:26"},{"body":{"nodeType":"YulBlock","src":"20462:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"20472:68:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20521:1:26","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"20524:5:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20517:3:26"},"nodeType":"YulFunctionCall","src":"20517:13:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20536:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20532:3:26"},"nodeType":"YulFunctionCall","src":"20532:6:26"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"20488:28:26"},"nodeType":"YulFunctionCall","src":"20488:51:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20484:3:26"},"nodeType":"YulFunctionCall","src":"20484:56:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"20476:4:26","type":""}]},{"nodeType":"YulAssignment","src":"20549:25:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20563:4:26"},{"name":"mask","nodeType":"YulIdentifier","src":"20569:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20559:3:26"},"nodeType":"YulFunctionCall","src":"20559:15:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"20549:6:26"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20439:4:26","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"20445:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"20455:6:26","type":""}],"src":"20411:169:26"},{"body":{"nodeType":"YulBlock","src":"20666:214:26","statements":[{"nodeType":"YulAssignment","src":"20799:37:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20826:4:26"},{"name":"len","nodeType":"YulIdentifier","src":"20832:3:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"20807:18:26"},"nodeType":"YulFunctionCall","src":"20807:29:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"20799:4:26"}]},{"nodeType":"YulAssignment","src":"20845:29:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20856:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20866:1:26","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"20869:3:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20862:3:26"},"nodeType":"YulFunctionCall","src":"20862:11:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"20853:2:26"},"nodeType":"YulFunctionCall","src":"20853:21:26"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"20845:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20647:4:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"20653:3:26","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"20661:4:26","type":""}],"src":"20585:295:26"},{"body":{"nodeType":"YulBlock","src":"20975:1300:26","statements":[{"nodeType":"YulVariableDeclaration","src":"20986:50:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21032:3:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"21000:31:26"},"nodeType":"YulFunctionCall","src":"21000:36:26"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"20990:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"21121:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21123:16:26"},"nodeType":"YulFunctionCall","src":"21123:18:26"},"nodeType":"YulExpressionStatement","src":"21123:18:26"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21093:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"21101:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21090:2:26"},"nodeType":"YulFunctionCall","src":"21090:30:26"},"nodeType":"YulIf","src":"21087:56:26"},{"nodeType":"YulVariableDeclaration","src":"21153:52:26","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21199:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"21193:5:26"},"nodeType":"YulFunctionCall","src":"21193:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"21167:25:26"},"nodeType":"YulFunctionCall","src":"21167:38:26"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"21157:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21297:4:26"},{"name":"oldLen","nodeType":"YulIdentifier","src":"21303:6:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"21311:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulIdentifier","src":"21252:44:26"},"nodeType":"YulFunctionCall","src":"21252:66:26"},"nodeType":"YulExpressionStatement","src":"21252:66:26"},{"nodeType":"YulVariableDeclaration","src":"21328:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"21345:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"21332:9:26","type":""}]},{"nodeType":"YulAssignment","src":"21356:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"21369:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"21356:9:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"21420:610:26","statements":[{"nodeType":"YulVariableDeclaration","src":"21434:37:26","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21453:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21465:4:26","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21461:3:26"},"nodeType":"YulFunctionCall","src":"21461:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21449:3:26"},"nodeType":"YulFunctionCall","src":"21449:22:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"21438:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21485:50:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21530:4:26"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"21499:30:26"},"nodeType":"YulFunctionCall","src":"21499:36:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"21489:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21548:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"21557:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"21552:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"21616:163:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21641:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21659:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"21664:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21655:3:26"},"nodeType":"YulFunctionCall","src":"21655:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21649:5:26"},"nodeType":"YulFunctionCall","src":"21649:26:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21634:6:26"},"nodeType":"YulFunctionCall","src":"21634:42:26"},"nodeType":"YulExpressionStatement","src":"21634:42:26"},{"nodeType":"YulAssignment","src":"21693:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21707:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"21715:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21703:3:26"},"nodeType":"YulFunctionCall","src":"21703:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21693:6:26"}]},{"nodeType":"YulAssignment","src":"21734:31:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"21751:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21762:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21747:3:26"},"nodeType":"YulFunctionCall","src":"21747:18:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"21734:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21582:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"21585:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21579:2:26"},"nodeType":"YulFunctionCall","src":"21579:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"21594:21:26","statements":[{"nodeType":"YulAssignment","src":"21596:17:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21605:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"21608:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21601:3:26"},"nodeType":"YulFunctionCall","src":"21601:12:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"21596:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"21575:3:26","statements":[]},"src":"21571:208:26"},{"body":{"nodeType":"YulBlock","src":"21815:156:26","statements":[{"nodeType":"YulVariableDeclaration","src":"21833:43:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21860:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"21865:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21856:3:26"},"nodeType":"YulFunctionCall","src":"21856:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21850:5:26"},"nodeType":"YulFunctionCall","src":"21850:26:26"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"21837:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21900:6:26"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"21927:9:26"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21942:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"21950:4:26","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21938:3:26"},"nodeType":"YulFunctionCall","src":"21938:17:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"21908:18:26"},"nodeType":"YulFunctionCall","src":"21908:48:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21893:6:26"},"nodeType":"YulFunctionCall","src":"21893:64:26"},"nodeType":"YulExpressionStatement","src":"21893:64:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"21798:7:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"21807:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21795:2:26"},"nodeType":"YulFunctionCall","src":"21795:19:26"},"nodeType":"YulIf","src":"21792:179:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21991:4:26"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22005:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"22013:1:26","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22001:3:26"},"nodeType":"YulFunctionCall","src":"22001:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"22017:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21997:3:26"},"nodeType":"YulFunctionCall","src":"21997:22:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21984:6:26"},"nodeType":"YulFunctionCall","src":"21984:36:26"},"nodeType":"YulExpressionStatement","src":"21984:36:26"}]},"nodeType":"YulCase","src":"21413:617:26","value":{"kind":"number","nodeType":"YulLiteral","src":"21418:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"22047:222:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22061:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"22074:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"22065:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"22098:67:26","statements":[{"nodeType":"YulAssignment","src":"22116:35:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22135:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22140:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22131:3:26"},"nodeType":"YulFunctionCall","src":"22131:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22125:5:26"},"nodeType":"YulFunctionCall","src":"22125:26:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22116:5:26"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"22091:6:26"},"nodeType":"YulIf","src":"22088:77:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22185:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22244:5:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"22251:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"22191:52:26"},"nodeType":"YulFunctionCall","src":"22191:67:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22178:6:26"},"nodeType":"YulFunctionCall","src":"22178:81:26"},"nodeType":"YulExpressionStatement","src":"22178:81:26"}]},"nodeType":"YulCase","src":"22039:230:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21393:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"21401:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21390:2:26"},"nodeType":"YulFunctionCall","src":"21390:14:26"},"nodeType":"YulSwitch","src":"21383:886:26"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"20964:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"20970:3:26","type":""}],"src":"20885:1390:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bytes32(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // bytes[]\n    function abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_bytes_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes[] -> bytes[]\n    function abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_bytes_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_bytes_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_bytes_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b1461012d5780639790242114610158578063dedff9c614610174578063f2fde38b146101b15761007b565b806301ffc9a71461008057806354f6127f146100bd578063715018a6146100fa5780637f23690c14610111575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610850565b6101da565b6040516100b49190610898565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df91906108e9565b61023b565b6040516100f191906109a6565b60405180910390f35b34801561010657600080fd5b5061010f61024d565b005b61012b60048036038101906101269190610afd565b610261565b005b34801561013957600080fd5b506101426102b1565b60405161014f9190610b9a565b60405180910390f35b610172600480360381019061016d9190610d5e565b6102da565b005b34801561018057600080fd5b5061019b60048036038101906101969190610dd6565b61032a565b6040516101a89190610f2b565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d39190610f79565b6103db565b005b600063629aa69460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061023457506102338261045e565b5b9050919050565b6060610246826104c8565b9050919050565b61025561056d565b61025f60006105eb565b565b61026961056d565b600034146102a3576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102ad82826106af565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102e261056d565b6000341461031c576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610326828261070c565b5050565b6060815167ffffffffffffffff811115610347576103466109d2565b5b60405190808252806020026020018201604052801561037a57816020015b60608152602001906001900390816103655790505b50905060005b82518110156103d5576103ac83828151811061039f5761039e610fa6565b5b60200260200101516104c8565b8282815181106103bf576103be610fa6565b5b6020026020010181905250806001019050610380565b50919050565b6103e361056d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044990611058565b60405180910390fd5b61045b816105eb565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60606001600083815260200190815260200160002080546104e8906110a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610514906110a7565b80156105615780601f1061053657610100808354040283529160200191610561565b820191906000526020600020905b81548152906001019060200180831161054457829003601f168201915b50505050509050919050565b6105756107dc565b73ffffffffffffffffffffffffffffffffffffffff166105936102b1565b73ffffffffffffffffffffffffffffffffffffffff16146105e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e090611124565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b806001600084815260200190815260200160002090816106cf91906112fa565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b28260405161070091906109a6565b60405180910390a25050565b8051825114610747576040517f3bcc897900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000825103610782576040517f97da5f9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82518110156107d7576107cc8382815181106107a4576107a3610fa6565b5b60200260200101518383815181106107bf576107be610fa6565b5b60200260200101516106af565b806001019050610785565b505050565b600033905090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61082d816107f8565b811461083857600080fd5b50565b60008135905061084a81610824565b92915050565b600060208284031215610866576108656107ee565b5b60006108748482850161083b565b91505092915050565b60008115159050919050565b6108928161087d565b82525050565b60006020820190506108ad6000830184610889565b92915050565b6000819050919050565b6108c6816108b3565b81146108d157600080fd5b50565b6000813590506108e3816108bd565b92915050565b6000602082840312156108ff576108fe6107ee565b5b600061090d848285016108d4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610950578082015181840152602081019050610935565b60008484015250505050565b6000601f19601f8301169050919050565b600061097882610916565b6109828185610921565b9350610992818560208601610932565b61099b8161095c565b840191505092915050565b600060208201905081810360008301526109c0818461096d565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a0a8261095c565b810181811067ffffffffffffffff82111715610a2957610a286109d2565b5b80604052505050565b6000610a3c6107e4565b9050610a488282610a01565b919050565b600067ffffffffffffffff821115610a6857610a676109d2565b5b610a718261095c565b9050602081019050919050565b82818337600083830152505050565b6000610aa0610a9b84610a4d565b610a32565b905082815260208101848484011115610abc57610abb6109cd565b5b610ac7848285610a7e565b509392505050565b600082601f830112610ae457610ae36109c8565b5b8135610af4848260208601610a8d565b91505092915050565b60008060408385031215610b1457610b136107ee565b5b6000610b22858286016108d4565b925050602083013567ffffffffffffffff811115610b4357610b426107f3565b5b610b4f85828601610acf565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8482610b59565b9050919050565b610b9481610b79565b82525050565b6000602082019050610baf6000830184610b8b565b92915050565b600067ffffffffffffffff821115610bd057610bcf6109d2565b5b602082029050602081019050919050565b600080fd5b6000610bf9610bf484610bb5565b610a32565b90508083825260208201905060208402830185811115610c1c57610c1b610be1565b5b835b81811015610c455780610c3188826108d4565b845260208401935050602081019050610c1e565b5050509392505050565b600082601f830112610c6457610c636109c8565b5b8135610c74848260208601610be6565b91505092915050565b600067ffffffffffffffff821115610c9857610c976109d2565b5b602082029050602081019050919050565b6000610cbc610cb784610c7d565b610a32565b90508083825260208201905060208402830185811115610cdf57610cde610be1565b5b835b81811015610d2657803567ffffffffffffffff811115610d0457610d036109c8565b5b808601610d118982610acf565b85526020850194505050602081019050610ce1565b5050509392505050565b600082601f830112610d4557610d446109c8565b5b8135610d55848260208601610ca9565b91505092915050565b60008060408385031215610d7557610d746107ee565b5b600083013567ffffffffffffffff811115610d9357610d926107f3565b5b610d9f85828601610c4f565b925050602083013567ffffffffffffffff811115610dc057610dbf6107f3565b5b610dcc85828601610d30565b9150509250929050565b600060208284031215610dec57610deb6107ee565b5b600082013567ffffffffffffffff811115610e0a57610e096107f3565b5b610e1684828501610c4f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610e6782610916565b610e718185610e4b565b9350610e81818560208601610932565b610e8a8161095c565b840191505092915050565b6000610ea18383610e5c565b905092915050565b6000602082019050919050565b6000610ec182610e1f565b610ecb8185610e2a565b935083602082028501610edd85610e3b565b8060005b85811015610f195784840389528151610efa8582610e95565b9450610f0583610ea9565b925060208a01995050600181019050610ee1565b50829750879550505050505092915050565b60006020820190508181036000830152610f458184610eb6565b905092915050565b610f5681610b79565b8114610f6157600080fd5b50565b600081359050610f7381610f4d565b92915050565b600060208284031215610f8f57610f8e6107ee565b5b6000610f9d84828501610f64565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611042602683610fd5565b915061104d82610fe6565b604082019050919050565b6000602082019050818103600083015261107181611035565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110bf57607f821691505b6020821081036110d2576110d1611078565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061110e602083610fd5565b9150611119826110d8565b602082019050919050565b6000602082019050818103600083015261113d81611101565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111a67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611169565b6111b08683611169565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006111f76111f26111ed846111c8565b6111d2565b6111c8565b9050919050565b6000819050919050565b611211836111dc565b61122561121d826111fe565b848454611176565b825550505050565b600090565b61123a61122d565b611245818484611208565b505050565b5b818110156112695761125e600082611232565b60018101905061124b565b5050565b601f8211156112ae5761127f81611144565b61128884611159565b81016020851015611297578190505b6112ab6112a385611159565b83018261124a565b50505b505050565b600082821c905092915050565b60006112d1600019846008026112b3565b1980831691505092915050565b60006112ea83836112c0565b9150826002028217905092915050565b61130382610916565b67ffffffffffffffff81111561131c5761131b6109d2565b5b61132682546110a7565b61133182828561126d565b600060209050601f8311600181146113645760008415611352578287015190505b61135c85826112de565b8655506113c4565b601f19841661137286611144565b60005b8281101561139a57848901518255600182019150602085019450602081019050611375565b868310156113b757848901516113b3601f8916826112c0565b8355505b6001600288020188555050505b50505050505056fea26469706673582212201f5cca8c76f06eacba4b2ef498c7cf16fc25ded315f4f4cde92f565fdbbb998864736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B1 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x8E9 JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x126 SWAP2 SWAP1 PUSH2 0xAFD JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0x32A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x629AA694 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x234 JUMPI POP PUSH2 0x233 DUP3 PUSH2 0x45E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x246 DUP3 PUSH2 0x4C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x255 PUSH2 0x56D JUMP JUMPDEST PUSH2 0x25F PUSH1 0x0 PUSH2 0x5EB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x269 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x2A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AD DUP3 DUP3 PUSH2 0x6AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x31C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x326 DUP3 DUP3 PUSH2 0x70C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x347 JUMPI PUSH2 0x346 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x37A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x365 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x3AC DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x39F JUMPI PUSH2 0x39E PUSH2 0xFA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x4C8 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3BF JUMPI PUSH2 0x3BE PUSH2 0xFA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x380 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E3 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x449 SWAP1 PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x45B DUP2 PUSH2 0x5EB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x4E8 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x514 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x561 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x536 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x561 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x544 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x575 PUSH2 0x7DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x593 PUSH2 0x2B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E0 SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x6CF SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3BCC897900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD SUB PUSH2 0x782 JUMPI PUSH1 0x40 MLOAD PUSH32 0x97DA5F9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x7D7 JUMPI PUSH2 0x7CC DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7A4 JUMPI PUSH2 0x7A3 PUSH2 0xFA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7BF JUMPI PUSH2 0x7BE PUSH2 0xFA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x6AF JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x785 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82D DUP2 PUSH2 0x7F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x84A DUP2 PUSH2 0x824 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x866 JUMPI PUSH2 0x865 PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x874 DUP5 DUP3 DUP6 ADD PUSH2 0x83B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x892 DUP2 PUSH2 0x87D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x889 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C6 DUP2 PUSH2 0x8B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x8D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8E3 DUP2 PUSH2 0x8BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8FF JUMPI PUSH2 0x8FE PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x90D DUP5 DUP3 DUP6 ADD PUSH2 0x8D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x950 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x978 DUP3 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x982 DUP2 DUP6 PUSH2 0x921 JUMP JUMPDEST SWAP4 POP PUSH2 0x992 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x932 JUMP JUMPDEST PUSH2 0x99B DUP2 PUSH2 0x95C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9C0 DUP2 DUP5 PUSH2 0x96D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xA0A DUP3 PUSH2 0x95C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA29 JUMPI PUSH2 0xA28 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3C PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH2 0xA48 DUP3 DUP3 PUSH2 0xA01 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA68 JUMPI PUSH2 0xA67 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH2 0xA71 DUP3 PUSH2 0x95C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA0 PUSH2 0xA9B DUP5 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xABC JUMPI PUSH2 0xABB PUSH2 0x9CD JUMP JUMPDEST JUMPDEST PUSH2 0xAC7 DUP5 DUP3 DUP6 PUSH2 0xA7E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAE4 JUMPI PUSH2 0xAE3 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAF4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xA8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB14 JUMPI PUSH2 0xB13 PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB22 DUP6 DUP3 DUP7 ADD PUSH2 0x8D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB43 JUMPI PUSH2 0xB42 PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST PUSH2 0xB4F DUP6 DUP3 DUP7 ADD PUSH2 0xACF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB84 DUP3 PUSH2 0xB59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB94 DUP2 PUSH2 0xB79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xBD0 JUMPI PUSH2 0xBCF PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBF9 PUSH2 0xBF4 DUP5 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xC1C JUMPI PUSH2 0xC1B PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC45 JUMPI DUP1 PUSH2 0xC31 DUP9 DUP3 PUSH2 0x8D4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC1E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC64 JUMPI PUSH2 0xC63 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC74 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC98 JUMPI PUSH2 0xC97 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBC PUSH2 0xCB7 DUP5 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xCDF JUMPI PUSH2 0xCDE PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD26 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD04 JUMPI PUSH2 0xD03 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0xD11 DUP10 DUP3 PUSH2 0xACF JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCE1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD45 JUMPI PUSH2 0xD44 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD55 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xCA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH2 0xD74 PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD93 JUMPI PUSH2 0xD92 PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST PUSH2 0xD9F DUP6 DUP3 DUP7 ADD PUSH2 0xC4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDC0 JUMPI PUSH2 0xDBF PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST PUSH2 0xDCC DUP6 DUP3 DUP7 ADD PUSH2 0xD30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEC JUMPI PUSH2 0xDEB PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE0A JUMPI PUSH2 0xE09 PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST PUSH2 0xE16 DUP5 DUP3 DUP6 ADD PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE67 DUP3 PUSH2 0x916 JUMP JUMPDEST PUSH2 0xE71 DUP2 DUP6 PUSH2 0xE4B JUMP JUMPDEST SWAP4 POP PUSH2 0xE81 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x932 JUMP JUMPDEST PUSH2 0xE8A DUP2 PUSH2 0x95C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA1 DUP4 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC1 DUP3 PUSH2 0xE1F JUMP JUMPDEST PUSH2 0xECB DUP2 DUP6 PUSH2 0xE2A JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0xEDD DUP6 PUSH2 0xE3B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xF19 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0xEFA DUP6 DUP3 PUSH2 0xE95 JUMP JUMPDEST SWAP5 POP PUSH2 0xF05 DUP4 PUSH2 0xEA9 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xEE1 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF45 DUP2 DUP5 PUSH2 0xEB6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF56 DUP2 PUSH2 0xB79 JUMP JUMPDEST DUP2 EQ PUSH2 0xF61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF73 DUP2 PUSH2 0xF4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8F JUMPI PUSH2 0xF8E PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF9D DUP5 DUP3 DUP6 ADD PUSH2 0xF64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1042 PUSH1 0x26 DUP4 PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x104D DUP3 PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1071 DUP2 PUSH2 0x1035 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10BF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10D2 JUMPI PUSH2 0x10D1 PUSH2 0x1078 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110E PUSH1 0x20 DUP4 PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1119 DUP3 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x113D DUP2 PUSH2 0x1101 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x11A6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1169 JUMP JUMPDEST PUSH2 0x11B0 DUP7 DUP4 PUSH2 0x1169 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F7 PUSH2 0x11F2 PUSH2 0x11ED DUP5 PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0x11D2 JUMP JUMPDEST PUSH2 0x11C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1211 DUP4 PUSH2 0x11DC JUMP JUMPDEST PUSH2 0x1225 PUSH2 0x121D DUP3 PUSH2 0x11FE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1176 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x123A PUSH2 0x122D JUMP JUMPDEST PUSH2 0x1245 DUP2 DUP5 DUP5 PUSH2 0x1208 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1269 JUMPI PUSH2 0x125E PUSH1 0x0 DUP3 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x124B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x12AE JUMPI PUSH2 0x127F DUP2 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0x1288 DUP5 PUSH2 0x1159 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1297 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x12AB PUSH2 0x12A3 DUP6 PUSH2 0x1159 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x124A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D1 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x12B3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12EA DUP4 DUP4 PUSH2 0x12C0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1303 DUP3 PUSH2 0x916 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x131C JUMPI PUSH2 0x131B PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH2 0x1326 DUP3 SLOAD PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x1331 DUP3 DUP3 DUP6 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1364 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1352 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x135C DUP6 DUP3 PUSH2 0x12DE JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1372 DUP7 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x139A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1375 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x13B7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x13B3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x12C0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0x5C 0xCA DUP13 PUSH23 0xF06EACBA4B2EF498C7CF16FC25DED315F4F4CDE92F565F 0xDB 0xBB SWAP10 DUP9 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1009:6184:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6963:228;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1815:151;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:19;;;;;;;;;;;;;:::i;:::-;;3076:232:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3963:341:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2016:458;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6963:228:0;7062:4;178:10:1;7112:20:0;;7097:35;;;:11;:35;;;;:87;;;;7148:36;7172:11;7148:23;:36::i;:::-;7097:87;7078:106;;6963:228;;;:::o;1815:151::-;1901:22;1942:17;1951:7;1942:8;:17::i;:::-;1935:24;;1815:151;;;:::o;1824:101:19:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;3076:232:0:-;1094:13:19;:11;:13::i;:::-;3225:1:0::1;3212:9;:14;3208:55;;3235:28;;;;;;;;;;;;;;3208:55;3273:28;3282:7;3291:9;3273:8;:28::i;:::-;3076:232:::0;;:::o;1201:85:19:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;3963:341:0:-;1094:13:19;:11;:13::i;:::-;4214:1:0::1;4201:9;:14;4197:55;;4224:28;;;;;;;;;;;;;;4197:55;4262:35;4276:8;4286:10;4262:13;:35::i;:::-;3963:341:::0;;:::o;2016:458::-;2117:25;2179:8;:15;2167:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:41;;2211:9;2206:234;2230:8;:15;2226:1;:19;2206:234;;;2279:21;2288:8;2297:1;2288:11;;;;;;;;:::i;:::-;;;;;;;;2279:8;:21::i;:::-;2263:10;2274:1;2263:13;;;;;;;;:::i;:::-;;;;;;;:37;;;;2412:3;;;;;2206:234;;;;2016:458;;;:::o;2074:198:19:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;829:155:21:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;4799:143:0:-;4879:22;4920:6;:15;4927:7;4920:15;;;;;;;;;;;4913:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4799:143;;;:::o;1359:130:19:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;5496:188:0:-;5622:9;5604:6;:15;5611:7;5604:15;;;;;;;;;;;:27;;;;;;:::i;:::-;;5658:7;5646:31;5667:9;5646:31;;;;;;:::i;:::-;;;;;;;;5496:188;;:::o;6326:589::-;6475:10;:17;6456:8;:15;:36;6452:112;;6515:38;;;;;;;;;;;;;;6452:112;6597:1;6578:8;:15;:20;6574:92;;6621:34;;;;;;;;;;;;;;6574:92;6681:9;6676:233;6700:8;:15;6696:1;:19;6676:233;;;6733:36;6742:8;6751:1;6742:11;;;;;;;;:::i;:::-;;;;;;;;6755:10;6766:1;6755:13;;;;;;;;:::i;:::-;;;;;;;;6733:8;:36::i;:::-;6881:3;;;;;6676:233;;;;6326:589;;:::o;655:96:20:-;708:7;734:10;727:17;;655:96;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:98::-;2260:6;2294:5;2288:12;2278:22;;2209:98;;;:::o;2313:168::-;2396:11;2430:6;2425:3;2418:19;2470:4;2465:3;2461:14;2446:29;;2313:168;;;;:::o;2487:246::-;2568:1;2578:113;2592:6;2589:1;2586:13;2578:113;;;2677:1;2672:3;2668:11;2662:18;2658:1;2653:3;2649:11;2642:39;2614:2;2611:1;2607:10;2602:15;;2578:113;;;2725:1;2716:6;2711:3;2707:16;2700:27;2549:184;2487:246;;;:::o;2739:102::-;2780:6;2831:2;2827:7;2822:2;2815:5;2811:14;2807:28;2797:38;;2739:102;;;:::o;2847:373::-;2933:3;2961:38;2993:5;2961:38;:::i;:::-;3015:70;3078:6;3073:3;3015:70;:::i;:::-;3008:77;;3094:65;3152:6;3147:3;3140:4;3133:5;3129:16;3094:65;:::i;:::-;3184:29;3206:6;3184:29;:::i;:::-;3179:3;3175:39;3168:46;;2937:283;2847:373;;;;:::o;3226:309::-;3337:4;3375:2;3364:9;3360:18;3352:26;;3424:9;3418:4;3414:20;3410:1;3399:9;3395:17;3388:47;3452:76;3523:4;3514:6;3452:76;:::i;:::-;3444:84;;3226:309;;;;:::o;3541:117::-;3650:1;3647;3640:12;3664:117;3773:1;3770;3763:12;3787:180;3835:77;3832:1;3825:88;3932:4;3929:1;3922:15;3956:4;3953:1;3946:15;3973:281;4056:27;4078:4;4056:27;:::i;:::-;4048:6;4044:40;4186:6;4174:10;4171:22;4150:18;4138:10;4135:34;4132:62;4129:88;;;4197:18;;:::i;:::-;4129:88;4237:10;4233:2;4226:22;4016:238;3973:281;;:::o;4260:129::-;4294:6;4321:20;;:::i;:::-;4311:30;;4350:33;4378:4;4370:6;4350:33;:::i;:::-;4260:129;;;:::o;4395:307::-;4456:4;4546:18;4538:6;4535:30;4532:56;;;4568:18;;:::i;:::-;4532:56;4606:29;4628:6;4606:29;:::i;:::-;4598:37;;4690:4;4684;4680:15;4672:23;;4395:307;;;:::o;4708:146::-;4805:6;4800:3;4795;4782:30;4846:1;4837:6;4832:3;4828:16;4821:27;4708:146;;;:::o;4860:423::-;4937:5;4962:65;4978:48;5019:6;4978:48;:::i;:::-;4962:65;:::i;:::-;4953:74;;5050:6;5043:5;5036:21;5088:4;5081:5;5077:16;5126:3;5117:6;5112:3;5108:16;5105:25;5102:112;;;5133:79;;:::i;:::-;5102:112;5223:54;5270:6;5265:3;5260;5223:54;:::i;:::-;4943:340;4860:423;;;;;:::o;5302:338::-;5357:5;5406:3;5399:4;5391:6;5387:17;5383:27;5373:122;;5414:79;;:::i;:::-;5373:122;5531:6;5518:20;5556:78;5630:3;5622:6;5615:4;5607:6;5603:17;5556:78;:::i;:::-;5547:87;;5363:277;5302:338;;;;:::o;5646:652::-;5723:6;5731;5780:2;5768:9;5759:7;5755:23;5751:32;5748:119;;;5786:79;;:::i;:::-;5748:119;5906:1;5931:53;5976:7;5967:6;5956:9;5952:22;5931:53;:::i;:::-;5921:63;;5877:117;6061:2;6050:9;6046:18;6033:32;6092:18;6084:6;6081:30;6078:117;;;6114:79;;:::i;:::-;6078:117;6219:62;6273:7;6264:6;6253:9;6249:22;6219:62;:::i;:::-;6209:72;;6004:287;5646:652;;;;;:::o;6304:126::-;6341:7;6381:42;6374:5;6370:54;6359:65;;6304:126;;;:::o;6436:96::-;6473:7;6502:24;6520:5;6502:24;:::i;:::-;6491:35;;6436:96;;;:::o;6538:118::-;6625:24;6643:5;6625:24;:::i;:::-;6620:3;6613:37;6538:118;;:::o;6662:222::-;6755:4;6793:2;6782:9;6778:18;6770:26;;6806:71;6874:1;6863:9;6859:17;6850:6;6806:71;:::i;:::-;6662:222;;;;:::o;6890:311::-;6967:4;7057:18;7049:6;7046:30;7043:56;;;7079:18;;:::i;:::-;7043:56;7129:4;7121:6;7117:17;7109:25;;7189:4;7183;7179:15;7171:23;;6890:311;;;:::o;7207:117::-;7316:1;7313;7306:12;7347:710;7443:5;7468:81;7484:64;7541:6;7484:64;:::i;:::-;7468:81;:::i;:::-;7459:90;;7569:5;7598:6;7591:5;7584:21;7632:4;7625:5;7621:16;7614:23;;7685:4;7677:6;7673:17;7665:6;7661:30;7714:3;7706:6;7703:15;7700:122;;;7733:79;;:::i;:::-;7700:122;7848:6;7831:220;7865:6;7860:3;7857:15;7831:220;;;7940:3;7969:37;8002:3;7990:10;7969:37;:::i;:::-;7964:3;7957:50;8036:4;8031:3;8027:14;8020:21;;7907:144;7891:4;7886:3;7882:14;7875:21;;7831:220;;;7835:21;7449:608;;7347:710;;;;;:::o;8080:370::-;8151:5;8200:3;8193:4;8185:6;8181:17;8177:27;8167:122;;8208:79;;:::i;:::-;8167:122;8325:6;8312:20;8350:94;8440:3;8432:6;8425:4;8417:6;8413:17;8350:94;:::i;:::-;8341:103;;8157:293;8080:370;;;;:::o;8456:320::-;8542:4;8632:18;8624:6;8621:30;8618:56;;;8654:18;;:::i;:::-;8618:56;8704:4;8696:6;8692:17;8684:25;;8764:4;8758;8754:15;8746:23;;8456:320;;;:::o;8797:942::-;8902:5;8927:90;8943:73;9009:6;8943:73;:::i;:::-;8927:90;:::i;:::-;8918:99;;9037:5;9066:6;9059:5;9052:21;9100:4;9093:5;9089:16;9082:23;;9153:4;9145:6;9141:17;9133:6;9129:30;9182:3;9174:6;9171:15;9168:122;;;9201:79;;:::i;:::-;9168:122;9316:6;9299:434;9333:6;9328:3;9325:15;9299:434;;;9422:3;9409:17;9458:18;9445:11;9442:35;9439:122;;;9480:79;;:::i;:::-;9439:122;9604:11;9596:6;9592:24;9642:46;9684:3;9672:10;9642:46;:::i;:::-;9637:3;9630:59;9718:4;9713:3;9709:14;9702:21;;9375:358;;9359:4;9354:3;9350:14;9343:21;;9299:434;;;9303:21;8908:831;;8797:942;;;;;:::o;9760:388::-;9840:5;9889:3;9882:4;9874:6;9870:17;9866:27;9856:122;;9897:79;;:::i;:::-;9856:122;10014:6;10001:20;10039:103;10138:3;10130:6;10123:4;10115:6;10111:17;10039:103;:::i;:::-;10030:112;;9846:302;9760:388;;;;:::o;10154:912::-;10281:6;10289;10338:2;10326:9;10317:7;10313:23;10309:32;10306:119;;;10344:79;;:::i;:::-;10306:119;10492:1;10481:9;10477:17;10464:31;10522:18;10514:6;10511:30;10508:117;;;10544:79;;:::i;:::-;10508:117;10649:78;10719:7;10710:6;10699:9;10695:22;10649:78;:::i;:::-;10639:88;;10435:302;10804:2;10793:9;10789:18;10776:32;10835:18;10827:6;10824:30;10821:117;;;10857:79;;:::i;:::-;10821:117;10962:87;11041:7;11032:6;11021:9;11017:22;10962:87;:::i;:::-;10952:97;;10747:312;10154:912;;;;;:::o;11072:539::-;11156:6;11205:2;11193:9;11184:7;11180:23;11176:32;11173:119;;;11211:79;;:::i;:::-;11173:119;11359:1;11348:9;11344:17;11331:31;11389:18;11381:6;11378:30;11375:117;;;11411:79;;:::i;:::-;11375:117;11516:78;11586:7;11577:6;11566:9;11562:22;11516:78;:::i;:::-;11506:88;;11302:302;11072:539;;;;:::o;11617:123::-;11693:6;11727:5;11721:12;11711:22;;11617:123;;;:::o;11746:193::-;11854:11;11888:6;11883:3;11876:19;11928:4;11923:3;11919:14;11904:29;;11746:193;;;;:::o;11945:141::-;12021:4;12044:3;12036:11;;12074:4;12069:3;12065:14;12057:22;;11945:141;;;:::o;12092:158::-;12165:11;12199:6;12194:3;12187:19;12239:4;12234:3;12230:14;12215:29;;12092:158;;;;:::o;12256:353::-;12332:3;12360:38;12392:5;12360:38;:::i;:::-;12414:60;12467:6;12462:3;12414:60;:::i;:::-;12407:67;;12483:65;12541:6;12536:3;12529:4;12522:5;12518:16;12483:65;:::i;:::-;12573:29;12595:6;12573:29;:::i;:::-;12568:3;12564:39;12557:46;;12336:273;12256:353;;;;:::o;12615:192::-;12702:10;12737:64;12797:3;12789:6;12737:64;:::i;:::-;12723:78;;12615:192;;;;:::o;12813:122::-;12892:4;12924;12919:3;12915:14;12907:22;;12813:122;;;:::o;12967:983::-;13104:3;13133:63;13190:5;13133:63;:::i;:::-;13212:95;13300:6;13295:3;13212:95;:::i;:::-;13205:102;;13333:3;13378:4;13370:6;13366:17;13361:3;13357:27;13408:65;13467:5;13408:65;:::i;:::-;13496:7;13527:1;13512:393;13537:6;13534:1;13531:13;13512:393;;;13608:9;13602:4;13598:20;13593:3;13586:33;13659:6;13653:13;13687:82;13764:4;13749:13;13687:82;:::i;:::-;13679:90;;13792:69;13854:6;13792:69;:::i;:::-;13782:79;;13890:4;13885:3;13881:14;13874:21;;13572:333;13559:1;13556;13552:9;13547:14;;13512:393;;;13516:14;13921:4;13914:11;;13941:3;13934:10;;13109:841;;;;;12967:983;;;;:::o;13956:409::-;14117:4;14155:2;14144:9;14140:18;14132:26;;14204:9;14198:4;14194:20;14190:1;14179:9;14175:17;14168:47;14232:126;14353:4;14344:6;14232:126;:::i;:::-;14224:134;;13956:409;;;;:::o;14371:122::-;14444:24;14462:5;14444:24;:::i;:::-;14437:5;14434:35;14424:63;;14483:1;14480;14473:12;14424:63;14371:122;:::o;14499:139::-;14545:5;14583:6;14570:20;14561:29;;14599:33;14626:5;14599:33;:::i;:::-;14499:139;;;;:::o;14644:329::-;14703:6;14752:2;14740:9;14731:7;14727:23;14723:32;14720:119;;;14758:79;;:::i;:::-;14720:119;14878:1;14903:53;14948:7;14939:6;14928:9;14924:22;14903:53;:::i;:::-;14893:63;;14849:117;14644:329;;;;:::o;14979:180::-;15027:77;15024:1;15017:88;15124:4;15121:1;15114:15;15148:4;15145:1;15138:15;15165:169;15249:11;15283:6;15278:3;15271:19;15323:4;15318:3;15314:14;15299:29;;15165:169;;;;:::o;15340:225::-;15480:34;15476:1;15468:6;15464:14;15457:58;15549:8;15544:2;15536:6;15532:15;15525:33;15340:225;:::o;15571:366::-;15713:3;15734:67;15798:2;15793:3;15734:67;:::i;:::-;15727:74;;15810:93;15899:3;15810:93;:::i;:::-;15928:2;15923:3;15919:12;15912:19;;15571:366;;;:::o;15943:419::-;16109:4;16147:2;16136:9;16132:18;16124:26;;16196:9;16190:4;16186:20;16182:1;16171:9;16167:17;16160:47;16224:131;16350:4;16224:131;:::i;:::-;16216:139;;15943:419;;;:::o;16368:180::-;16416:77;16413:1;16406:88;16513:4;16510:1;16503:15;16537:4;16534:1;16527:15;16554:320;16598:6;16635:1;16629:4;16625:12;16615:22;;16682:1;16676:4;16672:12;16703:18;16693:81;;16759:4;16751:6;16747:17;16737:27;;16693:81;16821:2;16813:6;16810:14;16790:18;16787:38;16784:84;;16840:18;;:::i;:::-;16784:84;16605:269;16554:320;;;:::o;16880:182::-;17020:34;17016:1;17008:6;17004:14;16997:58;16880:182;:::o;17068:366::-;17210:3;17231:67;17295:2;17290:3;17231:67;:::i;:::-;17224:74;;17307:93;17396:3;17307:93;:::i;:::-;17425:2;17420:3;17416:12;17409:19;;17068:366;;;:::o;17440:419::-;17606:4;17644:2;17633:9;17629:18;17621:26;;17693:9;17687:4;17683:20;17679:1;17668:9;17664:17;17657:47;17721:131;17847:4;17721:131;:::i;:::-;17713:139;;17440:419;;;:::o;17865:140::-;17913:4;17936:3;17928:11;;17959:3;17956:1;17949:14;17993:4;17990:1;17980:18;17972:26;;17865:140;;;:::o;18011:93::-;18048:6;18095:2;18090;18083:5;18079:14;18075:23;18065:33;;18011:93;;;:::o;18110:107::-;18154:8;18204:5;18198:4;18194:16;18173:37;;18110:107;;;;:::o;18223:393::-;18292:6;18342:1;18330:10;18326:18;18365:97;18395:66;18384:9;18365:97;:::i;:::-;18483:39;18513:8;18502:9;18483:39;:::i;:::-;18471:51;;18555:4;18551:9;18544:5;18540:21;18531:30;;18604:4;18594:8;18590:19;18583:5;18580:30;18570:40;;18299:317;;18223:393;;;;;:::o;18622:77::-;18659:7;18688:5;18677:16;;18622:77;;;:::o;18705:60::-;18733:3;18754:5;18747:12;;18705:60;;;:::o;18771:142::-;18821:9;18854:53;18872:34;18881:24;18899:5;18881:24;:::i;:::-;18872:34;:::i;:::-;18854:53;:::i;:::-;18841:66;;18771:142;;;:::o;18919:75::-;18962:3;18983:5;18976:12;;18919:75;;;:::o;19000:269::-;19110:39;19141:7;19110:39;:::i;:::-;19171:91;19220:41;19244:16;19220:41;:::i;:::-;19212:6;19205:4;19199:11;19171:91;:::i;:::-;19165:4;19158:105;19076:193;19000:269;;;:::o;19275:73::-;19320:3;19275:73;:::o;19354:189::-;19431:32;;:::i;:::-;19472:65;19530:6;19522;19516:4;19472:65;:::i;:::-;19407:136;19354:189;;:::o;19549:186::-;19609:120;19626:3;19619:5;19616:14;19609:120;;;19680:39;19717:1;19710:5;19680:39;:::i;:::-;19653:1;19646:5;19642:13;19633:22;;19609:120;;;19549:186;;:::o;19741:541::-;19841:2;19836:3;19833:11;19830:445;;;19875:37;19906:5;19875:37;:::i;:::-;19958:29;19976:10;19958:29;:::i;:::-;19948:8;19944:44;20141:2;20129:10;20126:18;20123:49;;;20162:8;20147:23;;20123:49;20185:80;20241:22;20259:3;20241:22;:::i;:::-;20231:8;20227:37;20214:11;20185:80;:::i;:::-;19845:430;;19830:445;19741:541;;;:::o;20288:117::-;20342:8;20392:5;20386:4;20382:16;20361:37;;20288:117;;;;:::o;20411:169::-;20455:6;20488:51;20536:1;20532:6;20524:5;20521:1;20517:13;20488:51;:::i;:::-;20484:56;20569:4;20563;20559:15;20549:25;;20462:118;20411:169;;;;:::o;20585:295::-;20661:4;20807:29;20832:3;20826:4;20807:29;:::i;:::-;20799:37;;20869:3;20866:1;20862:11;20856:4;20853:21;20845:29;;20585:295;;;;:::o;20885:1390::-;21000:36;21032:3;21000:36;:::i;:::-;21101:18;21093:6;21090:30;21087:56;;;21123:18;;:::i;:::-;21087:56;21167:38;21199:4;21193:11;21167:38;:::i;:::-;21252:66;21311:6;21303;21297:4;21252:66;:::i;:::-;21345:1;21369:4;21356:17;;21401:2;21393:6;21390:14;21418:1;21413:617;;;;22074:1;22091:6;22088:77;;;22140:9;22135:3;22131:19;22125:26;22116:35;;22088:77;22191:67;22251:6;22244:5;22191:67;:::i;:::-;22185:4;22178:81;22047:222;21383:886;;21413:617;21465:4;21461:9;21453:6;21449:22;21499:36;21530:4;21499:36;:::i;:::-;21557:1;21571:208;21585:7;21582:1;21579:14;21571:208;;;21664:9;21659:3;21655:19;21649:26;21641:6;21634:42;21715:1;21707:6;21703:14;21693:24;;21762:2;21751:9;21747:18;21734:31;;21608:4;21605:1;21601:12;21596:17;;21571:208;;;21807:6;21798:7;21795:19;21792:179;;;21865:9;21860:3;21856:19;21850:26;21908:48;21950:4;21942:6;21938:17;21927:9;21908:48;:::i;:::-;21900:6;21893:64;21815:156;21792:179;22017:1;22013;22005:6;22001:14;21997:22;21991:4;21984:36;21420:610;;;21383:886;;20975:1300;;;20885:1390;;:::o"},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network> and <CJ42>, <YamenMerhi>, <B00ste>, <SkimaHarvey>\",\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:requirements\":\"- `initialOwner` CANNOT be the zero address.\",\"details\":\"Deploy a new ERC725Y contract with the provided `initialOwner` as the contract {owner}.\",\"params\":{\"initialOwner\":\"the owner of the contract.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_store\":{\"details\":\"Map `bytes32` data keys to their `bytes` data values.\"}},\"title\":\"Deployable implementation with `constructor` of ERC725Y sub-standard, a generic data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Deploying an ERC725Y smart contract and setting address `initialOwner` as the contract owner.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\":\"ERC725Y\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\":{\"keccak256\":\"0x209d6b52eb0d5dcb8c180773dd67e507f603c98ede7e5a64457752159a52ad3d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dbfa427c80ba998d30c721fb41795502d19aa09acb8e1f59f6982d080f029692\",\"dweb:/ipfs/QmPQXeYEU7kaDtskZ1ha2umRuGSrFTfXfpyiGgBSQfwZBn\"]},\"@erc725/smart-contracts-v8/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts-v8/contracts/errors.sol\":{\"keccak256\":\"0x198fece17fcfec61d40d3453ebbaa49760968ea8caa128dd5314a12b98ecec66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e705131b03cf4167ff312e7ebaa679cf56c22b01de518dfa4d2163d7e1ddb8b\",\"dweb:/ipfs/QmbH8q7MgrR7fJm1QEmYoKcnZCxWwejt4Jum2DUYmLJAGA\"]},\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x943d0f67d6455cfb1bed5d1fb77995df0b202ecdbb028fa0e85bc26bcd3219a5\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c3b8b0daa2fed9c0513444120b87beec7c2b102eadbcbeccae73ece67819a658\",\"dweb:/ipfs/QmaSb9Xhma6UwhK1FosJtbP8EkBn8i9PTcLKg5FU1VAJSH\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol":{"IERC725Y":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"setData(bytes32,bytes)\":{\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}}},\"title\":\"The interface for ERC725Y sub-standard, a generic data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":\"IERC725Y\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x943d0f67d6455cfb1bed5d1fb77995df0b202ecdbb028fa0e85bc26bcd3219a5\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c3b8b0daa2fed9c0513444120b87beec7c2b102eadbcbeccae73ece67819a658\",\"dweb:/ipfs/QmaSb9Xhma6UwhK1FosJtbP8EkBn8i9PTcLKg5FU1VAJSH\"]}},\"version\":1}"}},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"IERC725Y":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"setData(bytes32,bytes)\":{\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"The interface for ERC725Y sub-standard, a generic data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":\"IERC725Y\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol":{"ILSP1UniversalReceiver":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"typeId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"receivedData","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"returnedValue","type":"bytes"}],"name":"UniversalReceiver","type":"event"},{"inputs":[{"internalType":"bytes32","name":"typeId","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"universalReceiver","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"universalReceiver(bytes32,bytes)":"6bb56a14"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"receivedData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnedValue\",\"type\":\"bytes\"}],\"name\":\"UniversalReceiver\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"universalReceiver\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received.\",\"events\":{\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"details\":\"Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\",\"params\":{\"from\":\"The address of the EOA or smart contract that called the {universalReceiver(...)} function.\",\"receivedData\":\"Any arbitrary data that was sent to the {universalReceiver(...)} function.\",\"returnedValue\":\"The value returned by the {universalReceiver(...)} function.\",\"typeId\":\"A `bytes32` unique identifier (= _\\\"hook\\\"_)that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\",\"value\":\"The amount sent to the {universalReceiver(...)} function.\"}}},\"kind\":\"dev\",\"methods\":{\"universalReceiver(bytes32,bytes)\":{\"custom:events\":\"{UniversalReceiver} event.\",\"details\":\"Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\",\"params\":{\"data\":\"The arbitrary data received with the call.\",\"typeId\":\"The hash of a specific standard or a hook.\"}}},\"title\":\"Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\",\"version\":1},\"userdoc\":{\"events\":{\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"notice\":\"Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\"}},\"kind\":\"user\",\"methods\":{\"universalReceiver(bytes32,bytes)\":{\"notice\":\"Reacted on received notification with `typeId` & `data`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":\"ILSP1UniversalReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]}},\"version\":1}"}},"@lukso/lsp1-contracts/contracts/LSP1Utils.sol":{"LSP1Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011d3230f0719b91a7e00b75f7d1b54425762fe4730749f41133ee49ad7c7a14064736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xD3 0x23 0xF SMOD NOT 0xB9 BYTE PUSH31 0xB75F7D1B54425762FE4730749F41133EE49AD7C7A14064736F6C63430008 SGT STOP CALLER ","sourceMap":"877:2519:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011d3230f0719b91a7e00b75f7d1b54425762fe4730749f41133ee49ad7c7a14064736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xD3 0x23 0xF SMOD NOT 0xB9 BYTE PUSH31 0xB75F7D1B54425762FE4730749F41133EE49AD7C7A14064736F6C63430008 SGT STOP CALLER ","sourceMap":"877:2519:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\",\"details\":\"LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract that implements LSP1 and retrieve informations related to LSP1 `typeId`. Based on LSP1 Universal Receiver standard.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LSP1 Utility library.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":\"LSP1Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":{\"keccak256\":\"0xa81bf1910c3b56b43bf58d0be2105c434ed3b65cfb3674e282b5aba3fd35afb0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://374e7bef39522d65cf8e45c365178eb54d159b9267d0c2a2b97dfea10e52d41f\",\"dweb:/ipfs/QmfVYVnVSTRVAAifFSyFk8icePgw3eeqpjAKWAwfHMu6vX\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol":{"LSP17Extendable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard. This module can be inherited to extend the functionality of the parent contract when calling a function that doesn't exist on the parent contract via forwarding the call to an extension mapped to the function selector being called, set originally by the parent contract\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"Module to add more functionalities to a contract using extensions.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":\"LSP17Extendable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":{\"keccak256\":\"0x4536ed09238f33ca9d40ed2e7c6254aac84bf81010b3524711524ae7fd30227c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://abaed57358cb811d3b368d52f66db3c1327b96c38301d6eccf2ffaa6d5fa5928\",\"dweb:/ipfs/QmS1FtQH4Gn6xYrHCTHWJwxgAURvGvvfypsuQ2rRhrkPgi\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp2-contracts/contracts/LSP2Utils.sol":{"LSP2Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209fe371c16e0993d29b27ecd7c18aaa92398c722b861a9d95cf85d0be160b792664736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xE3 PUSH18 0xC16E0993D29B27ECD7C18AAA92398C722B86 BYTE SWAP14 SWAP6 0xCF DUP6 0xD0 0xBE AND SIGNEXTEND PUSH26 0x2664736F6C634300081300330000000000000000000000000000 ","sourceMap":"482:15762:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209fe371c16e0993d29b27ecd7c18aaa92398c722b861a9d95cf85d0be160b792664736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xE3 PUSH18 0xC16E0993D29B27ECD7C18AAA92398C722B86 BYTE SWAP14 SWAP6 0xCF DUP6 0xD0 0xBE AND SIGNEXTEND PUSH26 0x2664736F6C634300081300330000000000000000000000000000 ","sourceMap":"482:15762:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\",\"details\":\"LSP2Utils is a library of utility functions that can be used to encode data key of different key type defined on the LSP2 standard. Based on LSP2 ERC725Y JSON Schema standard.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LSP2 Utility library.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":\"LSP2Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol":{"LSP4DigitalAssetMetadata":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Matthew Stevens\",\"details\":\"Standard Implementation of the LSP4 standard.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"initialOwner_\":\"The owner of the token contract.\",\"lsp4TokenType_\":\"The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\",\"name_\":\"The name of the token.\",\"symbol_\":\"The symbol of the token.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Deploying a digital asset `name_` with the `symbol_` symbol.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":\"LSP4DigitalAssetMetadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\":{\"keccak256\":\"0x209d6b52eb0d5dcb8c180773dd67e507f603c98ede7e5a64457752159a52ad3d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dbfa427c80ba998d30c721fb41795502d19aa09acb8e1f59f6982d080f029692\",\"dweb:/ipfs/QmPQXeYEU7kaDtskZ1ha2umRuGSrFTfXfpyiGgBSQfwZBn\"]},\"@erc725/smart-contracts-v8/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts-v8/contracts/errors.sol\":{\"keccak256\":\"0x198fece17fcfec61d40d3453ebbaa49760968ea8caa128dd5314a12b98ecec66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e705131b03cf4167ff312e7ebaa679cf56c22b01de518dfa4d2163d7e1ddb8b\",\"dweb:/ipfs/QmbH8q7MgrR7fJm1QEmYoKcnZCxWwejt4Jum2DUYmLJAGA\"]},\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x943d0f67d6455cfb1bed5d1fb77995df0b202ecdbb028fa0e85bc26bcd3219a5\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c3b8b0daa2fed9c0513444120b87beec7c2b102eadbcbeccae73ece67819a658\",\"dweb:/ipfs/QmaSb9Xhma6UwhK1FosJtbP8EkBn8i9PTcLKg5FU1VAJSH\"]},\"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0x6a718979925b05064c15e4de4b376dadec8d107d720aa762d22a06e44ed67fa4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c82f6c8133c4d35d8cbbfc4da647204989acc5f38980be787263881e9f732f5\",\"dweb:/ipfs/QmdhHBnJvvo4Ax183HgHkL7w5A4w3ADXDQuewocnTVqsW6\"]},\"@lukso/lsp4-contracts/contracts/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol":{"ILSP7DigitalAsset":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"authorizedAmountFor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"uint256","name":"subtractedAmount","type":"uint256"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"decreaseAllowance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"addedAmount","type":"uint256"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"increaseAllowance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"amount","type":"uint256[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorizeOperator(address,uint256,bytes)":"b49506fd","authorizedAmountFor(address,address)":"65aeaa95","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","decimals()":"313ce567","decreaseAllowance(address,address,uint256,bytes)":"78381670","getOperatorsOf(address)":"d72fc29a","increaseAllowance(address,uint256,bytes)":"2bc1da82","revokeOperator(address,address,bool,bytes)":"30d0dc37","totalSupply()":"18160ddd","transfer(address,address,uint256,bool,bytes)":"760d9bba","transferBatch(address[],address[],uint256[],bool[],bytes[])":"2d7667c9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"authorizedAmountFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"decreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"increaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OperatorAuthorizationChanged(address,address,uint256,bytes)\":{\"details\":\"Emitted when `tokenOwner` enables `operator` for `amount` tokens.\",\"params\":{\"amount\":\"The amount of tokens `operator` address has access to from `tokenOwner`\",\"operator\":\"The address authorized as an operator\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenOwner\":\"The token owner\"}},\"OperatorRevoked(address,address,bool,bytes)\":{\"details\":\"Emitted when `tokenOwner` disables `operator` for `amount` tokens and set its {`authorizedAmountFor(...)`} to `0`.\",\"params\":{\"notified\":\"Bool indicating whether the operator has been notified or not\",\"operator\":\"The address revoked from operating\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenOwner\":\"The token owner\"}},\"Transfer(address,address,address,uint256,bool,bytes)\":{\"details\":\"Emitted when the `from` transferred successfully `amount` of tokens to `to`.\",\"params\":{\"amount\":\"The amount of tokens transferred.\",\"data\":\"Any additional data included by the caller during the transfer, and sent in the LSP1 hooks to the `from` and `to` addresses.\",\"force\":\"if the transferred enforced the `to` recipient address to be a contract that implements the LSP1 standard or not.\",\"from\":\"The address which tokens were sent from (balance decreased by `-amount`).\",\"operator\":\"The address of the operator that executed the transfer.\",\"to\":\"The address that received the tokens (balance increased by `+amount`).\"}}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,uint256,bytes)\":{\"custom:events\":\"{OperatorAuthorizationChanged} when allowance is given to a new operator or an existing operator's allowance is updated.\",\"custom:requirements\":\"- `operator` cannot be the zero address.\",\"details\":\"Sets an `amount` of tokens that an `operator` has access from the caller's balance (allowance). See {authorizedAmountFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"amount\":\"The allowance amount of tokens operator has access to.\",\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\"}},\"authorizedAmountFor(address,address)\":{\"custom:info\":\"If this function is called with the same address for `operator` and `tokenOwner`, it will simply read the `tokenOwner`'s balance (since a tokenOwner is its own operator).\",\"details\":\"Get the amount of tokens `operator` address has access to from `tokenOwner`. Operators can send and burn tokens on behalf of their owners.\",\"params\":{\"operator\":\"The operator's address to query the authorized amount for.\",\"tokenOwner\":\"The token owner that `operator` has allowance on.\"},\"returns\":{\"_0\":\"The amount of tokens the `operator`'s address has access on the `tokenOwner`'s balance.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of tokens owned by `tokenOwner`. If the token is divisible (the {decimals} function returns `18`), the amount returned should be divided by 1e18 to get a better picture of the actual balance of the `tokenOwner`. _Example:_ ``` balanceOf(someAddress) -> 42_000_000_000_000_000_000 / 1e18 = 42 tokens ```\",\"params\":{\"tokenOwner\":\"The address of the token holder to query the balance for.\"},\"returns\":{\"_0\":\"The amount of tokens owned by `tokenOwner`.\"}},\"batchCalls(bytes[])\":{\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"decimals()\":{\"custom:notice\":\"This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {balanceOf} and {transfer}.\",\"details\":\"Returns the number of decimals used to get its user representation. If the asset contract has been set to be non-divisible via the `isNonDivisible_` parameter in the `constructor`, the decimals returned will be `0`. Otherwise `18` is the common value.\",\"returns\":{\"_0\":\"the number of decimals. If `0` is returned, the asset is non-divisible.\"}},\"decreaseAllowance(address,address,uint256,bytes)\":{\"custom:events\":\"- {OperatorAuthorizationChanged} event indicating the updated allowance after decreasing it.  - {OperatorRevoked} event if `subtractedAmount` is the full allowance,    indicating `operator` does not have any alauthorizedAmountForlowance left for `msg.sender`.\",\"custom:info\":\"This function in the LSP7 contract can be used as a prevention mechanism against the double spending allowance vulnerability.\",\"custom:requirements\":\"- `operator` cannot be the zero address.  - `operator` must have allowance for the caller of at least `subtractedAmount`.\",\"details\":\"Atomically decreases the allowance granted to `operator` by the caller. This is an alternative approach to {authorizeOperator} that can be used as a mitigation for the double spending allowance problem. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The operator to decrease allowance for `msg.sender`\",\"subtractedAmount\":\"The amount to decrease by in the operator's allowance.\",\"tokenOwner\":\"The address of the token owner.\"}},\"getOperatorsOf(address)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn on behalf of `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The token owner to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn tokens on behalf of `tokenOwner`.\"}},\"increaseAllowance(address,uint256,bytes)\":{\"custom:events\":\"{OperatorAuthorizationChanged} indicating the updated allowance\",\"custom:info\":\"This function in the LSP7 contract can be used as a prevention mechanism against double spending allowance vulnerability.\",\"custom:requirements\":\"- `operator` cannot be the same address as `msg.sender`  - `operator` cannot be the zero address.\",\"details\":\"Atomically increases the allowance granted to `operator` by the caller. This is an alternative approach to {authorizeOperator} that can be used as a mitigation for the double spending allowance problem. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"addedAmount\":\"The additional amount to add on top of the current operator's allowance\",\"operator\":\"The operator to increase the allowance for `msg.sender`\"}},\"revokeOperator(address,address,bool,bytes)\":{\"custom:events\":\"{OperatorRevoked} event with address of the operator being revoked for the caller (token holder).\",\"custom:requirements\":\"- caller MUST be `operator` or `tokenOwner` - `operator` cannot be the zero address.\",\"details\":\"Enables `tokenOwner` to remove `operator` for its tokens, disallowing it to send any amount of tokens on its behalf. This function also allows the `operator` to remove itself if it is the caller of this function\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not.\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenOwner\":\"The address of the token owner.\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,uint256,bool,bytes)\":{\"custom:events\":\"- {Transfer} event when tokens get successfully transferred. - if the transfer is triggered by an operator, either the {OperatorAuthorizationChanged} event will be emitted with the updated allowance or the {OperatorRevoked} event will be emitted if the operator has no more allowance left.\",\"custom:hint\":\"The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\",\"custom:info\":\"if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\",\"custom:requirements\":\"- `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address (`from` cannot send tokens to itself). - `from` MUST have a balance of at least `amount` tokens. - If the caller is not `from`, it must be an operator for `from` with an allowance of at least `amount` of tokens.\",\"custom:warning\":\"Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified. This even if the `force` was set to `true`.\",\"details\":\"Transfers an `amount` of tokens from the `from` address to the `to` address and notify both sender and recipients via the LSP1 {`universalReceiver(...)`} function. If the tokens are transferred by an operator on behalf of a token holder, the allowance for the operator will be decreased by `amount` once the token transfer has been completed (See {authorizedAmountFor}).\",\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The sender address.\",\"to\":\"The recipient address.\"}},\"transferBatch(address[],address[],uint256[],bool[],bytes[])\":{\"custom:events\":\"{Transfer} event **for each token transfer**.\",\"custom:info\":\"If any transfer in the batch fail or revert, the whole call will revert.\",\"custom:requirements\":\"- `from`, `to`, `amount` lists MUST be of the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - each `amount` tokens MUST be owned by `from`. - for each transfer, if the caller is not `from`, it MUST be an operator for `from` with access to at least `amount` tokens.\",\"details\":\"Same as {`transfer(...)`} but transfer multiple tokens based on the arrays of `from`, `to`, `amount`.\",\"params\":{\"amount\":\"An array of amount of tokens to transfer for each `from -> to` transfer.\",\"data\":\"An array of additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"For each transfer, when set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of receiving addresses.\"}}},\"title\":\"Interface of the LSP7 - Digital Asset standard, a fungible digital asset.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"decreaseAllowance(address,address,uint256,bytes)\":{\"notice\":\"Decrease the allowance of `operator` by -`subtractedAmount`\"},\"increaseAllowance(address,uint256,bytes)\":{\"notice\":\"Increase the allowance of `operator` by +`addedAmount`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol\":\"ILSP7DigitalAsset\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol\":{\"keccak256\":\"0xed4d99a44fa7f33938b35e46c181bb6ed90b6f9dd659af93670a406ececa64da\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6431975ac7b6951c1d6f9c27352b113074faf10319499d51bafc4f38d3cb31a7\",\"dweb:/ipfs/Qmd7MForQ2P1T3jZp4CbdCEPoPg7HfgwtkNAg34EahqWwn\"]}},\"version\":1}"}},"@lukso/lsp7-contracts/contracts/LSP7DigitalAsset.sol":{"LSP7DigitalAsset":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[{"internalType":"bytes","name":"storedData","type":"bytes"}],"name":"InvalidExtensionAddress","type":"error"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"InvalidFunctionSelector","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"uint256","name":"authorizedAmount","type":"uint256"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LSP7AmountExceedsAuthorizedAmount","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LSP7AmountExceedsBalance","type":"error"},{"inputs":[{"internalType":"uint256","name":"callIndex","type":"uint256"}],"name":"LSP7BatchCallFailed","type":"error"},{"inputs":[],"name":"LSP7CannotSendWithAddressZero","type":"error"},{"inputs":[],"name":"LSP7CannotUseAddressZeroAsOperator","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"LSP7DecreaseAllowanceNotAuthorized","type":"error"},{"inputs":[],"name":"LSP7DecreasedAllowanceBelowZero","type":"error"},{"inputs":[],"name":"LSP7InvalidTransferBatch","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP7NotifyTokenReceiverContractMissingLSP1Interface","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP7NotifyTokenReceiverIsEOA","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"LSP7RevokeOperatorNotAuthorized","type":"error"},{"inputs":[],"name":"LSP7TokenContractCannotHoldValue","type":"error"},{"inputs":[],"name":"LSP7TokenOwnerCannotBeOperator","type":"error"},{"inputs":[{"internalType":"bytes4","name":"functionSelector","type":"bytes4"}],"name":"NoExtensionFoundForFunctionSelector","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"OperatorAllowanceCannotBeIncreasedFromZero","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"authorizedAmountFor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"uint256","name":"subtractedAmount","type":"uint256"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"decreaseAllowance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"addedAmount","type":"uint256"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"increaseAllowance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"amount","type":"uint256[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorizeOperator(address,uint256,bytes)":"b49506fd","authorizedAmountFor(address,address)":"65aeaa95","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","decimals()":"313ce567","decreaseAllowance(address,address,uint256,bytes)":"78381670","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","getOperatorsOf(address)":"d72fc29a","increaseAllowance(address,uint256,bytes)":"2bc1da82","owner()":"8da5cb5b","renounceOwnership()":"715018a6","revokeOperator(address,address,bool,bytes)":"30d0dc37","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,address,uint256,bool,bytes)":"760d9bba","transferBatch(address[],address[],uint256[],bool[],bytes[])":"2d7667c9","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"storedData\",\"type\":\"bytes\"}],\"name\":\"InvalidExtensionAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"InvalidFunctionSelector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"authorizedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LSP7AmountExceedsAuthorizedAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LSP7AmountExceedsBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callIndex\",\"type\":\"uint256\"}],\"name\":\"LSP7BatchCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7CannotSendWithAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"LSP7DecreaseAllowanceNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7DecreasedAllowanceBelowZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP7NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP7NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"LSP7RevokeOperatorNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7TokenContractCannotHoldValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7TokenOwnerCannotBeOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"name\":\"NoExtensionFoundForFunctionSelector\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorAllowanceCannotBeIncreasedFromZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"authorizedAmountFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"decreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"increaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Matthew Stevens\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"InvalidExtensionAddress(bytes)\":[{\"details\":\"reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\"}],\"InvalidFunctionSelector(bytes)\":[{\"details\":\"reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP7AmountExceedsAuthorizedAmount(address,uint256,address,uint256)\":[{\"details\":\"reverts when `operator` of `tokenOwner` send an `amount` of tokens larger than the `authorizedAmount`.\"}],\"LSP7AmountExceedsBalance(uint256,address,uint256)\":[{\"details\":\"reverts when sending an `amount` of tokens larger than the current `balance` of the `tokenOwner`.\"}],\"LSP7BatchCallFailed(uint256)\":[{\"details\":\"Reverts when a batch call failed.\"}],\"LSP7CannotSendWithAddressZero()\":[{\"details\":\"reverts when trying to: - mint tokens to the zero address. - burn tokens from the zero address. - transfer tokens from or to the zero address.\"}],\"LSP7CannotUseAddressZeroAsOperator()\":[{\"details\":\"reverts when trying to set the zero address as an operator.\"}],\"LSP7DecreaseAllowanceNotAuthorized(address,address,address)\":[{\"details\":\"Reverts when the call to decrease allowance is not authorized.\"}],\"LSP7DecreasedAllowanceBelowZero()\":[{\"details\":\"Reverts when trying to decrease an operator's allowance to more than its current allowance.\"}],\"LSP7InvalidTransferBatch()\":[{\"details\":\"reverts when the array parameters used in {transferBatch} have different lengths.\"}],\"LSP7NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP7NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP7RevokeOperatorNotAuthorized(address,address,address)\":[{\"details\":\"Reverts when the call to revoke operator is not authorized.\"}],\"LSP7TokenContractCannotHoldValue()\":[{\"details\":\"Error occurs when sending native tokens to the LSP7 contract without sending any data. E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\"}],\"LSP7TokenOwnerCannotBeOperator()\":[{\"details\":\"reverts when trying to authorize or revoke the token's owner as an operator.\"}],\"NoExtensionFoundForFunctionSelector(bytes4)\":[{\"details\":\"reverts when there is no extension for the function selector being called with\"}],\"OperatorAllowanceCannotBeIncreasedFromZero(address)\":[{\"details\":\"Reverts when token owner call {increaseAllowance} for an operator that does not have any allowance\"}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}},\"OperatorAuthorizationChanged(address,address,uint256,bytes)\":{\"details\":\"Emitted when `tokenOwner` enables `operator` for `amount` tokens.\",\"params\":{\"amount\":\"The amount of tokens `operator` address has access to from `tokenOwner`\",\"operator\":\"The address authorized as an operator\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenOwner\":\"The token owner\"}},\"OperatorRevoked(address,address,bool,bytes)\":{\"details\":\"Emitted when `tokenOwner` disables `operator` for `amount` tokens and set its {`authorizedAmountFor(...)`} to `0`.\",\"params\":{\"notified\":\"Bool indicating whether the operator has been notified or not\",\"operator\":\"The address revoked from operating\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenOwner\":\"The token owner\"}},\"Transfer(address,address,address,uint256,bool,bytes)\":{\"details\":\"Emitted when the `from` transferred successfully `amount` of tokens to `to`.\",\"params\":{\"amount\":\"The amount of tokens transferred.\",\"data\":\"Any additional data included by the caller during the transfer, and sent in the LSP1 hooks to the `from` and `to` addresses.\",\"force\":\"if the transferred enforced the `to` recipient address to be a contract that implements the LSP1 standard or not.\",\"from\":\"The address which tokens were sent from (balance decreased by `-amount`).\",\"operator\":\"The address of the operator that executed the transfer.\",\"to\":\"The address that received the tokens (balance increased by `+amount`).\"}}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,uint256,bytes)\":{\"custom:danger\":\"To avoid front-running and Allowance Double-Spend Exploit when increasing or decreasing the authorized amount of an operator, it is advised to use the {increaseAllowance} and {decreaseAllowance} functions. For more information, see: https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/\",\"details\":\"Sets an `amount` of tokens that an `operator` has access from the caller's balance (allowance). See {authorizedAmountFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"amount\":\"The allowance amount of tokens operator has access to.\",\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\"}},\"authorizedAmountFor(address,address)\":{\"details\":\"Get the amount of tokens `operator` address has access to from `tokenOwner`. Operators can send and burn tokens on behalf of their owners.\",\"params\":{\"operator\":\"The operator's address to query the authorized amount for.\",\"tokenOwner\":\"The token owner that `operator` has allowance on.\"},\"returns\":{\"_0\":\"The amount of tokens the `operator`'s address has access on the `tokenOwner`'s balance.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of tokens owned by `tokenOwner`. If the token is divisible (the {decimals} function returns `18`), the amount returned should be divided by 1e18 to get a better picture of the actual balance of the `tokenOwner`. _Example:_ ``` balanceOf(someAddress) -> 42_000_000_000_000_000_000 / 1e18 = 42 tokens ```\",\"params\":{\"tokenOwner\":\"The address of the token holder to query the balance for.\"},\"returns\":{\"_0\":\"The amount of tokens owned by `tokenOwner`.\"}},\"batchCalls(bytes[])\":{\"custom:info\":\"It's not possible to send value along the functions call due to the use of `delegatecall`.\",\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"constructor\":{\"params\":{\"isNonDivisible_\":\"Specify if the LSP7 token is a fungible or non-fungible token.\",\"lsp4TokenType_\":\"The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\",\"name_\":\"The name of the token.\",\"newOwner_\":\"The owner of the the token-Metadata.\",\"symbol_\":\"The symbol of the token.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. If the asset contract has been set to be non-divisible via the `isNonDivisible_` parameter in the `constructor`, the decimals returned will be `0`. Otherwise `18` is the common value.\",\"returns\":{\"_0\":\"the number of decimals. If `0` is returned, the asset is non-divisible.\"}},\"decreaseAllowance(address,address,uint256,bytes)\":{\"details\":\"Atomically decreases the allowance granted to `operator` by the caller. This is an alternative approach to {authorizeOperator} that can be used as a mitigation for the double spending allowance problem. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The operator to decrease allowance for `msg.sender`\",\"subtractedAmount\":\"The amount to decrease by in the operator's allowance.\",\"tokenOwner\":\"The address of the token owner.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getOperatorsOf(address)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn on behalf of `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The token owner to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn tokens on behalf of `tokenOwner`.\"}},\"increaseAllowance(address,uint256,bytes)\":{\"details\":\"Atomically increases the allowance granted to `operator` by the caller. This is an alternative approach to {authorizeOperator} that can be used as a mitigation for the double spending allowance problem. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"addedAmount\":\"The additional amount to add on top of the current operator's allowance\",\"operator\":\"The operator to increase the allowance for `msg.sender`\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeOperator(address,address,bool,bytes)\":{\"details\":\"Enables `tokenOwner` to remove `operator` for its tokens, disallowing it to send any amount of tokens on its behalf. This function also allows the `operator` to remove itself if it is the caller of this function\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not.\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenOwner\":\"The address of the token owner.\"}},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,uint256,bool,bytes)\":{\"details\":\"Transfers an `amount` of tokens from the `from` address to the `to` address and notify both sender and recipients via the LSP1 {`universalReceiver(...)`} function. If the tokens are transferred by an operator on behalf of a token holder, the allowance for the operator will be decreased by `amount` once the token transfer has been completed (See {authorizedAmountFor}).\",\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The sender address.\",\"to\":\"The recipient address.\"}},\"transferBatch(address[],address[],uint256[],bool[],bytes[])\":{\"details\":\"Same as {`transfer(...)`} but transfer multiple tokens based on the arrays of `from`, `to`, `amount`.\",\"params\":{\"amount\":\"An array of amount of tokens to transfer for each `from -> to` transfer.\",\"data\":\"An array of additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"For each transfer, when set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of receiving addresses.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Implementation of the LSP7 Digital Asset standard, a contract that represents a fungible token.\",\"version\":1},\"userdoc\":{\"errors\":{\"LSP7BatchCallFailed(uint256)\":[{\"notice\":\"Batch call failed.\"}],\"LSP7TokenContractCannotHoldValue()\":[{\"notice\":\"LSP7 contract cannot receive native tokens.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"constructor\":{\"notice\":\"Sets the token-Metadata\"},\"decreaseAllowance(address,address,uint256,bytes)\":{\"notice\":\"Decrease the allowance of `operator` by -`subtractedAmount`\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"increaseAllowance(address,uint256,bytes)\":{\"notice\":\"Increase the allowance of `operator` by +`addedAmount`\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp7-contracts/contracts/LSP7DigitalAsset.sol\":\"LSP7DigitalAsset\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\":{\"keccak256\":\"0x209d6b52eb0d5dcb8c180773dd67e507f603c98ede7e5a64457752159a52ad3d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dbfa427c80ba998d30c721fb41795502d19aa09acb8e1f59f6982d080f029692\",\"dweb:/ipfs/QmPQXeYEU7kaDtskZ1ha2umRuGSrFTfXfpyiGgBSQfwZBn\"]},\"@erc725/smart-contracts-v8/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts-v8/contracts/errors.sol\":{\"keccak256\":\"0x198fece17fcfec61d40d3453ebbaa49760968ea8caa128dd5314a12b98ecec66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e705131b03cf4167ff312e7ebaa679cf56c22b01de518dfa4d2163d7e1ddb8b\",\"dweb:/ipfs/QmbH8q7MgrR7fJm1QEmYoKcnZCxWwejt4Jum2DUYmLJAGA\"]},\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x943d0f67d6455cfb1bed5d1fb77995df0b202ecdbb028fa0e85bc26bcd3219a5\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c3b8b0daa2fed9c0513444120b87beec7c2b102eadbcbeccae73ece67819a658\",\"dweb:/ipfs/QmaSb9Xhma6UwhK1FosJtbP8EkBn8i9PTcLKg5FU1VAJSH\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":{\"keccak256\":\"0xa81bf1910c3b56b43bf58d0be2105c434ed3b65cfb3674e282b5aba3fd35afb0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://374e7bef39522d65cf8e45c365178eb54d159b9267d0c2a2b97dfea10e52d41f\",\"dweb:/ipfs/QmfVYVnVSTRVAAifFSyFk8icePgw3eeqpjAKWAwfHMu6vX\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":{\"keccak256\":\"0x4536ed09238f33ca9d40ed2e7c6254aac84bf81010b3524711524ae7fd30227c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://abaed57358cb811d3b368d52f66db3c1327b96c38301d6eccf2ffaa6d5fa5928\",\"dweb:/ipfs/QmS1FtQH4Gn6xYrHCTHWJwxgAURvGvvfypsuQ2rRhrkPgi\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0x6a718979925b05064c15e4de4b376dadec8d107d720aa762d22a06e44ed67fa4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c82f6c8133c4d35d8cbbfc4da647204989acc5f38980be787263881e9f732f5\",\"dweb:/ipfs/QmdhHBnJvvo4Ax183HgHkL7w5A4w3ADXDQuewocnTVqsW6\"]},\"@lukso/lsp4-contracts/contracts/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol\":{\"keccak256\":\"0xed4d99a44fa7f33938b35e46c181bb6ed90b6f9dd659af93670a406ececa64da\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6431975ac7b6951c1d6f9c27352b113074faf10319499d51bafc4f38d3cb31a7\",\"dweb:/ipfs/Qmd7MForQ2P1T3jZp4CbdCEPoPg7HfgwtkNAg34EahqWwn\"]},\"@lukso/lsp7-contracts/contracts/LSP7Constants.sol\":{\"keccak256\":\"0x449280dee4ad5f85da5d3eecc624c084cf6edaffb560c98b911dcd47169d846e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9bf9a6ab9124b365f1e2f2178f048587e75af27216ab638127f14b79c114ee79\",\"dweb:/ipfs/QmVUVkPstmvBvx1xchN2dvDqgg4L72KSmkbgHLmiHZvAEk\"]},\"@lukso/lsp7-contracts/contracts/LSP7DigitalAsset.sol\":{\"keccak256\":\"0xfbba5c0e4cfac4431f8e53996c0d3911d38129b57ca47e317c1cc1d97de4dfd0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1701aab7c67ad6bae9a0df8d72d2741a2280f626758fd4df2f14ceb5d25900b2\",\"dweb:/ipfs/QmSTBM3sXPkAGPohid4bg7YiLZAhiJFDw5HjukGvW6g7PR\"]},\"@lukso/lsp7-contracts/contracts/LSP7Errors.sol\":{\"keccak256\":\"0x5bd6d23f61d45a390041b788c5e341bd0e1972b4112c7700af1addcfa284e821\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d41b3e6e9eaea0a53886d33536d0e83b8878f3b5fb17d7683592742f78a66938\",\"dweb:/ipfs/QmetTsJ7RWXF733TtHTyBLvjGJf7oLxzCSKYRpJnK61we7\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"ERC165Checker":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c20731e4a0c8aa26588e7f7c408bd327ed3fc550da1bfc0792731b34a1fedb3c64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SMOD BALANCE 0xE4 LOG0 0xC8 0xAA 0x26 PC DUP15 PUSH32 0x7C408BD327ED3FC550DA1BFC0792731B34A1FEDB3C64736F6C63430008130033 ","sourceMap":"449:4621:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c20731e4a0c8aa26588e7f7c408bd327ed3fc550da1bfc0792731b34a1fedb3c64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SMOD BALANCE 0xE4 LOG0 0xC8 0xAA 0x26 PC DUP15 PUSH32 0x7C408BD327ED3FC550DA1BFC0792731B34A1FEDB3C64736F6C63430008130033 ","sourceMap":"449:4621:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":\"ERC165Checker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220132f5c7c8da4283aa45946987e4245121b7eef11c4e9859346044daf722bcf0764736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0x2F 0x5C PUSH29 0x8DA4283AA45946987E4245121B7EEF11C4E9859346044DAF722BCF0764 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"1329:11630:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220132f5c7c8da4283aa45946987e4245121b7eef11c4e9859346044daf722bcf0764736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0x2F 0x5C PUSH29 0x8DA4283AA45946987E4245121B7EEF11C4E9859346044DAF722BCF0764 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"1329:11630:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"contracts/ama.sol":{"SimpleAMA":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[{"internalType":"bytes","name":"storedData","type":"bytes"}],"name":"InvalidExtensionAddress","type":"error"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"InvalidFunctionSelector","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"uint256","name":"authorizedAmount","type":"uint256"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LSP7AmountExceedsAuthorizedAmount","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LSP7AmountExceedsBalance","type":"error"},{"inputs":[{"internalType":"uint256","name":"callIndex","type":"uint256"}],"name":"LSP7BatchCallFailed","type":"error"},{"inputs":[],"name":"LSP7CannotSendWithAddressZero","type":"error"},{"inputs":[],"name":"LSP7CannotUseAddressZeroAsOperator","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"LSP7DecreaseAllowanceNotAuthorized","type":"error"},{"inputs":[],"name":"LSP7DecreasedAllowanceBelowZero","type":"error"},{"inputs":[],"name":"LSP7InvalidTransferBatch","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP7NotifyTokenReceiverContractMissingLSP1Interface","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP7NotifyTokenReceiverIsEOA","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"LSP7RevokeOperatorNotAuthorized","type":"error"},{"inputs":[],"name":"LSP7TokenContractCannotHoldValue","type":"error"},{"inputs":[],"name":"LSP7TokenOwnerCannotBeOperator","type":"error"},{"inputs":[{"internalType":"bytes4","name":"functionSelector","type":"bytes4"}],"name":"NoExtensionFoundForFunctionSelector","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"OperatorAllowanceCannotBeIncreasedFromZero","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"uint256","name":"_questionId","type":"uint256"},{"internalType":"string","name":"_answerText","type":"string"}],"name":"answerQuestion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"authorizedAmountFor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimFreeToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"uint256","name":"subtractedAmount","type":"uint256"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"decreaseAllowance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllQuestions","outputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"string","name":"questionText","type":"string"},{"internalType":"string","name":"answerText","type":"string"},{"internalType":"bool","name":"answered","type":"bool"}],"internalType":"struct SimpleAMA.Question[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getFQTBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"hasReceivedToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"hasSubmittedQuestion","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"addedAmount","type":"uint256"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"increaseAllowance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"profileOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"questionCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"questions","outputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"string","name":"questionText","type":"string"},{"internalType":"string","name":"answerText","type":"string"},{"internalType":"bool","name":"answered","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"string","name":"_questionText","type":"string"}],"name":"submitQuestion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"amount","type":"uint256[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_1567":{"entryPoint":null,"id":1567,"parameterSlots":4,"returnSlots":0},"@_1920":{"entryPoint":null,"id":1920,"parameterSlots":5,"returnSlots":0},"@_3244":{"entryPoint":null,"id":3244,"parameterSlots":0,"returnSlots":0},"@_4250":{"entryPoint":null,"id":4250,"parameterSlots":1,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_msgSender_3345":{"entryPoint":730,"id":3345,"parameterSlots":0,"returnSlots":1},"@_setData_196":{"entryPoint":934,"id":196,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_3332":{"entryPoint":738,"id":3332,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":1114,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":1137,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":2176,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1197,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2241,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1214,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_storage":{"entryPoint":1401,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1243,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":2098,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_bytes_storage":{"entryPoint":1712,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1068,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1036,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1187,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1673,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1547,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":1867,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2115,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1422,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1348,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1837,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1537,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1805,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1301,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1254,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1587,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1031,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2159,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1438,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1792,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1645,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1451,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1597,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1088,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1640,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7997:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"379:81:26","statements":[{"nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:26"},"nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nodeType":"YulBlock","src":"511:51:26","statements":[{"nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:26"},"nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nodeType":"YulBlock","src":"611:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:26"},"nodeType":"YulFunctionCall","src":"670:12:26"},"nodeType":"YulExpressionStatement","src":"670:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:26"},"nodeType":"YulFunctionCall","src":"641:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:26"},"nodeType":"YulFunctionCall","src":"631:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:26"},"nodeType":"YulFunctionCall","src":"624:43:26"},"nodeType":"YulIf","src":"621:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:26","type":""}],"src":"568:122:26"},{"body":{"nodeType":"YulBlock","src":"759:80:26","statements":[{"nodeType":"YulAssignment","src":"769:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:26"},"nodeType":"YulFunctionCall","src":"778:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:26"},"nodeType":"YulFunctionCall","src":"800:33:26"},"nodeType":"YulExpressionStatement","src":"800:33:26"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:26","type":""}],"src":"696:143:26"},{"body":{"nodeType":"YulBlock","src":"922:274:26","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:26"},"nodeType":"YulFunctionCall","src":"970:79:26"},"nodeType":"YulExpressionStatement","src":"970:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:26"},"nodeType":"YulFunctionCall","src":"939:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:26"},"nodeType":"YulFunctionCall","src":"935:32:26"},"nodeType":"YulIf","src":"932:119:26"},{"nodeType":"YulBlock","src":"1061:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:26"},"nodeType":"YulFunctionCall","src":"1147:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:26"},"nodeType":"YulFunctionCall","src":"1115:64:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:26"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:26","type":""}],"src":"845:351:26"},{"body":{"nodeType":"YulBlock","src":"1247:32:26","statements":[{"nodeType":"YulAssignment","src":"1257:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1268:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1257:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1229:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1239:7:26","type":""}],"src":"1202:77:26"},{"body":{"nodeType":"YulBlock","src":"1350:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1367:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1390:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1372:17:26"},"nodeType":"YulFunctionCall","src":"1372:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1360:6:26"},"nodeType":"YulFunctionCall","src":"1360:37:26"},"nodeType":"YulExpressionStatement","src":"1360:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1338:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1345:3:26","type":""}],"src":"1285:118:26"},{"body":{"nodeType":"YulBlock","src":"1507:124:26","statements":[{"nodeType":"YulAssignment","src":"1517:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1529:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1540:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1525:3:26"},"nodeType":"YulFunctionCall","src":"1525:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1517:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1597:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1610:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1621:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1606:3:26"},"nodeType":"YulFunctionCall","src":"1606:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1553:43:26"},"nodeType":"YulFunctionCall","src":"1553:71:26"},"nodeType":"YulExpressionStatement","src":"1553:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1479:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1491:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1502:4:26","type":""}],"src":"1409:222:26"},{"body":{"nodeType":"YulBlock","src":"1695:40:26","statements":[{"nodeType":"YulAssignment","src":"1706:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1722:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1716:5:26"},"nodeType":"YulFunctionCall","src":"1716:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1706:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1678:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1688:6:26","type":""}],"src":"1637:98:26"},{"body":{"nodeType":"YulBlock","src":"1769:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1786:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1789:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1779:6:26"},"nodeType":"YulFunctionCall","src":"1779:88:26"},"nodeType":"YulExpressionStatement","src":"1779:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1883:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1886:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1876:6:26"},"nodeType":"YulFunctionCall","src":"1876:15:26"},"nodeType":"YulExpressionStatement","src":"1876:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1907:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1910:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1900:6:26"},"nodeType":"YulFunctionCall","src":"1900:15:26"},"nodeType":"YulExpressionStatement","src":"1900:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1741:180:26"},{"body":{"nodeType":"YulBlock","src":"1955:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1972:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1975:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1965:6:26"},"nodeType":"YulFunctionCall","src":"1965:88:26"},"nodeType":"YulExpressionStatement","src":"1965:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2069:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2072:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:26"},"nodeType":"YulFunctionCall","src":"2062:15:26"},"nodeType":"YulExpressionStatement","src":"2062:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2093:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2096:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2086:6:26"},"nodeType":"YulFunctionCall","src":"2086:15:26"},"nodeType":"YulExpressionStatement","src":"2086:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1927:180:26"},{"body":{"nodeType":"YulBlock","src":"2164:269:26","statements":[{"nodeType":"YulAssignment","src":"2174:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2188:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"2194:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2184:3:26"},"nodeType":"YulFunctionCall","src":"2184:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2174:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"2205:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2235:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"2241:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2231:3:26"},"nodeType":"YulFunctionCall","src":"2231:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2209:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2282:51:26","statements":[{"nodeType":"YulAssignment","src":"2296:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2310:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2318:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2306:3:26"},"nodeType":"YulFunctionCall","src":"2306:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2296:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2262:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2255:6:26"},"nodeType":"YulFunctionCall","src":"2255:26:26"},"nodeType":"YulIf","src":"2252:81:26"},{"body":{"nodeType":"YulBlock","src":"2385:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2399:16:26"},"nodeType":"YulFunctionCall","src":"2399:18:26"},"nodeType":"YulExpressionStatement","src":"2399:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2349:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2372:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2380:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2369:2:26"},"nodeType":"YulFunctionCall","src":"2369:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2346:2:26"},"nodeType":"YulFunctionCall","src":"2346:38:26"},"nodeType":"YulIf","src":"2343:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2148:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2157:6:26","type":""}],"src":"2113:320:26"},{"body":{"nodeType":"YulBlock","src":"2492:87:26","statements":[{"nodeType":"YulAssignment","src":"2502:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2510:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2502:4:26"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2530:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2533:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2523:6:26"},"nodeType":"YulFunctionCall","src":"2523:14:26"},"nodeType":"YulExpressionStatement","src":"2523:14:26"},{"nodeType":"YulAssignment","src":"2546:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2564:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2567:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2554:9:26"},"nodeType":"YulFunctionCall","src":"2554:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2546:4:26"}]}]},"name":"array_dataslot_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2479:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2487:4:26","type":""}],"src":"2439:140:26"},{"body":{"nodeType":"YulBlock","src":"2629:49:26","statements":[{"nodeType":"YulAssignment","src":"2639:33:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2657:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2653:3:26"},"nodeType":"YulFunctionCall","src":"2653:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"2669:2:26","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2649:3:26"},"nodeType":"YulFunctionCall","src":"2649:23:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2639:6:26"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2612:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2622:6:26","type":""}],"src":"2585:93:26"},{"body":{"nodeType":"YulBlock","src":"2737:54:26","statements":[{"nodeType":"YulAssignment","src":"2747:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2772:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"2778:5:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2768:3:26"},"nodeType":"YulFunctionCall","src":"2768:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2747:8:26"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2712:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"2718:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2728:8:26","type":""}],"src":"2684:107:26"},{"body":{"nodeType":"YulBlock","src":"2873:317:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2883:35:26","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2904:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"2916:1:26","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2900:3:26"},"nodeType":"YulFunctionCall","src":"2900:18:26"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2887:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2927:109:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2958:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2969:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2939:18:26"},"nodeType":"YulFunctionCall","src":"2939:97:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2931:4:26","type":""}]},{"nodeType":"YulAssignment","src":"3045:51:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"3076:9:26"},{"name":"toInsert","nodeType":"YulIdentifier","src":"3087:8:26"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"3057:18:26"},"nodeType":"YulFunctionCall","src":"3057:39:26"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"3045:8:26"}]},{"nodeType":"YulAssignment","src":"3105:30:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3118:5:26"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"3129:4:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3125:3:26"},"nodeType":"YulFunctionCall","src":"3125:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3114:3:26"},"nodeType":"YulFunctionCall","src":"3114:21:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3105:5:26"}]},{"nodeType":"YulAssignment","src":"3144:40:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3157:5:26"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"3168:8:26"},{"name":"mask","nodeType":"YulIdentifier","src":"3178:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3164:3:26"},"nodeType":"YulFunctionCall","src":"3164:19:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3154:2:26"},"nodeType":"YulFunctionCall","src":"3154:30:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3144:6:26"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2834:5:26","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2841:10:26","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2853:8:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2866:6:26","type":""}],"src":"2797:393:26"},{"body":{"nodeType":"YulBlock","src":"3228:28:26","statements":[{"nodeType":"YulAssignment","src":"3238:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"3245:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3238:3:26"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3214:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3224:3:26","type":""}],"src":"3196:60:26"},{"body":{"nodeType":"YulBlock","src":"3322:82:26","statements":[{"nodeType":"YulAssignment","src":"3332:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3390:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3372:17:26"},"nodeType":"YulFunctionCall","src":"3372:24:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3363:8:26"},"nodeType":"YulFunctionCall","src":"3363:34:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3345:17:26"},"nodeType":"YulFunctionCall","src":"3345:53:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3332:9:26"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3302:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3312:9:26","type":""}],"src":"3262:142:26"},{"body":{"nodeType":"YulBlock","src":"3457:28:26","statements":[{"nodeType":"YulAssignment","src":"3467:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"3474:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3467:3:26"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3443:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3453:3:26","type":""}],"src":"3410:75:26"},{"body":{"nodeType":"YulBlock","src":"3567:193:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3577:63:26","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3632:7:26"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3601:30:26"},"nodeType":"YulFunctionCall","src":"3601:39:26"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3581:16:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3656:4:26"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3696:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3690:5:26"},"nodeType":"YulFunctionCall","src":"3690:11:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3703:6:26"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3735:16:26"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3711:23:26"},"nodeType":"YulFunctionCall","src":"3711:41:26"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3662:27:26"},"nodeType":"YulFunctionCall","src":"3662:91:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3649:6:26"},"nodeType":"YulFunctionCall","src":"3649:105:26"},"nodeType":"YulExpressionStatement","src":"3649:105:26"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3544:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3550:6:26","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3558:7:26","type":""}],"src":"3491:269:26"},{"body":{"nodeType":"YulBlock","src":"3815:24:26","statements":[{"nodeType":"YulAssignment","src":"3825:8:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3832:1:26","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3825:3:26"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3811:3:26","type":""}],"src":"3766:73:26"},{"body":{"nodeType":"YulBlock","src":"3898:136:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3908:46:26","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3922:30:26"},"nodeType":"YulFunctionCall","src":"3922:32:26"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3912:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4007:4:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4013:6:26"},{"name":"zero_0","nodeType":"YulIdentifier","src":"4021:6:26"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3963:43:26"},"nodeType":"YulFunctionCall","src":"3963:65:26"},"nodeType":"YulExpressionStatement","src":"3963:65:26"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3884:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3890:6:26","type":""}],"src":"3845:189:26"},{"body":{"nodeType":"YulBlock","src":"4090:136:26","statements":[{"body":{"nodeType":"YulBlock","src":"4157:63:26","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4201:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4208:1:26","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"4171:29:26"},"nodeType":"YulFunctionCall","src":"4171:39:26"},"nodeType":"YulExpressionStatement","src":"4171:39:26"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4110:5:26"},{"name":"end","nodeType":"YulIdentifier","src":"4117:3:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4107:2:26"},"nodeType":"YulFunctionCall","src":"4107:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4122:26:26","statements":[{"nodeType":"YulAssignment","src":"4124:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4137:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4144:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4133:3:26"},"nodeType":"YulFunctionCall","src":"4133:13:26"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"4124:5:26"}]}]},"pre":{"nodeType":"YulBlock","src":"4104:2:26","statements":[]},"src":"4100:120:26"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"4078:5:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4085:3:26","type":""}],"src":"4040:186:26"},{"body":{"nodeType":"YulBlock","src":"4310:463:26","statements":[{"body":{"nodeType":"YulBlock","src":"4336:430:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4350:53:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4397:5:26"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"4366:30:26"},"nodeType":"YulFunctionCall","src":"4366:37:26"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4354:8:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4416:63:26","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4439:8:26"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4467:10:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4449:17:26"},"nodeType":"YulFunctionCall","src":"4449:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4435:3:26"},"nodeType":"YulFunctionCall","src":"4435:44:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4420:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4636:27:26","statements":[{"nodeType":"YulAssignment","src":"4638:23:26","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4653:8:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4638:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4620:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"4632:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4617:2:26"},"nodeType":"YulFunctionCall","src":"4617:18:26"},"nodeType":"YulIf","src":"4614:49:26"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4705:11:26"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4722:8:26"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4750:3:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4732:17:26"},"nodeType":"YulFunctionCall","src":"4732:22:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4718:3:26"},"nodeType":"YulFunctionCall","src":"4718:37:26"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4676:28:26"},"nodeType":"YulFunctionCall","src":"4676:80:26"},"nodeType":"YulExpressionStatement","src":"4676:80:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4327:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"4332:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4324:2:26"},"nodeType":"YulFunctionCall","src":"4324:11:26"},"nodeType":"YulIf","src":"4321:445:26"}]},"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"4286:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"4293:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"4298:10:26","type":""}],"src":"4232:541:26"},{"body":{"nodeType":"YulBlock","src":"4842:54:26","statements":[{"nodeType":"YulAssignment","src":"4852:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4877:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"4883:5:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4873:3:26"},"nodeType":"YulFunctionCall","src":"4873:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4852:8:26"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4817:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"4823:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4833:8:26","type":""}],"src":"4779:117:26"},{"body":{"nodeType":"YulBlock","src":"4953:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4963:68:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5012:1:26","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"5015:5:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5008:3:26"},"nodeType":"YulFunctionCall","src":"5008:13:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5027:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5023:3:26"},"nodeType":"YulFunctionCall","src":"5023:6:26"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4979:28:26"},"nodeType":"YulFunctionCall","src":"4979:51:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4975:3:26"},"nodeType":"YulFunctionCall","src":"4975:56:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4967:4:26","type":""}]},{"nodeType":"YulAssignment","src":"5040:25:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5054:4:26"},{"name":"mask","nodeType":"YulIdentifier","src":"5060:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5050:3:26"},"nodeType":"YulFunctionCall","src":"5050:15:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5040:6:26"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4930:4:26","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4936:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4946:6:26","type":""}],"src":"4902:169:26"},{"body":{"nodeType":"YulBlock","src":"5157:214:26","statements":[{"nodeType":"YulAssignment","src":"5290:37:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5317:4:26"},{"name":"len","nodeType":"YulIdentifier","src":"5323:3:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5298:18:26"},"nodeType":"YulFunctionCall","src":"5298:29:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5290:4:26"}]},{"nodeType":"YulAssignment","src":"5336:29:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5347:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5357:1:26","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5360:3:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5353:3:26"},"nodeType":"YulFunctionCall","src":"5353:11:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5344:2:26"},"nodeType":"YulFunctionCall","src":"5344:21:26"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"5336:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5138:4:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"5144:3:26","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"5152:4:26","type":""}],"src":"5076:295:26"},{"body":{"nodeType":"YulBlock","src":"5466:1300:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5477:50:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5523:3:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5491:31:26"},"nodeType":"YulFunctionCall","src":"5491:36:26"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5481:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5612:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5614:16:26"},"nodeType":"YulFunctionCall","src":"5614:18:26"},"nodeType":"YulExpressionStatement","src":"5614:18:26"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5584:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5592:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5581:2:26"},"nodeType":"YulFunctionCall","src":"5581:30:26"},"nodeType":"YulIf","src":"5578:56:26"},{"nodeType":"YulVariableDeclaration","src":"5644:52:26","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5690:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5684:5:26"},"nodeType":"YulFunctionCall","src":"5684:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5658:25:26"},"nodeType":"YulFunctionCall","src":"5658:38:26"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5648:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5788:4:26"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5794:6:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"5802:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulIdentifier","src":"5743:44:26"},"nodeType":"YulFunctionCall","src":"5743:66:26"},"nodeType":"YulExpressionStatement","src":"5743:66:26"},{"nodeType":"YulVariableDeclaration","src":"5819:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5836:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5823:9:26","type":""}]},{"nodeType":"YulAssignment","src":"5847:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5860:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5847:9:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5911:610:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5925:37:26","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5944:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5956:4:26","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5952:3:26"},"nodeType":"YulFunctionCall","src":"5952:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5940:3:26"},"nodeType":"YulFunctionCall","src":"5940:22:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5929:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5976:50:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6021:4:26"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"5990:30:26"},"nodeType":"YulFunctionCall","src":"5990:36:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5980:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6039:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6048:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6043:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"6107:163:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6132:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6150:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6155:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6146:3:26"},"nodeType":"YulFunctionCall","src":"6146:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6140:5:26"},"nodeType":"YulFunctionCall","src":"6140:26:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6125:6:26"},"nodeType":"YulFunctionCall","src":"6125:42:26"},"nodeType":"YulExpressionStatement","src":"6125:42:26"},{"nodeType":"YulAssignment","src":"6184:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6198:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6206:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6194:3:26"},"nodeType":"YulFunctionCall","src":"6194:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6184:6:26"}]},{"nodeType":"YulAssignment","src":"6225:31:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6242:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6253:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6238:3:26"},"nodeType":"YulFunctionCall","src":"6238:18:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6225:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6073:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"6076:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6070:2:26"},"nodeType":"YulFunctionCall","src":"6070:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6085:21:26","statements":[{"nodeType":"YulAssignment","src":"6087:17:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6096:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"6099:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6092:3:26"},"nodeType":"YulFunctionCall","src":"6092:12:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6087:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"6066:3:26","statements":[]},"src":"6062:208:26"},{"body":{"nodeType":"YulBlock","src":"6306:156:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6324:43:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6351:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6356:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6347:3:26"},"nodeType":"YulFunctionCall","src":"6347:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6341:5:26"},"nodeType":"YulFunctionCall","src":"6341:26:26"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"6328:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6391:6:26"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6418:9:26"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6433:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6441:4:26","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6429:3:26"},"nodeType":"YulFunctionCall","src":"6429:17:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6399:18:26"},"nodeType":"YulFunctionCall","src":"6399:48:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6384:6:26"},"nodeType":"YulFunctionCall","src":"6384:64:26"},"nodeType":"YulExpressionStatement","src":"6384:64:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"6289:7:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"6298:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6286:2:26"},"nodeType":"YulFunctionCall","src":"6286:19:26"},"nodeType":"YulIf","src":"6283:179:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6482:4:26"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6496:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6504:1:26","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6492:3:26"},"nodeType":"YulFunctionCall","src":"6492:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"6508:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6488:3:26"},"nodeType":"YulFunctionCall","src":"6488:22:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6475:6:26"},"nodeType":"YulFunctionCall","src":"6475:36:26"},"nodeType":"YulExpressionStatement","src":"6475:36:26"}]},"nodeType":"YulCase","src":"5904:617:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5909:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6538:222:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6552:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6565:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6556:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"6589:67:26","statements":[{"nodeType":"YulAssignment","src":"6607:35:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6626:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6631:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6622:3:26"},"nodeType":"YulFunctionCall","src":"6622:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6616:5:26"},"nodeType":"YulFunctionCall","src":"6616:26:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6607:5:26"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6582:6:26"},"nodeType":"YulIf","src":"6579:77:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6676:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6735:5:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"6742:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6682:52:26"},"nodeType":"YulFunctionCall","src":"6682:67:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6669:6:26"},"nodeType":"YulFunctionCall","src":"6669:81:26"},"nodeType":"YulExpressionStatement","src":"6669:81:26"}]},"nodeType":"YulCase","src":"6530:230:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5884:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5892:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5881:2:26"},"nodeType":"YulFunctionCall","src":"5881:14:26"},"nodeType":"YulSwitch","src":"5874:886:26"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5455:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"5461:3:26","type":""}],"src":"5376:1390:26"},{"body":{"nodeType":"YulBlock","src":"6867:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6884:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"6889:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6877:6:26"},"nodeType":"YulFunctionCall","src":"6877:19:26"},"nodeType":"YulExpressionStatement","src":"6877:19:26"},{"nodeType":"YulAssignment","src":"6905:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6924:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"6929:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6920:3:26"},"nodeType":"YulFunctionCall","src":"6920:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6905:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6839:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"6844:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6855:11:26","type":""}],"src":"6772:168:26"},{"body":{"nodeType":"YulBlock","src":"7008:184:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7018:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"7027:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7022:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7087:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7112:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"7117:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7108:3:26"},"nodeType":"YulFunctionCall","src":"7108:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7131:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"7136:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7127:3:26"},"nodeType":"YulFunctionCall","src":"7127:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7121:5:26"},"nodeType":"YulFunctionCall","src":"7121:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7101:6:26"},"nodeType":"YulFunctionCall","src":"7101:39:26"},"nodeType":"YulExpressionStatement","src":"7101:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7048:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"7051:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7045:2:26"},"nodeType":"YulFunctionCall","src":"7045:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7059:19:26","statements":[{"nodeType":"YulAssignment","src":"7061:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7070:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"7073:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7066:3:26"},"nodeType":"YulFunctionCall","src":"7066:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7061:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"7041:3:26","statements":[]},"src":"7037:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7170:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"7175:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7166:3:26"},"nodeType":"YulFunctionCall","src":"7166:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"7184:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7159:6:26"},"nodeType":"YulFunctionCall","src":"7159:27:26"},"nodeType":"YulExpressionStatement","src":"7159:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6990:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6995:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"7000:6:26","type":""}],"src":"6946:246:26"},{"body":{"nodeType":"YulBlock","src":"7246:54:26","statements":[{"nodeType":"YulAssignment","src":"7256:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7274:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"7281:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7270:3:26"},"nodeType":"YulFunctionCall","src":"7270:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7290:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7286:3:26"},"nodeType":"YulFunctionCall","src":"7286:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7266:3:26"},"nodeType":"YulFunctionCall","src":"7266:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7256:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7229:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7239:6:26","type":""}],"src":"7198:102:26"},{"body":{"nodeType":"YulBlock","src":"7396:283:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7406:52:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7452:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7420:31:26"},"nodeType":"YulFunctionCall","src":"7420:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7410:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7467:77:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7532:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"7537:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7474:57:26"},"nodeType":"YulFunctionCall","src":"7474:70:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7467:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7592:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"7599:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7588:3:26"},"nodeType":"YulFunctionCall","src":"7588:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"7606:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"7611:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7553:34:26"},"nodeType":"YulFunctionCall","src":"7553:65:26"},"nodeType":"YulExpressionStatement","src":"7553:65:26"},{"nodeType":"YulAssignment","src":"7627:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7638:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7665:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7643:21:26"},"nodeType":"YulFunctionCall","src":"7643:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7634:3:26"},"nodeType":"YulFunctionCall","src":"7634:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7627:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7377:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7384:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7392:3:26","type":""}],"src":"7306:373:26"},{"body":{"nodeType":"YulBlock","src":"7801:193:26","statements":[{"nodeType":"YulAssignment","src":"7811:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7823:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7834:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7819:3:26"},"nodeType":"YulFunctionCall","src":"7819:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7811:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7858:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7869:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7854:3:26"},"nodeType":"YulFunctionCall","src":"7854:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7877:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"7883:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7873:3:26"},"nodeType":"YulFunctionCall","src":"7873:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7847:6:26"},"nodeType":"YulFunctionCall","src":"7847:47:26"},"nodeType":"YulExpressionStatement","src":"7847:47:26"},{"nodeType":"YulAssignment","src":"7903:84:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7973:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"7982:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7911:61:26"},"nodeType":"YulFunctionCall","src":"7911:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7903:4:26"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7773:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7785:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7796:4:26","type":""}],"src":"7685:309:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_bytes_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_bytes_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_bytes_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162005efa38038062005efa833981810160405281019062000037919062000471565b6040518060400160405280601381526020017f46726565205175657374696f6e20546f6b656e000000000000000000000000008152506040518060400160405280600381526020017f4651540000000000000000000000000000000000000000000000000000000000815250826000808484848481620000cc620000c0620002da60201b60201c565b620002e260201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000133576040517f1ad8836c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6200014481620002e260201b60201c565b50620001af7feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b6040518060400160405280600481526020017fa4d9662400000000000000000000000000000000000000000000000000000000815250620003a660201b60201c565b620001e47fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b85620003a660201b60201c565b620002197f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b84620003a660201b60201c565b6200026f7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb360001b82604051602001620002549190620004be565b604051602081830303815290604052620003a660201b60201c565b5050505080600260006101000a81548160ff021916908315150217905550505050505080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620008e5565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b80600160008481526020019081526020016000209081620003c891906200074b565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051620003fb9190620008c1565b60405180910390a25050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000439826200040c565b9050919050565b6200044b816200042c565b81146200045757600080fd5b50565b6000815190506200046b8162000440565b92915050565b6000602082840312156200048a576200048962000407565b5b60006200049a848285016200045a565b91505092915050565b6000819050919050565b620004b881620004a3565b82525050565b6000602082019050620004d56000830184620004ad565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200055d57607f821691505b60208210810362000573576200057262000515565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200059e565b620005e986836200059e565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200062c620006266200062084620004a3565b62000601565b620004a3565b9050919050565b6000819050919050565b62000648836200060b565b62000660620006578262000633565b848454620005ab565b825550505050565b600090565b6200067762000668565b620006848184846200063d565b505050565b5b81811015620006ac57620006a06000826200066d565b6001810190506200068a565b5050565b601f821115620006fb57620006c58162000579565b620006d0846200058e565b81016020851015620006e0578190505b620006f8620006ef856200058e565b83018262000689565b50505b505050565b600082821c905092915050565b6000620007206000198460080262000700565b1980831691505092915050565b60006200073b83836200070d565b9150826002028217905092915050565b6200075682620004db565b67ffffffffffffffff811115620007725762000771620004e6565b5b6200077e825462000544565b6200078b828285620006b0565b600060209050601f831160018114620007c35760008415620007ae578287015190505b620007ba85826200072d565b8655506200082a565b601f198416620007d38662000579565b60005b82811015620007fd57848901518255600182019150602085019450602081019050620007d6565b868310156200081d578489015162000819601f8916826200070d565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b60005b838110156200086357808201518184015260208101905062000846565b60008484015250505050565b6000601f19601f8301169050919050565b60006200088d82620004db565b62000899818562000832565b9350620008ab81856020860162000843565b620008b6816200086f565b840191505092915050565b60006020820190508181036000830152620008dd818462000880565b905092915050565b61560580620008f56000396000f3fe6080604052600436106101d15760003560e01c8063715018a6116100f75780639790242111610095578063b7b064a811610064578063b7b064a814610760578063d72fc29a1461078b578063dedff9c6146107c8578063f2fde38b146108055761024b565b806397902421146106d9578063ac0f05f6146106f5578063adcea55a14610720578063b49506fd146107375761024b565b806378381670116100d1578063783816701461062c5780637f23690c14610655578063821dc5d1146106715780638da5cb5b146106ae5761024b565b8063715018a6146105af57806373a6f6a6146105c6578063760d9bba146106035761024b565b806330d0dc371161016f57806354f6127f1161013e57806354f6127f146104bb57806365aeaa95146104f85780636963d4381461053557806370a08231146105725761024b565b806330d0dc37146103fe578063313ce5671461042757806331b1b97814610452578063447e52a0146104925761024b565b806318160ddd116101ab57806318160ddd146103565780632af9338e146103815780632bc1da82146103ac5780632d7667c9146103d55761024b565b806301ffc9a7146102b3578063099ee6f2146102f05780630f86c618146103195761024b565b3661024b5760003403610219576040517fe5099ee3000000000000000000000000000000000000000000000000000000008152600401610210906132cb565b60405180910390fd5b6040517f388f5adc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600036606060046000369050101561029c5782826040517fe5099ee3000000000000000000000000000000000000000000000000000000008152600401610293929190613338565b60405180910390fd5b6102a6838361082e565b9050915050805190602001f35b3480156102bf57600080fd5b506102da60048036038101906102d591906133c8565b6109ac565b6040516102e79190613410565b60405180910390f35b3480156102fc57600080fd5b5061031760048036038101906103129190613551565b610a1d565b005b34801561032557600080fd5b50610340600480360381019061033b91906135f8565b610bc7565b60405161034d9190613410565b60405180910390f35b34801561036257600080fd5b5061036b610c69565b604051610378919061363e565b60405180910390f35b34801561038d57600080fd5b50610396610c73565b6040516103a39190613822565b60405180910390f35b3480156103b857600080fd5b506103d360048036038101906103ce9190613911565b610ed7565b005b3480156103e157600080fd5b506103fc60048036038101906103f79190613cdb565b610f82565b005b34801561040a57600080fd5b5061042560048036038101906104209190613de2565b611096565b005b34801561043357600080fd5b5061043c611193565b6040516104499190613e81565b60405180910390f35b34801561045e57600080fd5b5061047960048036038101906104749190613e9c565b6111b8565b6040516104899493929190613f22565b60405180910390f35b34801561049e57600080fd5b506104b960048036038101906104b49190613f75565b611325565b005b3480156104c757600080fd5b506104e260048036038101906104dd9190614007565b611445565b6040516104ef9190614078565b60405180910390f35b34801561050457600080fd5b5061051f600480360381019061051a919061409a565b611457565b60405161052c919061363e565b60405180910390f35b34801561054157600080fd5b5061055c60048036038101906105579190614135565b611559565b604051610569919061428e565b60405180910390f35b34801561057e57600080fd5b50610599600480360381019061059491906135f8565b6116d5565b6040516105a6919061363e565b60405180910390f35b3480156105bb57600080fd5b506105c461171e565b005b3480156105d257600080fd5b506105ed60048036038101906105e891906135f8565b611732565b6040516105fa9190613410565b60405180910390f35b34801561060f57600080fd5b5061062a600480360381019061062591906142b0565b611752565b005b34801561063857600080fd5b50610653600480360381019061064e9190614347565b6117a5565b005b61066f600480360381019061066a91906143ca565b6118eb565b005b34801561067d57600080fd5b50610698600480360381019061069391906135f8565b61193b565b6040516106a5919061363e565b60405180910390f35b3480156106ba57600080fd5b506106c361194d565b6040516106d09190614426565b60405180910390f35b6106f360048036038101906106ee9190614504565b611976565b005b34801561070157600080fd5b5061070a6119c6565b6040516107179190614426565b60405180910390f35b34801561072c57600080fd5b506107356119ec565b005b34801561074357600080fd5b5061075e60048036038101906107599190613911565b611b1d565b005b34801561076c57600080fd5b50610775611b63565b604051610782919061363e565b60405180910390f35b34801561079757600080fd5b506107b260048036038101906107ad91906135f8565b611b69565b6040516107bf919061462b565b60405180910390f35b3480156107d457600080fd5b506107ef60048036038101906107ea919061464d565b611bb9565b6040516107fc919061428e565b60405180910390f35b34801561081157600080fd5b5061082c600480360381019061082791906135f8565b611c6a565b005b6060600061085f6000357fffffffff0000000000000000000000000000000000000000000000000000000016611ced565b509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108f7576000357fffffffff00000000000000000000000000000000000000000000000000000000166040517fbb370b2b0000000000000000000000000000000000000000000000000000000081526004016108ee91906146a5565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1634878733346040516020016109299493929190614759565b60405160208183030381529060405260405161094591906147c5565b60006040518083038185875af1925050503d8060008114610982576040519150601f19603f3d011682016040523d82523d6000602084013e610987565b606091505b5091509150811561099d578093505050506109a6565b80518060208301fd5b92915050565b600063c52d600860e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a065750610a0582611da7565b5b80610a165750610a1582611e08565b5b9050919050565b670de0b6b3a7640000610a2f336116d5565b1015610a70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a679061484e565b60405180910390fd5b60086000815480929190610a839061489d565b919050555060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020016040518060200160405280600081525081526020016000151581525060096000600854815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081610b429190614af1565b506040820151816002019081610b589190614af1565b5060608201518160030160006101000a81548160ff021916908315150217905550905050610bc433670de0b6b3a76400006040518060400160405280601f81526020017f4275726e20746f6b656e20746f207375626d69742061207175657374696f6e00815250611e6f565b50565b600080600190505b6008548111610c5e578273ffffffffffffffffffffffffffffffffffffffff166009600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c4b576001915050610c64565b8080610c569061489d565b915050610bcf565b50600090505b919050565b6000600354905090565b6060600060085467ffffffffffffffff811115610c9357610c92613435565b5b604051908082528060200260200182016040528015610ccc57816020015b610cb961324e565b815260200190600190039081610cb15790505b5090506000600190505b6008548111610ecf57600960008281526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610d6390614914565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8f90614914565b8015610ddc5780601f10610db157610100808354040283529160200191610ddc565b820191906000526020600020905b815481529060010190602001808311610dbf57829003601f168201915b50505050508152602001600282018054610df590614914565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2190614914565b8015610e6e5780601f10610e4357610100808354040283529160200191610e6e565b820191906000526020600020905b815481529060010190602001808311610e5157829003601f168201915b505050505081526020016003820160009054906101000a900460ff16151515158152505082600183610ea09190614bc3565b81518110610eb157610eb0614bf7565b5b60200260200101819052508080610ec79061489d565b915050610cd6565b508091505090565b6000610ee38433611457565b905060008103610f2a57836040517fcba6e977000000000000000000000000000000000000000000000000000000008152600401610f219190614426565b60405180910390fd5b60008382610f389190614c26565b9050610f48338683600187611f3f565b6000338285604051602001610f5f93929190614c5a565b6040516020818303038152906040529050610f7a8682612212565b505050505050565b600085519050845181141580610f99575083518114155b80610fa5575082518114155b80610fb1575081518114155b15610fe8576040517f263eee8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561108d5761108287828151811061100957611008614bf7565b5b602002602001015187838151811061102457611023614bf7565b5b602002602001015187848151811061103f5761103e614bf7565b5b602002602001015187858151811061105a57611059614bf7565b5b602002602001015187868151811061107557611074614bf7565b5b6020026020010151611752565b806001019050610feb565b50505050505050565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156110fe57508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15611144573383856040517f1a525b3200000000000000000000000000000000000000000000000000000000815260040161113b93929190614c98565b60405180910390fd5b611152838560008585611f3f565b811561118d5760008360008360405160200161117093929190614d0a565b604051602081830303815290604052905061118b8582612212565b505b50505050565b6000600260009054906101000a900460ff166111b05760126111b3565b60005b905090565b60096020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461120190614914565b80601f016020809104026020016040519081016040528092919081815260200182805461122d90614914565b801561127a5780601f1061124f5761010080835404028352916020019161127a565b820191906000526020600020905b81548152906001019060200180831161125d57829003601f168201915b50505050509080600201805461128f90614914565b80601f01602080910402602001604051908101604052809291908181526020018280546112bb90614914565b80156113085780601f106112dd57610100808354040283529160200191611308565b820191906000526020600020905b8154815290600101906020018083116112eb57829003601f168201915b5050505050908060030160009054906101000a900460ff16905084565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ac90614dba565b60405180910390fd5b6008548211156113fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f190614e26565b60405180910390fd5b6000600960008481526020019081526020016000209050818160020190816114229190614af1565b5060018160030160006101000a81548160ff021916908315150217905550505050565b606061145082612244565b9050919050565b60008273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114d357600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050611553565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b92915050565b60608282905067ffffffffffffffff81111561157857611577613435565b5b6040519080825280602002602001820160405280156115ab57816020015b60608152602001906001900390816115965790505b50905060005b838390508110156116ce576000803073ffffffffffffffffffffffffffffffffffffffff168686858181106115e9576115e8614bf7565b5b90506020028101906115fb9190614e55565b604051611609929190614eb8565b600060405180830381855af49150503d8060008114611644576040519150601f19603f3d011682016040523d82523d6000602084013e611649565b606091505b5091509150816116a25760008151146116655780518082602001fd5b826040517fb774c284000000000000000000000000000000000000000000000000000000008152600401611699919061363e565b60405180910390fd5b808484815181106116b6576116b5614bf7565b5b602002602001018190525082600101925050506115b1565b5092915050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6117266122e9565b6117306000612367565b565b600a6020528060005260406000206000915054906101000a900460ff1681565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117915761179033868561242b565b5b61179e8585858585612530565b5050505050565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801561180d57508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15611853573383856040517f98ce294500000000000000000000000000000000000000000000000000000000815260040161184a93929190614c98565b60405180910390fd5b600061185f8585611457565b90508281101561189b576040517f0ef76c3500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083820390506118b0858783600187611f3f565b60008582856040516020016118c793929190614c5a565b60405160208183030381529060405290506118e28782612212565b50505050505050565b6118f36122e9565b6000341461192d576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611937828261263e565b5050565b6000611946826116d5565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61197e6122e9565b600034146119b8576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6119c282826127af565b5050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611a79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7090614f1d565b60405180910390fd5b6001600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611b1b33670de0b6b3a764000060016040518060400160405280601b81526020017f4672656520746f6b656e20666f7220414d41207175657374696f6e000000000081525061287f565b565b611b2b338484600185611f3f565b6000338383604051602001611b4293929190614c5a565b6040516020818303038152906040529050611b5d8482612212565b50505050565b60085481565b6060611bb2600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061294e565b9050919050565b6060815167ffffffffffffffff811115611bd657611bd5613435565b5b604051908082528060200260200182016040528015611c0957816020015b6060815260200190600190039081611bf45790505b50905060005b8251811015611c6457611c3b838281518110611c2e57611c2d614bf7565b5b6020026020010151612244565b828281518110611c4e57611c4d614bf7565b5b6020026020010181905250806001019050611c0f565b50919050565b611c726122e9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611ce1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cd890614faf565b60405180910390fd5b611cea81612367565b50565b6000806000611d2869cee78b4094da8601109660b01b857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191661296f565b90506000611d3582612244565b90506014815114158015611d4b57506000815114155b15611d8d57806040517f42bfe79f000000000000000000000000000000000000000000000000000000008152600401611d849190614078565b60405180910390fd5b80611d9790615020565b60601c6001935093505050915091565b600063a918fa6b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611e015750611e00826129af565b5b9050919050565b600080611e1b6301ffc9a760e01b611ced565b509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611e5c576000915050611e6a565b611e668184612a10565b9150505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ed5576040517fd2d5ec3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ee483600084600085612acf565b611ef383600084600085612ad6565b611f0283600084600085612d1b565b6000338460008585604051602001611f1e959493929190615087565b6040516020818303038152906040529050611f398482612d22565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611fa5576040517f6355e76600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361200a576040517fdab7504700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008314612150576120e484600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612d5490919063ffffffff16565b50828573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167ff772a43bfdf4729b196e3fb54a818b91a2ca6c49d10b2e16278752f9f515c25d846040516121439190614078565b60405180910390a461220b565b6121a184600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612d8490919063ffffffff16565b508115158573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f0ebf5762d8855cbe012d2ca42fb33a81175e17c8a8751f8859931ba453bd4167846040516122029190614078565b60405180910390a45b5050505050565b612240827f386072cc5a58e61263b434c722725f21031cd06e7c552cfaa06db5de8a320dbc60001b83612db4565b5050565b606060016000838152602001908152602001600020805461226490614914565b80601f016020809104026020016040519081016040528092919081815260200182805461229090614914565b80156122dd5780601f106122b2576101008083540402835291602001916122dd565b820191906000526020600020905b8154815290600101906020018083116122c057829003601f168201915b50505050509050919050565b6122f1612e73565b73ffffffffffffffffffffffffffffffffffffffff1661230f61194d565b73ffffffffffffffffffffffffffffffffffffffff1614612365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161235c9061512d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008114806124ba57508082115b1561250257828185846040517ff3a6b6910000000000000000000000000000000000000000000000000000000081526004016124f9949392919061514d565b60405180910390fd5b61252a838584846125139190614bc3565b600060405180602001604052806000815250611f3f565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806125975750600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b156125ce576040517fd2d5ec3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6125db8585858585612acf565b6125e88585858585612ad6565b6125f58585858585612d1b565b60003386868685604051602001612610959493929190615087565b604051602081830303815290604052905061262b8682612d22565b612636858483612e7b565b505050505050565b7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b820361269a576040517f85c169bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b82036126f6576040517f76755b3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb360001b8203612752576040517f4ef6d7fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060016000848152602001908152602001600020908161277291906151ed565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516127a39190614078565b60405180910390a25050565b80518251146127ea576040517f3bcc897900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000825103612825576040517f97da5f9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b825181101561287a5761286f83828151811061284757612846614bf7565b5b602002602001015183838151811061286257612861614bf7565b5b602002602001015161263e565b806001019050612828565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036128e5576040517fd2d5ec3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6128f3600085858585612acf565b612901600085858585612ad6565b61290f600085858585612d1b565b600033600086868560405160200161292b959493929190615087565b6040516020818303038152906040529050612947858483612e7b565b5050505050565b6060600061295e83600001612fe1565b905060608190508092505050919050565b60008083600060f01b8460405160200161298b9392919061537a565b6040516020818303038152906040529050806129a6906153cc565b91505092915050565b600063629aa69460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612a095750612a088261303d565b5b9050919050565b6000806301ffc9a760e01b83604051602401612a2c91906146a5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d91506000519050828015612ab7575060208210155b8015612ac35750600081115b94505050505092915050565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603612b28578260036000828254612b1c9190614c26565b92505081905550612bfd565b6000600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015612bb5578086856040517f08d47949000000000000000000000000000000000000000000000000000000008152600401612bac93929190615433565b60405180910390fd5b838103600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603612c465782600360008282540392505081905550612c94565b82600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f3997e418d2cef0b3b0e907b1e39605c3f7d32dbd061e82ea5b4a770d46a160a6868686604051612d0c9392919061546a565b60405180910390a45050505050565b5050505050565b612d50827f429ac7a06903dbc9c13dfcb3c9d11df8194581fa047c96d7a4171fc7402958ea60001b83612db4565b5050565b6000612d7c836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6130a7565b905092915050565b6000612dac836000018373ffffffffffffffffffffffffffffffffffffffff1660001b613117565b905092915050565b612de4636bb56a1460e01b8473ffffffffffffffffffffffffffffffffffffffff16612a1090919063ffffffff16565b15612e6e578273ffffffffffffffffffffffffffffffffffffffff16636bb56a1483836040518363ffffffff1660e01b8152600401612e249291906154b7565b6000604051808303816000875af1158015612e43573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190612e6c9190615557565b505b505050565b600033905090565b612e8c83636bb56a1460e01b612a10565b15612f3d578273ffffffffffffffffffffffffffffffffffffffff16636bb56a147f20804611b3e2ea21c480dc465142210acf4a2485947541770ec1fb87dee4a55c60001b836040518363ffffffff1660e01b8152600401612eef9291906154b7565b6000604051808303816000875af1158015612f0e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190612f379190615557565b50612fdc565b81612fdb5760008373ffffffffffffffffffffffffffffffffffffffff163b14612f9e57826040517fa608fbb6000000000000000000000000000000000000000000000000000000008152600401612f959190614426565b60405180910390fd5b826040517f26c247f4000000000000000000000000000000000000000000000000000000008152600401612fd29190614426565b60405180910390fd5b5b505050565b60608160000180548060200260200160405190810160405280929190818152602001828054801561303157602002820191906000526020600020905b81548152602001906001019080831161301d575b50505050509050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006130b3838361322b565b61310c578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050613111565b600090505b92915050565b6000808360010160008481526020019081526020016000205490506000811461321f5760006001826131499190614bc3565b90506000600186600001805490506131619190614bc3565b90508181146131d057600086600001828154811061318257613181614bf7565b5b90600052602060002001549050808760000184815481106131a6576131a5614bf7565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806131e4576131e36155a0565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050613225565b60009150505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000151581525090565b600082825260208201905092915050565b60008082015250565b60006132b560048361328e565b91506132c08261329f565b602082019050919050565b600060208201905081810360008301526132e4816132a8565b9050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000613317838561328e565b93506133248385846132eb565b61332d836132fa565b840190509392505050565b6000602082019050818103600083015261335381848661330b565b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6133a581613370565b81146133b057600080fd5b50565b6000813590506133c28161339c565b92915050565b6000602082840312156133de576133dd613366565b5b60006133ec848285016133b3565b91505092915050565b60008115159050919050565b61340a816133f5565b82525050565b60006020820190506134256000830184613401565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61346d826132fa565b810181811067ffffffffffffffff8211171561348c5761348b613435565b5b80604052505050565b600061349f61335c565b90506134ab8282613464565b919050565b600067ffffffffffffffff8211156134cb576134ca613435565b5b6134d4826132fa565b9050602081019050919050565b60006134f46134ef846134b0565b613495565b9050828152602081018484840111156135105761350f613430565b5b61351b8482856132eb565b509392505050565b600082601f8301126135385761353761342b565b5b81356135488482602086016134e1565b91505092915050565b60006020828403121561356757613566613366565b5b600082013567ffffffffffffffff8111156135855761358461336b565b5b61359184828501613523565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006135c58261359a565b9050919050565b6135d5816135ba565b81146135e057600080fd5b50565b6000813590506135f2816135cc565b92915050565b60006020828403121561360e5761360d613366565b5b600061361c848285016135e3565b91505092915050565b6000819050919050565b61363881613625565b82525050565b6000602082019050613653600083018461362f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61368e816135ba565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156136ce5780820151818401526020810190506136b3565b60008484015250505050565b60006136e582613694565b6136ef818561369f565b93506136ff8185602086016136b0565b613708816132fa565b840191505092915050565b61371c816133f5565b82525050565b600060808301600083015161373a6000860182613685565b506020830151848203602086015261375282826136da565b9150506040830151848203604086015261376c82826136da565b91505060608301516137816060860182613713565b508091505092915050565b60006137988383613722565b905092915050565b6000602082019050919050565b60006137b882613659565b6137c28185613664565b9350836020820285016137d485613675565b8060005b8581101561381057848403895281516137f1858261378c565b94506137fc836137a0565b925060208a019950506001810190506137d8565b50829750879550505050505092915050565b6000602082019050818103600083015261383c81846137ad565b905092915050565b61384d81613625565b811461385857600080fd5b50565b60008135905061386a81613844565b92915050565b600067ffffffffffffffff82111561388b5761388a613435565b5b613894826132fa565b9050602081019050919050565b60006138b46138af84613870565b613495565b9050828152602081018484840111156138d0576138cf613430565b5b6138db8482856132eb565b509392505050565b600082601f8301126138f8576138f761342b565b5b81356139088482602086016138a1565b91505092915050565b60008060006060848603121561392a57613929613366565b5b6000613938868287016135e3565b93505060206139498682870161385b565b925050604084013567ffffffffffffffff81111561396a5761396961336b565b5b613976868287016138e3565b9150509250925092565b600067ffffffffffffffff82111561399b5761399a613435565b5b602082029050602081019050919050565b600080fd5b60006139c46139bf84613980565b613495565b905080838252602082019050602084028301858111156139e7576139e66139ac565b5b835b81811015613a1057806139fc88826135e3565b8452602084019350506020810190506139e9565b5050509392505050565b600082601f830112613a2f57613a2e61342b565b5b8135613a3f8482602086016139b1565b91505092915050565b600067ffffffffffffffff821115613a6357613a62613435565b5b602082029050602081019050919050565b6000613a87613a8284613a48565b613495565b90508083825260208201905060208402830185811115613aaa57613aa96139ac565b5b835b81811015613ad35780613abf888261385b565b845260208401935050602081019050613aac565b5050509392505050565b600082601f830112613af257613af161342b565b5b8135613b02848260208601613a74565b91505092915050565b600067ffffffffffffffff821115613b2657613b25613435565b5b602082029050602081019050919050565b613b40816133f5565b8114613b4b57600080fd5b50565b600081359050613b5d81613b37565b92915050565b6000613b76613b7184613b0b565b613495565b90508083825260208201905060208402830185811115613b9957613b986139ac565b5b835b81811015613bc25780613bae8882613b4e565b845260208401935050602081019050613b9b565b5050509392505050565b600082601f830112613be157613be061342b565b5b8135613bf1848260208601613b63565b91505092915050565b600067ffffffffffffffff821115613c1557613c14613435565b5b602082029050602081019050919050565b6000613c39613c3484613bfa565b613495565b90508083825260208201905060208402830185811115613c5c57613c5b6139ac565b5b835b81811015613ca357803567ffffffffffffffff811115613c8157613c8061342b565b5b808601613c8e89826138e3565b85526020850194505050602081019050613c5e565b5050509392505050565b600082601f830112613cc257613cc161342b565b5b8135613cd2848260208601613c26565b91505092915050565b600080600080600060a08688031215613cf757613cf6613366565b5b600086013567ffffffffffffffff811115613d1557613d1461336b565b5b613d2188828901613a1a565b955050602086013567ffffffffffffffff811115613d4257613d4161336b565b5b613d4e88828901613a1a565b945050604086013567ffffffffffffffff811115613d6f57613d6e61336b565b5b613d7b88828901613add565b935050606086013567ffffffffffffffff811115613d9c57613d9b61336b565b5b613da888828901613bcc565b925050608086013567ffffffffffffffff811115613dc957613dc861336b565b5b613dd588828901613cad565b9150509295509295909350565b60008060008060808587031215613dfc57613dfb613366565b5b6000613e0a878288016135e3565b9450506020613e1b878288016135e3565b9350506040613e2c87828801613b4e565b925050606085013567ffffffffffffffff811115613e4d57613e4c61336b565b5b613e59878288016138e3565b91505092959194509250565b600060ff82169050919050565b613e7b81613e65565b82525050565b6000602082019050613e966000830184613e72565b92915050565b600060208284031215613eb257613eb1613366565b5b6000613ec08482850161385b565b91505092915050565b613ed2816135ba565b82525050565b600082825260208201905092915050565b6000613ef482613694565b613efe8185613ed8565b9350613f0e8185602086016136b0565b613f17816132fa565b840191505092915050565b6000608082019050613f376000830187613ec9565b8181036020830152613f498186613ee9565b90508181036040830152613f5d8185613ee9565b9050613f6c6060830184613401565b95945050505050565b60008060408385031215613f8c57613f8b613366565b5b6000613f9a8582860161385b565b925050602083013567ffffffffffffffff811115613fbb57613fba61336b565b5b613fc785828601613523565b9150509250929050565b6000819050919050565b613fe481613fd1565b8114613fef57600080fd5b50565b60008135905061400181613fdb565b92915050565b60006020828403121561401d5761401c613366565b5b600061402b84828501613ff2565b91505092915050565b600081519050919050565b600061404a82614034565b614054818561328e565b93506140648185602086016136b0565b61406d816132fa565b840191505092915050565b60006020820190508181036000830152614092818461403f565b905092915050565b600080604083850312156140b1576140b0613366565b5b60006140bf858286016135e3565b92505060206140d0858286016135e3565b9150509250929050565b600080fd5b60008083601f8401126140f5576140f461342b565b5b8235905067ffffffffffffffff811115614112576141116140da565b5b60208301915083602082028301111561412e5761412d6139ac565b5b9250929050565b6000806020838503121561414c5761414b613366565b5b600083013567ffffffffffffffff81111561416a5761416961336b565b5b614176858286016140df565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006141ca82614034565b6141d481856141ae565b93506141e48185602086016136b0565b6141ed816132fa565b840191505092915050565b600061420483836141bf565b905092915050565b6000602082019050919050565b600061422482614182565b61422e818561418d565b9350836020820285016142408561419e565b8060005b8581101561427c578484038952815161425d85826141f8565b94506142688361420c565b925060208a01995050600181019050614244565b50829750879550505050505092915050565b600060208201905081810360008301526142a88184614219565b905092915050565b600080600080600060a086880312156142cc576142cb613366565b5b60006142da888289016135e3565b95505060206142eb888289016135e3565b94505060406142fc8882890161385b565b935050606061430d88828901613b4e565b925050608086013567ffffffffffffffff81111561432e5761432d61336b565b5b61433a888289016138e3565b9150509295509295909350565b6000806000806080858703121561436157614360613366565b5b600061436f878288016135e3565b9450506020614380878288016135e3565b93505060406143918782880161385b565b925050606085013567ffffffffffffffff8111156143b2576143b161336b565b5b6143be878288016138e3565b91505092959194509250565b600080604083850312156143e1576143e0613366565b5b60006143ef85828601613ff2565b925050602083013567ffffffffffffffff8111156144105761440f61336b565b5b61441c858286016138e3565b9150509250929050565b600060208201905061443b6000830184613ec9565b92915050565b600067ffffffffffffffff82111561445c5761445b613435565b5b602082029050602081019050919050565b600061448061447b84614441565b613495565b905080838252602082019050602084028301858111156144a3576144a26139ac565b5b835b818110156144cc57806144b88882613ff2565b8452602084019350506020810190506144a5565b5050509392505050565b600082601f8301126144eb576144ea61342b565b5b81356144fb84826020860161446d565b91505092915050565b6000806040838503121561451b5761451a613366565b5b600083013567ffffffffffffffff8111156145395761453861336b565b5b614545858286016144d6565b925050602083013567ffffffffffffffff8111156145665761456561336b565b5b61457285828601613cad565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006145b48383613685565b60208301905092915050565b6000602082019050919050565b60006145d88261457c565b6145e28185614587565b93506145ed83614598565b8060005b8381101561461e57815161460588826145a8565b9750614610836145c0565b9250506001810190506145f1565b5085935050505092915050565b6000602082019050818103600083015261464581846145cd565b905092915050565b60006020828403121561466357614662613366565b5b600082013567ffffffffffffffff8111156146815761468061336b565b5b61468d848285016144d6565b91505092915050565b61469f81613370565b82525050565b60006020820190506146ba6000830184614696565b92915050565b600081905092915050565b60006146d783856146c0565b93506146e48385846132eb565b82840190509392505050565b60008160601b9050919050565b6000614708826146f0565b9050919050565b600061471a826146fd565b9050919050565b61473261472d826135ba565b61470f565b82525050565b6000819050919050565b61475361474e82613625565b614738565b82525050565b60006147668286886146cb565b91506147728285614721565b6014820191506147828284614742565b60208201915081905095945050505050565b600061479f82614034565b6147a981856146c0565b93506147b98185602086016136b0565b80840191505092915050565b60006147d18284614794565b915081905092915050565b7f596f75206e656564206120746f6b656e20746f207375626d697420612071756560008201527f7374696f6e000000000000000000000000000000000000000000000000000000602082015250565b6000614838602583613ed8565b9150614843826147dc565b604082019050919050565b600060208201905081810360008301526148678161482b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006148a882613625565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036148da576148d961486e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061492c57607f821691505b60208210810361493f5761493e6148e5565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026149a77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261496a565b6149b1868361496a565b95508019841693508086168417925050509392505050565b6000819050919050565b60006149ee6149e96149e484613625565b6149c9565b613625565b9050919050565b6000819050919050565b614a08836149d3565b614a1c614a14826149f5565b848454614977565b825550505050565b600090565b614a31614a24565b614a3c8184846149ff565b505050565b5b81811015614a6057614a55600082614a29565b600181019050614a42565b5050565b601f821115614aa557614a7681614945565b614a7f8461495a565b81016020851015614a8e578190505b614aa2614a9a8561495a565b830182614a41565b50505b505050565b600082821c905092915050565b6000614ac860001984600802614aaa565b1980831691505092915050565b6000614ae18383614ab7565b9150826002028217905092915050565b614afa82613694565b67ffffffffffffffff811115614b1357614b12613435565b5b614b1d8254614914565b614b28828285614a64565b600060209050601f831160018114614b5b5760008415614b49578287015190505b614b538582614ad5565b865550614bbb565b601f198416614b6986614945565b60005b82811015614b9157848901518255600182019150602085019450602081019050614b6c565b86831015614bae5784890151614baa601f891682614ab7565b8355505b6001600288020188555050505b505050505050565b6000614bce82613625565b9150614bd983613625565b9250828203905081811115614bf157614bf061486e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000614c3182613625565b9150614c3c83613625565b9250828201905080821115614c5457614c5361486e565b5b92915050565b6000606082019050614c6f6000830186613ec9565b614c7c602083018561362f565b8181036040830152614c8e818461403f565b9050949350505050565b6000606082019050614cad6000830186613ec9565b614cba6020830185613ec9565b614cc76040830184613ec9565b949350505050565b6000819050919050565b6000614cf4614cef614cea84614ccf565b6149c9565b613e65565b9050919050565b614d0481614cd9565b82525050565b6000606082019050614d1f6000830186613ec9565b614d2c6020830185614cfb565b8181036040830152614d3e818461403f565b9050949350505050565b7f4f6e6c79207468652070726f66696c65206f776e65722063616e20616e73776560008201527f72207175657374696f6e73000000000000000000000000000000000000000000602082015250565b6000614da4602b83613ed8565b9150614daf82614d48565b604082019050919050565b60006020820190508181036000830152614dd381614d97565b9050919050565b7f496e76616c6964207175657374696f6e20494400000000000000000000000000600082015250565b6000614e10601383613ed8565b9150614e1b82614dda565b602082019050919050565b60006020820190508181036000830152614e3f81614e03565b9050919050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112614e7257614e71614e46565b5b80840192508235915067ffffffffffffffff821115614e9457614e93614e4b565b5b602083019250600182023603831315614eb057614eaf614e50565b5b509250929050565b6000614ec58284866146cb565b91508190509392505050565b7f416c726561647920636c61696d65642061206672656520746f6b656e00000000600082015250565b6000614f07601c83613ed8565b9150614f1282614ed1565b602082019050919050565b60006020820190508181036000830152614f3681614efa565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000614f99602683613ed8565b9150614fa482614f3d565b604082019050919050565b60006020820190508181036000830152614fc881614f8c565b9050919050565b6000819050602082019050919050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b60006150178251614fdf565b80915050919050565b600061502b82614034565b8261503584614fcf565b90506150408161500b565b925060148210156150805761507b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360140360080261496a565b831692505b5050919050565b600060a08201905061509c6000830188613ec9565b6150a96020830187613ec9565b6150b66040830186613ec9565b6150c3606083018561362f565b81810360808301526150d5818461403f565b90509695505050505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000615117602083613ed8565b9150615122826150e1565b602082019050919050565b600060208201905081810360008301526151468161510a565b9050919050565b60006080820190506151626000830187613ec9565b61516f602083018661362f565b61517c6040830185613ec9565b615189606083018461362f565b95945050505050565b60008190508160005260206000209050919050565b601f8211156151e8576151b981615192565b6151c28461495a565b810160208510156151d1578190505b6151e56151dd8561495a565b830182614a41565b50505b505050565b6151f682614034565b67ffffffffffffffff81111561520f5761520e613435565b5b6152198254614914565b6152248282856151a7565b600060209050601f8311600181146152575760008415615245578287015190505b61524f8582614ad5565b8655506152b7565b601f19841661526586615192565b60005b8281101561528d57848901518255600182019150602085019450602081019050615268565b868310156152aa57848901516152a6601f891682614ab7565b8355505b6001600288020188555050505b505050505050565b60007fffffffffffffffffffff0000000000000000000000000000000000000000000082169050919050565b6000819050919050565b615306615301826152bf565b6152eb565b82525050565b60007fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b61535361534e8261530c565b615338565b82525050565b6000819050919050565b61537461536f82614fdf565b615359565b82525050565b600061538682866152f5565b600a820191506153968285615342565b6002820191506153a68284615363565b601482019150819050949350505050565b60006153c38251613fd1565b80915050919050565b60006153d782614034565b826153e184614fcf565b90506153ec816153b7565b9250602082101561542c576154277fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261496a565b831692505b5050919050565b6000606082019050615448600083018661362f565b6154556020830185613ec9565b615462604083018461362f565b949350505050565b600060608201905061547f600083018661362f565b61548c6020830185613401565b818103604083015261549e818461403f565b9050949350505050565b6154b181613fd1565b82525050565b60006040820190506154cc60008301856154a8565b81810360208301526154de818461403f565b90509392505050565b60006154fa6154f584613870565b613495565b90508281526020810184848401111561551657615515613430565b5b6155218482856136b0565b509392505050565b600082601f83011261553e5761553d61342b565b5b815161554e8482602086016154e7565b91505092915050565b60006020828403121561556d5761556c613366565b5b600082015167ffffffffffffffff81111561558b5761558a61336b565b5b61559784828501615529565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220248342bc74c31b7a9eb0d14d2dbc91defe5354a7b4cb2ea010d1c085bb9b0c1964736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5EFA CODESIZE SUB DUP1 PUSH3 0x5EFA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46726565205175657374696F6E20546F6B656E00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4651540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 PUSH1 0x0 DUP1 DUP5 DUP5 DUP5 DUP5 DUP2 PUSH3 0xCC PUSH3 0xC0 PUSH3 0x2DA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2E2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x133 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1AD8836C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x144 DUP2 PUSH3 0x2E2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1AF PUSH32 0xEAFEC4D89FA9619884B60000A4D96624A38F7AC2D8D9A604ECF07C12C77E480C PUSH1 0x0 SHL PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xA4D9662400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH3 0x3A6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1E4 PUSH32 0xDEBA1E292F8BA88238E10AB3C7F88BD4BE4FAC56CAD5194B6ECCEAF653468AF1 PUSH1 0x0 SHL DUP6 PUSH3 0x3A6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x219 PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 PUSH1 0x0 SHL DUP5 PUSH3 0x3A6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x26F PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 PUSH1 0x0 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x254 SWAP2 SWAP1 PUSH3 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH3 0x3A6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x8E5 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH3 0x3C8 SWAP2 SWAP1 PUSH3 0x74B JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH3 0x3FB SWAP2 SWAP1 PUSH3 0x8C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x439 DUP3 PUSH3 0x40C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x44B DUP2 PUSH3 0x42C JUMP JUMPDEST DUP2 EQ PUSH3 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x46B DUP2 PUSH3 0x440 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x48A JUMPI PUSH3 0x489 PUSH3 0x407 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x49A DUP5 DUP3 DUP6 ADD PUSH3 0x45A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4B8 DUP2 PUSH3 0x4A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x4D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x4AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x55D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x573 JUMPI PUSH3 0x572 PUSH3 0x515 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x5DD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x59E JUMP JUMPDEST PUSH3 0x5E9 DUP7 DUP4 PUSH3 0x59E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x62C PUSH3 0x626 PUSH3 0x620 DUP5 PUSH3 0x4A3 JUMP JUMPDEST PUSH3 0x601 JUMP JUMPDEST PUSH3 0x4A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x648 DUP4 PUSH3 0x60B JUMP JUMPDEST PUSH3 0x660 PUSH3 0x657 DUP3 PUSH3 0x633 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x5AB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x677 PUSH3 0x668 JUMP JUMPDEST PUSH3 0x684 DUP2 DUP5 DUP5 PUSH3 0x63D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x6AC JUMPI PUSH3 0x6A0 PUSH1 0x0 DUP3 PUSH3 0x66D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x68A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x6FB JUMPI PUSH3 0x6C5 DUP2 PUSH3 0x579 JUMP JUMPDEST PUSH3 0x6D0 DUP5 PUSH3 0x58E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x6E0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x6F8 PUSH3 0x6EF DUP6 PUSH3 0x58E JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x689 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x720 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x700 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x73B DUP4 DUP4 PUSH3 0x70D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x756 DUP3 PUSH3 0x4DB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x772 JUMPI PUSH3 0x771 PUSH3 0x4E6 JUMP JUMPDEST JUMPDEST PUSH3 0x77E DUP3 SLOAD PUSH3 0x544 JUMP JUMPDEST PUSH3 0x78B DUP3 DUP3 DUP6 PUSH3 0x6B0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x7C3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x7AE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x7BA DUP6 DUP3 PUSH3 0x72D JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x82A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x7D3 DUP7 PUSH3 0x579 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x7FD JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x7D6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x81D JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x819 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x70D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x863 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x846 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x88D DUP3 PUSH3 0x4DB JUMP JUMPDEST PUSH3 0x899 DUP2 DUP6 PUSH3 0x832 JUMP JUMPDEST SWAP4 POP PUSH3 0x8AB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x843 JUMP JUMPDEST PUSH3 0x8B6 DUP2 PUSH3 0x86F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x8DD DUP2 DUP5 PUSH3 0x880 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5605 DUP1 PUSH3 0x8F5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0x97902421 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB7B064A8 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB7B064A8 EQ PUSH2 0x760 JUMPI DUP1 PUSH4 0xD72FC29A EQ PUSH2 0x78B JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x7C8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x805 JUMPI PUSH2 0x24B JUMP JUMPDEST DUP1 PUSH4 0x97902421 EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0xAC0F05F6 EQ PUSH2 0x6F5 JUMPI DUP1 PUSH4 0xADCEA55A EQ PUSH2 0x720 JUMPI DUP1 PUSH4 0xB49506FD EQ PUSH2 0x737 JUMPI PUSH2 0x24B JUMP JUMPDEST DUP1 PUSH4 0x78381670 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x78381670 EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0x821DC5D1 EQ PUSH2 0x671 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6AE JUMPI PUSH2 0x24B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0x73A6F6A6 EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0x760D9BBA EQ PUSH2 0x603 JUMPI PUSH2 0x24B JUMP JUMPDEST DUP1 PUSH4 0x30D0DC37 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x54F6127F GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x65AEAA95 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x6963D438 EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x572 JUMPI PUSH2 0x24B JUMP JUMPDEST DUP1 PUSH4 0x30D0DC37 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0x31B1B978 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x447E52A0 EQ PUSH2 0x492 JUMPI PUSH2 0x24B JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x2AF9338E EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x2BC1DA82 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x2D7667C9 EQ PUSH2 0x3D5 JUMPI PUSH2 0x24B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x99EE6F2 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xF86C618 EQ PUSH2 0x319 JUMPI PUSH2 0x24B JUMP JUMPDEST CALLDATASIZE PUSH2 0x24B JUMPI PUSH1 0x0 CALLVALUE SUB PUSH2 0x219 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE5099EE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x210 SWAP1 PUSH2 0x32CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x388F5ADC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO PUSH2 0x29C JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE5099EE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP3 SWAP2 SWAP1 PUSH2 0x3338 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A6 DUP4 DUP4 PUSH2 0x82E JUMP JUMPDEST SWAP1 POP SWAP2 POP POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x33C8 JUMP JUMPDEST PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x3410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x3551 JUMP JUMPDEST PUSH2 0xA1D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x3410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36B PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x396 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x3822 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x3911 JUMP JUMPDEST PUSH2 0xED7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x3CDB JUMP JUMPDEST PUSH2 0xF82 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x425 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x3DE2 JUMP JUMPDEST PUSH2 0x1096 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43C PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x3E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x3E9C JUMP JUMPDEST PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x489 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x3F75 JUMP JUMPDEST PUSH2 0x1325 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x4007 JUMP JUMPDEST PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x4078 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51A SWAP2 SWAP1 PUSH2 0x409A JUMP JUMPDEST PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x557 SWAP2 SWAP1 PUSH2 0x4135 JUMP JUMPDEST PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x569 SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x599 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C4 PUSH2 0x171E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0x3410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x625 SWAP2 SWAP1 PUSH2 0x42B0 JUMP JUMPDEST PUSH2 0x1752 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x653 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x64E SWAP2 SWAP1 PUSH2 0x4347 JUMP JUMPDEST PUSH2 0x17A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x66F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x43CA JUMP JUMPDEST PUSH2 0x18EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x698 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x693 SWAP2 SWAP1 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x193B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C3 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D0 SWAP2 SWAP1 PUSH2 0x4426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x4504 JUMP JUMPDEST PUSH2 0x1976 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70A PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x717 SWAP2 SWAP1 PUSH2 0x4426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x735 PUSH2 0x19EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x75E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x759 SWAP2 SWAP1 PUSH2 0x3911 JUMP JUMPDEST PUSH2 0x1B1D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x775 PUSH2 0x1B63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x782 SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x1B69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0x462B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7EA SWAP2 SWAP1 PUSH2 0x464D JUMP JUMPDEST PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x827 SWAP2 SWAP1 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x1C6A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x85F PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1CED JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8F7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x40 MLOAD PUSH32 0xBB370B2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x46A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE DUP8 DUP8 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x929 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4759 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x945 SWAP2 SWAP1 PUSH2 0x47C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x987 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x99D JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x9A6 JUMP JUMPDEST DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xC52D6008 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA06 JUMPI POP PUSH2 0xA05 DUP3 PUSH2 0x1DA7 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xA16 JUMPI POP PUSH2 0xA15 DUP3 PUSH2 0x1E08 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0xA2F CALLER PUSH2 0x16D5 JUMP JUMPDEST LT ISZERO PUSH2 0xA70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA67 SWAP1 PUSH2 0x484E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA83 SWAP1 PUSH2 0x489D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xB42 SWAP2 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xB58 SWAP2 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0xBC4 CALLER PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4275726E20746F6B656E20746F207375626D69742061207175657374696F6E00 DUP2 MSTORE POP PUSH2 0x1E6F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 GT PUSH2 0xC5E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC4B JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xC64 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xC56 SWAP1 PUSH2 0x489D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBCF JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC93 JUMPI PUSH2 0xC92 PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCCC JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xCB9 PUSH2 0x324E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xCB1 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 GT PUSH2 0xECF JUMPI PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xD63 SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD8F SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDDC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDB1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDDC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDBF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xDF5 SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE21 SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE6E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE43 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE6E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE51 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP3 PUSH1 0x1 DUP4 PUSH2 0xEA0 SWAP2 SWAP1 PUSH2 0x4BC3 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xEB1 JUMPI PUSH2 0xEB0 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xEC7 SWAP1 PUSH2 0x489D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCD6 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE3 DUP5 CALLER PUSH2 0x1457 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0xF2A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xCBA6E97700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF21 SWAP2 SWAP1 PUSH2 0x4426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP3 PUSH2 0xF38 SWAP2 SWAP1 PUSH2 0x4C26 JUMP JUMPDEST SWAP1 POP PUSH2 0xF48 CALLER DUP7 DUP4 PUSH1 0x1 DUP8 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x0 CALLER DUP3 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF5F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0xF7A DUP7 DUP3 PUSH2 0x2212 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD SWAP1 POP DUP5 MLOAD DUP2 EQ ISZERO DUP1 PUSH2 0xF99 JUMPI POP DUP4 MLOAD DUP2 EQ ISZERO JUMPDEST DUP1 PUSH2 0xFA5 JUMPI POP DUP3 MLOAD DUP2 EQ ISZERO JUMPDEST DUP1 PUSH2 0xFB1 JUMPI POP DUP2 MLOAD DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xFE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x263EEE8D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x108D JUMPI PUSH2 0x1082 DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1009 JUMPI PUSH2 0x1008 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1024 JUMPI PUSH2 0x1023 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x103F JUMPI PUSH2 0x103E PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x105A JUMPI PUSH2 0x1059 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1075 JUMPI PUSH2 0x1074 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1752 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xFEB JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x10FE JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1144 JUMPI CALLER DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x1A525B3200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1152 DUP4 DUP6 PUSH1 0x0 DUP6 DUP6 PUSH2 0x1F3F JUMP JUMPDEST DUP2 ISZERO PUSH2 0x118D JUMPI PUSH1 0x0 DUP4 PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1170 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4D0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x118B DUP6 DUP3 PUSH2 0x2212 JUMP JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11B0 JUMPI PUSH1 0x12 PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1201 SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x122D SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x127A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x124F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x127A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x125D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x128F SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12BB SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1308 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1308 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AC SWAP1 PUSH2 0x4DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP3 GT ISZERO PUSH2 0x13FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F1 SWAP1 PUSH2 0x4E26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1422 SWAP2 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1450 DUP3 PUSH2 0x2244 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14D3 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1553 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1578 JUMPI PUSH2 0x1577 PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15AB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1596 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x16CE JUMPI PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x15E9 JUMPI PUSH2 0x15E8 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x15FB SWAP2 SWAP1 PUSH2 0x4E55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1609 SWAP3 SWAP2 SWAP1 PUSH2 0x4EB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1644 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x16A2 JUMPI PUSH1 0x0 DUP2 MLOAD EQ PUSH2 0x1665 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH32 0xB774C28400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1699 SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x16B6 JUMPI PUSH2 0x16B5 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0x15B1 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1726 PUSH2 0x22E9 JUMP JUMPDEST PUSH2 0x1730 PUSH1 0x0 PUSH2 0x2367 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1791 JUMPI PUSH2 0x1790 CALLER DUP7 DUP6 PUSH2 0x242B JUMP JUMPDEST JUMPDEST PUSH2 0x179E DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2530 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x180D JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1853 JUMPI CALLER DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x98CE294500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x185F DUP6 DUP6 PUSH2 0x1457 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x189B JUMPI PUSH1 0x40 MLOAD PUSH32 0xEF76C3500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP3 SUB SWAP1 POP PUSH2 0x18B0 DUP6 DUP8 DUP4 PUSH1 0x1 DUP8 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x18E2 DUP8 DUP3 PUSH2 0x2212 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18F3 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x192D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1937 DUP3 DUP3 PUSH2 0x263E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1946 DUP3 PUSH2 0x16D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x197E PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x19B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19C2 DUP3 DUP3 PUSH2 0x27AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A70 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1B1B CALLER PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4672656520746F6B656E20666F7220414D41207175657374696F6E0000000000 DUP2 MSTORE POP PUSH2 0x287F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1B2B CALLER DUP5 DUP5 PUSH1 0x1 DUP6 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x0 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B42 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1B5D DUP5 DUP3 PUSH2 0x2212 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1BB2 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x294E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BD6 JUMPI PUSH2 0x1BD5 PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C09 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1BF4 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1C64 JUMPI PUSH2 0x1C3B DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C2E JUMPI PUSH2 0x1C2D PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2244 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C4E JUMPI PUSH2 0x1C4D PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1C0F JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C72 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD8 SWAP1 PUSH2 0x4FAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CEA DUP2 PUSH2 0x2367 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1D28 PUSH10 0xCEE78B4094DA86011096 PUSH1 0xB0 SHL DUP6 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH2 0x296F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D35 DUP3 PUSH2 0x2244 JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1D4B JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x1D8D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x42BFE79F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D84 SWAP2 SWAP1 PUSH2 0x4078 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1D97 SWAP1 PUSH2 0x5020 JUMP JUMPDEST PUSH1 0x60 SHR PUSH1 0x1 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xA918FA6B PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1E01 JUMPI POP PUSH2 0x1E00 DUP3 PUSH2 0x29AF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E1B PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x1CED JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E5C JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1E6A JUMP JUMPDEST PUSH2 0x1E66 DUP2 DUP5 PUSH2 0x2A10 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ED5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD2D5EC3000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EE4 DUP4 PUSH1 0x0 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2ACF JUMP JUMPDEST PUSH2 0x1EF3 DUP4 PUSH1 0x0 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2AD6 JUMP JUMPDEST PUSH2 0x1F02 DUP4 PUSH1 0x0 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2D1B JUMP JUMPDEST PUSH1 0x0 CALLER DUP5 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F1E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5087 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1F39 DUP5 DUP3 PUSH2 0x2D22 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6355E76600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x200A JUMPI PUSH1 0x40 MLOAD PUSH32 0xDAB7504700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 EQ PUSH2 0x2150 JUMPI PUSH2 0x20E4 DUP5 PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2D54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF772A43BFDF4729B196E3FB54A818B91A2CA6C49D10B2E16278752F9F515C25D DUP5 PUSH1 0x40 MLOAD PUSH2 0x2143 SWAP2 SWAP1 PUSH2 0x4078 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x21A1 DUP5 PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2D84 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP2 ISZERO ISZERO DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEBF5762D8855CBE012D2CA42FB33A81175E17C8A8751F8859931BA453BD4167 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2202 SWAP2 SWAP1 PUSH2 0x4078 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2240 DUP3 PUSH32 0x386072CC5A58E61263B434C722725F21031CD06E7C552CFAA06DB5DE8A320DBC PUSH1 0x0 SHL DUP4 PUSH2 0x2DB4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x2264 SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2290 SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x22B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x22DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22F1 PUSH2 0x2E73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x230F PUSH2 0x194D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2365 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235C SWAP1 PUSH2 0x512D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x24BA JUMPI POP DUP1 DUP3 GT JUMPDEST ISZERO PUSH2 0x2502 JUMPI DUP3 DUP2 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH32 0xF3A6B69100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24F9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x514D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x252A DUP4 DUP6 DUP5 DUP5 PUSH2 0x2513 SWAP2 SWAP1 PUSH2 0x4BC3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1F3F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2597 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x25CE JUMPI PUSH1 0x40 MLOAD PUSH32 0xD2D5EC3000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25DB DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2ACF JUMP JUMPDEST PUSH2 0x25E8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2AD6 JUMP JUMPDEST PUSH2 0x25F5 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2D1B JUMP JUMPDEST PUSH1 0x0 CALLER DUP7 DUP7 DUP7 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2610 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5087 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x262B DUP7 DUP3 PUSH2 0x2D22 JUMP JUMPDEST PUSH2 0x2636 DUP6 DUP5 DUP4 PUSH2 0x2E7B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0xDEBA1E292F8BA88238E10AB3C7F88BD4BE4FAC56CAD5194B6ECCEAF653468AF1 PUSH1 0x0 SHL DUP3 SUB PUSH2 0x269A JUMPI PUSH1 0x40 MLOAD PUSH32 0x85C169BD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 PUSH1 0x0 SHL DUP3 SUB PUSH2 0x26F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x76755B3800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 PUSH1 0x0 SHL DUP3 SUB PUSH2 0x2752 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4EF6D7FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x2772 SWAP2 SWAP1 PUSH2 0x51ED JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x27A3 SWAP2 SWAP1 PUSH2 0x4078 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x27EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x3BCC897900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD SUB PUSH2 0x2825 JUMPI PUSH1 0x40 MLOAD PUSH32 0x97DA5F9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x287A JUMPI PUSH2 0x286F DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2847 JUMPI PUSH2 0x2846 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2862 JUMPI PUSH2 0x2861 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x263E JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2828 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x28E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD2D5EC3000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28F3 PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2ACF JUMP JUMPDEST PUSH2 0x2901 PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2AD6 JUMP JUMPDEST PUSH2 0x290F PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2D1B JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 DUP7 DUP7 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x292B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5087 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x2947 DUP6 DUP5 DUP4 PUSH2 0x2E7B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x295E DUP4 PUSH1 0x0 ADD PUSH2 0x2FE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 PUSH1 0xF0 SHL DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x298B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x537A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x29A6 SWAP1 PUSH2 0x53CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x629AA694 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2A09 JUMPI POP PUSH2 0x2A08 DUP3 PUSH2 0x303D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A2C SWAP2 SWAP1 PUSH2 0x46A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP6 MLOAD PUSH1 0x20 DUP8 ADD DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x2AB7 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2AC3 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B28 JUMPI DUP3 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2B1C SWAP2 SWAP1 PUSH2 0x4C26 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2BFD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2BB5 JUMPI DUP1 DUP7 DUP6 PUSH1 0x40 MLOAD PUSH32 0x8D4794900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BAC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP2 SUB PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2C46 JUMPI DUP3 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2C94 JUMP JUMPDEST DUP3 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3997E418D2CEF0B3B0E907B1E39605C3F7D32DBD061E82EA5B4A770D46A160A6 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x2D0C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x546A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2D50 DUP3 PUSH32 0x429AC7A06903DBC9C13DFCB3C9D11DF8194581FA047C96D7A4171FC7402958EA PUSH1 0x0 SHL DUP4 PUSH2 0x2DB4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D7C DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x30A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DAC DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x3117 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DE4 PUSH4 0x6BB56A14 PUSH1 0xE0 SHL DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A10 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x2E6E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E24 SWAP3 SWAP2 SWAP1 PUSH2 0x54B7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E6C SWAP2 SWAP1 PUSH2 0x5557 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2E8C DUP4 PUSH4 0x6BB56A14 PUSH1 0xE0 SHL PUSH2 0x2A10 JUMP JUMPDEST ISZERO PUSH2 0x2F3D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 PUSH32 0x20804611B3E2EA21C480DC465142210ACF4A2485947541770EC1FB87DEE4A55C PUSH1 0x0 SHL DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EEF SWAP3 SWAP2 SWAP1 PUSH2 0x54B7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F0E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F37 SWAP2 SWAP1 PUSH2 0x5557 JUMP JUMPDEST POP PUSH2 0x2FDC JUMP JUMPDEST DUP2 PUSH2 0x2FDB JUMPI PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x2F9E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA608FBB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F95 SWAP2 SWAP1 PUSH2 0x4426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH32 0x26C247F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD2 SWAP2 SWAP1 PUSH2 0x4426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x3031 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x301D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30B3 DUP4 DUP4 PUSH2 0x322B JUMP JUMPDEST PUSH2 0x310C JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x3111 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x321F JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x3149 SWAP2 SWAP1 PUSH2 0x4BC3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x3161 SWAP2 SWAP1 PUSH2 0x4BC3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x31D0 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3182 JUMPI PUSH2 0x3181 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x31A6 JUMPI PUSH2 0x31A5 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x31E4 JUMPI PUSH2 0x31E3 PUSH2 0x55A0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3225 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B5 PUSH1 0x4 DUP4 PUSH2 0x328E JUMP JUMPDEST SWAP2 POP PUSH2 0x32C0 DUP3 PUSH2 0x329F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32E4 DUP2 PUSH2 0x32A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3317 DUP4 DUP6 PUSH2 0x328E JUMP JUMPDEST SWAP4 POP PUSH2 0x3324 DUP4 DUP6 DUP5 PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x332D DUP4 PUSH2 0x32FA JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3353 DUP2 DUP5 DUP7 PUSH2 0x330B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33A5 DUP2 PUSH2 0x3370 JUMP JUMPDEST DUP2 EQ PUSH2 0x33B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33C2 DUP2 PUSH2 0x339C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33DE JUMPI PUSH2 0x33DD PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33EC DUP5 DUP3 DUP6 ADD PUSH2 0x33B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x340A DUP2 PUSH2 0x33F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3425 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3401 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x346D DUP3 PUSH2 0x32FA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x348C JUMPI PUSH2 0x348B PUSH2 0x3435 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x349F PUSH2 0x335C JUMP JUMPDEST SWAP1 POP PUSH2 0x34AB DUP3 DUP3 PUSH2 0x3464 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x34CB JUMPI PUSH2 0x34CA PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH2 0x34D4 DUP3 PUSH2 0x32FA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34F4 PUSH2 0x34EF DUP5 PUSH2 0x34B0 JUMP JUMPDEST PUSH2 0x3495 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3510 JUMPI PUSH2 0x350F PUSH2 0x3430 JUMP JUMPDEST JUMPDEST PUSH2 0x351B DUP5 DUP3 DUP6 PUSH2 0x32EB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3538 JUMPI PUSH2 0x3537 PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3548 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x34E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3567 JUMPI PUSH2 0x3566 PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3585 JUMPI PUSH2 0x3584 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3591 DUP5 DUP3 DUP6 ADD PUSH2 0x3523 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C5 DUP3 PUSH2 0x359A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35D5 DUP2 PUSH2 0x35BA JUMP JUMPDEST DUP2 EQ PUSH2 0x35E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x35F2 DUP2 PUSH2 0x35CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x360E JUMPI PUSH2 0x360D PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x361C DUP5 DUP3 DUP6 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3638 DUP2 PUSH2 0x3625 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3653 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x362F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x368E DUP2 PUSH2 0x35BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x36CE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36E5 DUP3 PUSH2 0x3694 JUMP JUMPDEST PUSH2 0x36EF DUP2 DUP6 PUSH2 0x369F JUMP JUMPDEST SWAP4 POP PUSH2 0x36FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36B0 JUMP JUMPDEST PUSH2 0x3708 DUP2 PUSH2 0x32FA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x371C DUP2 PUSH2 0x33F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x373A PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x3685 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x3752 DUP3 DUP3 PUSH2 0x36DA JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x376C DUP3 DUP3 PUSH2 0x36DA JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x3781 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x3713 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3798 DUP4 DUP4 PUSH2 0x3722 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37B8 DUP3 PUSH2 0x3659 JUMP JUMPDEST PUSH2 0x37C2 DUP2 DUP6 PUSH2 0x3664 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x37D4 DUP6 PUSH2 0x3675 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3810 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x37F1 DUP6 DUP3 PUSH2 0x378C JUMP JUMPDEST SWAP5 POP PUSH2 0x37FC DUP4 PUSH2 0x37A0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x37D8 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x383C DUP2 DUP5 PUSH2 0x37AD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x384D DUP2 PUSH2 0x3625 JUMP JUMPDEST DUP2 EQ PUSH2 0x3858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x386A DUP2 PUSH2 0x3844 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x388B JUMPI PUSH2 0x388A PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH2 0x3894 DUP3 PUSH2 0x32FA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38B4 PUSH2 0x38AF DUP5 PUSH2 0x3870 JUMP JUMPDEST PUSH2 0x3495 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x38D0 JUMPI PUSH2 0x38CF PUSH2 0x3430 JUMP JUMPDEST JUMPDEST PUSH2 0x38DB DUP5 DUP3 DUP6 PUSH2 0x32EB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x38F8 JUMPI PUSH2 0x38F7 PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3908 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x38A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x392A JUMPI PUSH2 0x3929 PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3938 DUP7 DUP3 DUP8 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3949 DUP7 DUP3 DUP8 ADD PUSH2 0x385B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x396A JUMPI PUSH2 0x3969 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3976 DUP7 DUP3 DUP8 ADD PUSH2 0x38E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x399B JUMPI PUSH2 0x399A PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x39C4 PUSH2 0x39BF DUP5 PUSH2 0x3980 JUMP JUMPDEST PUSH2 0x3495 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x39E7 JUMPI PUSH2 0x39E6 PUSH2 0x39AC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A10 JUMPI DUP1 PUSH2 0x39FC DUP9 DUP3 PUSH2 0x35E3 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E9 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A2F JUMPI PUSH2 0x3A2E PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A3F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x39B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3A63 JUMPI PUSH2 0x3A62 PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A87 PUSH2 0x3A82 DUP5 PUSH2 0x3A48 JUMP JUMPDEST PUSH2 0x3495 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3AAA JUMPI PUSH2 0x3AA9 PUSH2 0x39AC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3AD3 JUMPI DUP1 PUSH2 0x3ABF DUP9 DUP3 PUSH2 0x385B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3AAC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3AF2 JUMPI PUSH2 0x3AF1 PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3B02 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3A74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3B26 JUMPI PUSH2 0x3B25 PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B40 DUP2 PUSH2 0x33F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3B5D DUP2 PUSH2 0x3B37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B76 PUSH2 0x3B71 DUP5 PUSH2 0x3B0B JUMP JUMPDEST PUSH2 0x3495 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3B99 JUMPI PUSH2 0x3B98 PUSH2 0x39AC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3BC2 JUMPI DUP1 PUSH2 0x3BAE DUP9 DUP3 PUSH2 0x3B4E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3B9B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3BE1 JUMPI PUSH2 0x3BE0 PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3BF1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3B63 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3C15 JUMPI PUSH2 0x3C14 PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C39 PUSH2 0x3C34 DUP5 PUSH2 0x3BFA JUMP JUMPDEST PUSH2 0x3495 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3C5C JUMPI PUSH2 0x3C5B PUSH2 0x39AC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3CA3 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C81 JUMPI PUSH2 0x3C80 PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x3C8E DUP10 DUP3 PUSH2 0x38E3 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3C5E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3CC2 JUMPI PUSH2 0x3CC1 PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3CD2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3C26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3CF7 JUMPI PUSH2 0x3CF6 PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D15 JUMPI PUSH2 0x3D14 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3D21 DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D42 JUMPI PUSH2 0x3D41 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3D4E DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D6F JUMPI PUSH2 0x3D6E PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3D7B DUP9 DUP3 DUP10 ADD PUSH2 0x3ADD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D9C JUMPI PUSH2 0x3D9B PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3DA8 DUP9 DUP3 DUP10 ADD PUSH2 0x3BCC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DC9 JUMPI PUSH2 0x3DC8 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3DD5 DUP9 DUP3 DUP10 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3DFC JUMPI PUSH2 0x3DFB PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E0A DUP8 DUP3 DUP9 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3E1B DUP8 DUP3 DUP9 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3E2C DUP8 DUP3 DUP9 ADD PUSH2 0x3B4E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E4D JUMPI PUSH2 0x3E4C PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3E59 DUP8 DUP3 DUP9 ADD PUSH2 0x38E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E7B DUP2 PUSH2 0x3E65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E96 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EB2 JUMPI PUSH2 0x3EB1 PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EC0 DUP5 DUP3 DUP6 ADD PUSH2 0x385B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3ED2 DUP2 PUSH2 0x35BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EF4 DUP3 PUSH2 0x3694 JUMP JUMPDEST PUSH2 0x3EFE DUP2 DUP6 PUSH2 0x3ED8 JUMP JUMPDEST SWAP4 POP PUSH2 0x3F0E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36B0 JUMP JUMPDEST PUSH2 0x3F17 DUP2 PUSH2 0x32FA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3F37 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3EC9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3F49 DUP2 DUP7 PUSH2 0x3EE9 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3F5D DUP2 DUP6 PUSH2 0x3EE9 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F6C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3401 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F8C JUMPI PUSH2 0x3F8B PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F9A DUP6 DUP3 DUP7 ADD PUSH2 0x385B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FBB JUMPI PUSH2 0x3FBA PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3FC7 DUP6 DUP3 DUP7 ADD PUSH2 0x3523 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FE4 DUP2 PUSH2 0x3FD1 JUMP JUMPDEST DUP2 EQ PUSH2 0x3FEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4001 DUP2 PUSH2 0x3FDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x401D JUMPI PUSH2 0x401C PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x402B DUP5 DUP3 DUP6 ADD PUSH2 0x3FF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404A DUP3 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x4054 DUP2 DUP6 PUSH2 0x328E JUMP JUMPDEST SWAP4 POP PUSH2 0x4064 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36B0 JUMP JUMPDEST PUSH2 0x406D DUP2 PUSH2 0x32FA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4092 DUP2 DUP5 PUSH2 0x403F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x40B1 JUMPI PUSH2 0x40B0 PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x40BF DUP6 DUP3 DUP7 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x40D0 DUP6 DUP3 DUP7 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x40F5 JUMPI PUSH2 0x40F4 PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4112 JUMPI PUSH2 0x4111 PUSH2 0x40DA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x412E JUMPI PUSH2 0x412D PUSH2 0x39AC JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x414C JUMPI PUSH2 0x414B PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x416A JUMPI PUSH2 0x4169 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x4176 DUP6 DUP3 DUP7 ADD PUSH2 0x40DF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41CA DUP3 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x41D4 DUP2 DUP6 PUSH2 0x41AE JUMP JUMPDEST SWAP4 POP PUSH2 0x41E4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36B0 JUMP JUMPDEST PUSH2 0x41ED DUP2 PUSH2 0x32FA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4204 DUP4 DUP4 PUSH2 0x41BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4224 DUP3 PUSH2 0x4182 JUMP JUMPDEST PUSH2 0x422E DUP2 DUP6 PUSH2 0x418D JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x4240 DUP6 PUSH2 0x419E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x427C JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x425D DUP6 DUP3 PUSH2 0x41F8 JUMP JUMPDEST SWAP5 POP PUSH2 0x4268 DUP4 PUSH2 0x420C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4244 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42A8 DUP2 DUP5 PUSH2 0x4219 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x42CC JUMPI PUSH2 0x42CB PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42DA DUP9 DUP3 DUP10 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x42EB DUP9 DUP3 DUP10 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x42FC DUP9 DUP3 DUP10 ADD PUSH2 0x385B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x430D DUP9 DUP3 DUP10 ADD PUSH2 0x3B4E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x432E JUMPI PUSH2 0x432D PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x433A DUP9 DUP3 DUP10 ADD PUSH2 0x38E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4361 JUMPI PUSH2 0x4360 PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x436F DUP8 DUP3 DUP9 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4380 DUP8 DUP3 DUP9 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4391 DUP8 DUP3 DUP9 ADD PUSH2 0x385B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43B2 JUMPI PUSH2 0x43B1 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x43BE DUP8 DUP3 DUP9 ADD PUSH2 0x38E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43E1 JUMPI PUSH2 0x43E0 PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43EF DUP6 DUP3 DUP7 ADD PUSH2 0x3FF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4410 JUMPI PUSH2 0x440F PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x441C DUP6 DUP3 DUP7 ADD PUSH2 0x38E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x443B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3EC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x445C JUMPI PUSH2 0x445B PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4480 PUSH2 0x447B DUP5 PUSH2 0x4441 JUMP JUMPDEST PUSH2 0x3495 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x44A3 JUMPI PUSH2 0x44A2 PUSH2 0x39AC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x44CC JUMPI DUP1 PUSH2 0x44B8 DUP9 DUP3 PUSH2 0x3FF2 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x44A5 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x44EB JUMPI PUSH2 0x44EA PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x44FB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x446D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x451B JUMPI PUSH2 0x451A PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4539 JUMPI PUSH2 0x4538 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x4545 DUP6 DUP3 DUP7 ADD PUSH2 0x44D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4566 JUMPI PUSH2 0x4565 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x4572 DUP6 DUP3 DUP7 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45B4 DUP4 DUP4 PUSH2 0x3685 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45D8 DUP3 PUSH2 0x457C JUMP JUMPDEST PUSH2 0x45E2 DUP2 DUP6 PUSH2 0x4587 JUMP JUMPDEST SWAP4 POP PUSH2 0x45ED DUP4 PUSH2 0x4598 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x461E JUMPI DUP2 MLOAD PUSH2 0x4605 DUP9 DUP3 PUSH2 0x45A8 JUMP JUMPDEST SWAP8 POP PUSH2 0x4610 DUP4 PUSH2 0x45C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x45F1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4645 DUP2 DUP5 PUSH2 0x45CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4663 JUMPI PUSH2 0x4662 PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4681 JUMPI PUSH2 0x4680 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x468D DUP5 DUP3 DUP6 ADD PUSH2 0x44D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x469F DUP2 PUSH2 0x3370 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46D7 DUP4 DUP6 PUSH2 0x46C0 JUMP JUMPDEST SWAP4 POP PUSH2 0x46E4 DUP4 DUP6 DUP5 PUSH2 0x32EB JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4708 DUP3 PUSH2 0x46F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x471A DUP3 PUSH2 0x46FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4732 PUSH2 0x472D DUP3 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x470F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4753 PUSH2 0x474E DUP3 PUSH2 0x3625 JUMP JUMPDEST PUSH2 0x4738 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4766 DUP3 DUP7 DUP9 PUSH2 0x46CB JUMP JUMPDEST SWAP2 POP PUSH2 0x4772 DUP3 DUP6 PUSH2 0x4721 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4782 DUP3 DUP5 PUSH2 0x4742 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479F DUP3 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x47A9 DUP2 DUP6 PUSH2 0x46C0 JUMP JUMPDEST SWAP4 POP PUSH2 0x47B9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36B0 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47D1 DUP3 DUP5 PUSH2 0x4794 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206E656564206120746F6B656E20746F207375626D6974206120717565 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4838 PUSH1 0x25 DUP4 PUSH2 0x3ED8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4843 DUP3 PUSH2 0x47DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4867 DUP2 PUSH2 0x482B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x48A8 DUP3 PUSH2 0x3625 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x48DA JUMPI PUSH2 0x48D9 PUSH2 0x486E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x492C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x493F JUMPI PUSH2 0x493E PUSH2 0x48E5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x49A7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x496A JUMP JUMPDEST PUSH2 0x49B1 DUP7 DUP4 PUSH2 0x496A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49EE PUSH2 0x49E9 PUSH2 0x49E4 DUP5 PUSH2 0x3625 JUMP JUMPDEST PUSH2 0x49C9 JUMP JUMPDEST PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A08 DUP4 PUSH2 0x49D3 JUMP JUMPDEST PUSH2 0x4A1C PUSH2 0x4A14 DUP3 PUSH2 0x49F5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4977 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4A31 PUSH2 0x4A24 JUMP JUMPDEST PUSH2 0x4A3C DUP2 DUP5 DUP5 PUSH2 0x49FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4A60 JUMPI PUSH2 0x4A55 PUSH1 0x0 DUP3 PUSH2 0x4A29 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4A42 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4AA5 JUMPI PUSH2 0x4A76 DUP2 PUSH2 0x4945 JUMP JUMPDEST PUSH2 0x4A7F DUP5 PUSH2 0x495A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4A8E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4AA2 PUSH2 0x4A9A DUP6 PUSH2 0x495A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4A41 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AC8 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4AAA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AE1 DUP4 DUP4 PUSH2 0x4AB7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4AFA DUP3 PUSH2 0x3694 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B13 JUMPI PUSH2 0x4B12 PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH2 0x4B1D DUP3 SLOAD PUSH2 0x4914 JUMP JUMPDEST PUSH2 0x4B28 DUP3 DUP3 DUP6 PUSH2 0x4A64 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4B5B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4B49 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4B53 DUP6 DUP3 PUSH2 0x4AD5 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4BBB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4B69 DUP7 PUSH2 0x4945 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4B91 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4B6C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4BAE JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4BAA PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4AB7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BCE DUP3 PUSH2 0x3625 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BD9 DUP4 PUSH2 0x3625 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4BF1 JUMPI PUSH2 0x4BF0 PUSH2 0x486E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4C31 DUP3 PUSH2 0x3625 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C3C DUP4 PUSH2 0x3625 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4C54 JUMPI PUSH2 0x4C53 PUSH2 0x486E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4C6F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x4C7C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x362F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4C8E DUP2 DUP5 PUSH2 0x403F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4CAD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x4CBA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x4CC7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3EC9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CF4 PUSH2 0x4CEF PUSH2 0x4CEA DUP5 PUSH2 0x4CCF JUMP JUMPDEST PUSH2 0x49C9 JUMP JUMPDEST PUSH2 0x3E65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D04 DUP2 PUSH2 0x4CD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4D1F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x4D2C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4CFB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4D3E DUP2 DUP5 PUSH2 0x403F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79207468652070726F66696C65206F776E65722063616E20616E737765 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207175657374696F6E73000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA4 PUSH1 0x2B DUP4 PUSH2 0x3ED8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DAF DUP3 PUSH2 0x4D48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DD3 DUP2 PUSH2 0x4D97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207175657374696F6E20494400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E10 PUSH1 0x13 DUP4 PUSH2 0x3ED8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E1B DUP3 PUSH2 0x4DDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4E3F DUP2 PUSH2 0x4E03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x4E72 JUMPI PUSH2 0x4E71 PUSH2 0x4E46 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4E94 JUMPI PUSH2 0x4E93 PUSH2 0x4E4B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x4EB0 JUMPI PUSH2 0x4EAF PUSH2 0x4E50 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC5 DUP3 DUP5 DUP7 PUSH2 0x46CB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416C726561647920636C61696D65642061206672656520746F6B656E00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F07 PUSH1 0x1C DUP4 PUSH2 0x3ED8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F12 DUP3 PUSH2 0x4ED1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F36 DUP2 PUSH2 0x4EFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F99 PUSH1 0x26 DUP4 PUSH2 0x3ED8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FA4 DUP3 PUSH2 0x4F3D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FC8 DUP2 PUSH2 0x4F8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5017 DUP3 MLOAD PUSH2 0x4FDF JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x502B DUP3 PUSH2 0x4034 JUMP JUMPDEST DUP3 PUSH2 0x5035 DUP5 PUSH2 0x4FCF JUMP JUMPDEST SWAP1 POP PUSH2 0x5040 DUP2 PUSH2 0x500B JUMP JUMPDEST SWAP3 POP PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x5080 JUMPI PUSH2 0x507B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x14 SUB PUSH1 0x8 MUL PUSH2 0x496A JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x509C PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x50A9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x50B6 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x50C3 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x362F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x50D5 DUP2 DUP5 PUSH2 0x403F JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5117 PUSH1 0x20 DUP4 PUSH2 0x3ED8 JUMP JUMPDEST SWAP2 POP PUSH2 0x5122 DUP3 PUSH2 0x50E1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5146 DUP2 PUSH2 0x510A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5162 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x516F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x362F JUMP JUMPDEST PUSH2 0x517C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x5189 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x362F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x51E8 JUMPI PUSH2 0x51B9 DUP2 PUSH2 0x5192 JUMP JUMPDEST PUSH2 0x51C2 DUP5 PUSH2 0x495A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x51D1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x51E5 PUSH2 0x51DD DUP6 PUSH2 0x495A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4A41 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x51F6 DUP3 PUSH2 0x4034 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x520F JUMPI PUSH2 0x520E PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH2 0x5219 DUP3 SLOAD PUSH2 0x4914 JUMP JUMPDEST PUSH2 0x5224 DUP3 DUP3 DUP6 PUSH2 0x51A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5257 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5245 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x524F DUP6 DUP3 PUSH2 0x4AD5 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x52B7 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5265 DUP7 PUSH2 0x5192 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x528D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5268 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x52AA JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x52A6 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4AB7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5306 PUSH2 0x5301 DUP3 PUSH2 0x52BF JUMP JUMPDEST PUSH2 0x52EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFF000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5353 PUSH2 0x534E DUP3 PUSH2 0x530C JUMP JUMPDEST PUSH2 0x5338 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5374 PUSH2 0x536F DUP3 PUSH2 0x4FDF JUMP JUMPDEST PUSH2 0x5359 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5386 DUP3 DUP7 PUSH2 0x52F5 JUMP JUMPDEST PUSH1 0xA DUP3 ADD SWAP2 POP PUSH2 0x5396 DUP3 DUP6 PUSH2 0x5342 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP2 POP PUSH2 0x53A6 DUP3 DUP5 PUSH2 0x5363 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53C3 DUP3 MLOAD PUSH2 0x3FD1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53D7 DUP3 PUSH2 0x4034 JUMP JUMPDEST DUP3 PUSH2 0x53E1 DUP5 PUSH2 0x4FCF JUMP JUMPDEST SWAP1 POP PUSH2 0x53EC DUP2 PUSH2 0x53B7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x542C JUMPI PUSH2 0x5427 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x496A JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5448 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x362F JUMP JUMPDEST PUSH2 0x5455 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x5462 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x362F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x547F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x362F JUMP JUMPDEST PUSH2 0x548C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3401 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x549E DUP2 DUP5 PUSH2 0x403F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x54B1 DUP2 PUSH2 0x3FD1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x54CC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x54A8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x54DE DUP2 DUP5 PUSH2 0x403F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54FA PUSH2 0x54F5 DUP5 PUSH2 0x3870 JUMP JUMPDEST PUSH2 0x3495 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5516 JUMPI PUSH2 0x5515 PUSH2 0x3430 JUMP JUMPDEST JUMPDEST PUSH2 0x5521 DUP5 DUP3 DUP6 PUSH2 0x36B0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x553E JUMPI PUSH2 0x553D PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x554E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x54E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x556D JUMPI PUSH2 0x556C PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x558B JUMPI PUSH2 0x558A PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x5597 DUP5 DUP3 DUP6 ADD PUSH2 0x5529 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 DUP4 TIMESTAMP 0xBC PUSH21 0xC31B7A9EB0D14D2DBC91DEFE5354A7B4CB2EA010D1 0xC0 DUP6 0xBB SWAP12 0xC NOT PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"122:2554:25:-:0;;;474:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3243:285:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;565:8:25;575:1;578:5;3435::17;3442:7;3451:9;3462:14;1336:13:13;936:32:19;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1637:1:0;1613:26;;:12;:26;;;1609:100;;1662:36;;;;;;;;;;;;;;1609:100;1718:40;1745:12;1718:26;;;:40;;:::i;:::-;1557:208;1421:114:13::1;388:66:12;1451:29:13;;1494:31;;;;;;;;;;;;;;;;::::0;1421:16:::1;;;:114;;:::i;:::-;1546:52;633:66:12;1563:20:13;;1591:5;1546:16;;;:52;;:::i;:::-;1608:56;776:66:12;1625:22:13;;1655:7;1608:16;;;:56;;:::i;:::-;1674:66;915::12;1691:20:13;;1724:14;1713:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;1674:16;;;:66;;:::i;:::-;1187:560:::0;;;;3506:15:17::1;3488;;:33;;;;;;;;;;;;;;;;;;3243:285:::0;;;;;610:8:25::1;595:12;;:23;;;;;;;;;;;;;;;;;;474:151:::0;122:2554;;655:96:20;708:7;734:10;727:17;;655:96;:::o;2426:187:19:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;5496:188:0:-;5622:9;5604:6;:15;5611:7;5604:15;;;;;;;;;;;:27;;;;;;:::i;:::-;;5658:7;5646:31;5667:9;5646:31;;;;;;:::i;:::-;;;;;;;;5496:188;;:::o;88:117:26:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:77::-;1239:7;1268:5;1257:16;;1202:77;;;:::o;1285:118::-;1372:24;1390:5;1372:24;:::i;:::-;1367:3;1360:37;1285:118;;:::o;1409:222::-;1502:4;1540:2;1529:9;1525:18;1517:26;;1553:71;1621:1;1610:9;1606:17;1597:6;1553:71;:::i;:::-;1409:222;;;;:::o;1637:98::-;1688:6;1722:5;1716:12;1706:22;;1637:98;;;:::o;1741:180::-;1789:77;1786:1;1779:88;1886:4;1883:1;1876:15;1910:4;1907:1;1900:15;1927:180;1975:77;1972:1;1965:88;2072:4;2069:1;2062:15;2096:4;2093:1;2086:15;2113:320;2157:6;2194:1;2188:4;2184:12;2174:22;;2241:1;2235:4;2231:12;2262:18;2252:81;;2318:4;2310:6;2306:17;2296:27;;2252:81;2380:2;2372:6;2369:14;2349:18;2346:38;2343:84;;2399:18;;:::i;:::-;2343:84;2164:269;2113:320;;;:::o;2439:140::-;2487:4;2510:3;2502:11;;2533:3;2530:1;2523:14;2567:4;2564:1;2554:18;2546:26;;2439:140;;;:::o;2585:93::-;2622:6;2669:2;2664;2657:5;2653:14;2649:23;2639:33;;2585:93;;;:::o;2684:107::-;2728:8;2778:5;2772:4;2768:16;2747:37;;2684:107;;;;:::o;2797:393::-;2866:6;2916:1;2904:10;2900:18;2939:97;2969:66;2958:9;2939:97;:::i;:::-;3057:39;3087:8;3076:9;3057:39;:::i;:::-;3045:51;;3129:4;3125:9;3118:5;3114:21;3105:30;;3178:4;3168:8;3164:19;3157:5;3154:30;3144:40;;2873:317;;2797:393;;;;;:::o;3196:60::-;3224:3;3245:5;3238:12;;3196:60;;;:::o;3262:142::-;3312:9;3345:53;3363:34;3372:24;3390:5;3372:24;:::i;:::-;3363:34;:::i;:::-;3345:53;:::i;:::-;3332:66;;3262:142;;;:::o;3410:75::-;3453:3;3474:5;3467:12;;3410:75;;;:::o;3491:269::-;3601:39;3632:7;3601:39;:::i;:::-;3662:91;3711:41;3735:16;3711:41;:::i;:::-;3703:6;3696:4;3690:11;3662:91;:::i;:::-;3656:4;3649:105;3567:193;3491:269;;;:::o;3766:73::-;3811:3;3766:73;:::o;3845:189::-;3922:32;;:::i;:::-;3963:65;4021:6;4013;4007:4;3963:65;:::i;:::-;3898:136;3845:189;;:::o;4040:186::-;4100:120;4117:3;4110:5;4107:14;4100:120;;;4171:39;4208:1;4201:5;4171:39;:::i;:::-;4144:1;4137:5;4133:13;4124:22;;4100:120;;;4040:186;;:::o;4232:541::-;4332:2;4327:3;4324:11;4321:445;;;4366:37;4397:5;4366:37;:::i;:::-;4449:29;4467:10;4449:29;:::i;:::-;4439:8;4435:44;4632:2;4620:10;4617:18;4614:49;;;4653:8;4638:23;;4614:49;4676:80;4732:22;4750:3;4732:22;:::i;:::-;4722:8;4718:37;4705:11;4676:80;:::i;:::-;4336:430;;4321:445;4232:541;;;:::o;4779:117::-;4833:8;4883:5;4877:4;4873:16;4852:37;;4779:117;;;;:::o;4902:169::-;4946:6;4979:51;5027:1;5023:6;5015:5;5012:1;5008:13;4979:51;:::i;:::-;4975:56;5060:4;5054;5050:15;5040:25;;4953:118;4902:169;;;;:::o;5076:295::-;5152:4;5298:29;5323:3;5317:4;5298:29;:::i;:::-;5290:37;;5360:3;5357:1;5353:11;5347:4;5344:21;5336:29;;5076:295;;;;:::o;5376:1390::-;5491:36;5523:3;5491:36;:::i;:::-;5592:18;5584:6;5581:30;5578:56;;;5614:18;;:::i;:::-;5578:56;5658:38;5690:4;5684:11;5658:38;:::i;:::-;5743:66;5802:6;5794;5788:4;5743:66;:::i;:::-;5836:1;5860:4;5847:17;;5892:2;5884:6;5881:14;5909:1;5904:617;;;;6565:1;6582:6;6579:77;;;6631:9;6626:3;6622:19;6616:26;6607:35;;6579:77;6682:67;6742:6;6735:5;6682:67;:::i;:::-;6676:4;6669:81;6538:222;5874:886;;5904:617;5956:4;5952:9;5944:6;5940:22;5990:36;6021:4;5990:36;:::i;:::-;6048:1;6062:208;6076:7;6073:1;6070:14;6062:208;;;6155:9;6150:3;6146:19;6140:26;6132:6;6125:42;6206:1;6198:6;6194:14;6184:24;;6253:2;6242:9;6238:18;6225:31;;6099:4;6096:1;6092:12;6087:17;;6062:208;;;6298:6;6289:7;6286:19;6283:179;;;6356:9;6351:3;6347:19;6341:26;6399:48;6441:4;6433:6;6429:17;6418:9;6399:48;:::i;:::-;6391:6;6384:64;6306:156;6283:179;6508:1;6504;6496:6;6492:14;6488:22;6482:4;6475:36;5911:610;;;5874:886;;5466:1300;;;5376:1390;;:::o;6772:168::-;6855:11;6889:6;6884:3;6877:19;6929:4;6924:3;6920:14;6905:29;;6772:168;;;;:::o;6946:246::-;7027:1;7037:113;7051:6;7048:1;7045:13;7037:113;;;7136:1;7131:3;7127:11;7121:18;7117:1;7112:3;7108:11;7101:39;7073:2;7070:1;7066:10;7061:15;;7037:113;;;7184:1;7175:6;7170:3;7166:16;7159:27;7008:184;6946:246;;;:::o;7198:102::-;7239:6;7290:2;7286:7;7281:2;7274:5;7270:14;7266:28;7256:38;;7198:102;;;:::o;7306:373::-;7392:3;7420:38;7452:5;7420:38;:::i;:::-;7474:70;7537:6;7532:3;7474:70;:::i;:::-;7467:77;;7553:65;7611:6;7606:3;7599:4;7592:5;7588:16;7553:65;:::i;:::-;7643:29;7665:6;7643:29;:::i;:::-;7638:3;7634:39;7627:46;;7396:283;7306:373;;;;:::o;7685:309::-;7796:4;7834:2;7823:9;7819:18;7811:26;;7883:9;7877:4;7873:20;7869:1;7858:9;7854:17;7847:47;7911:76;7982:4;7973:6;7911:76;:::i;:::-;7903:84;;7685:309;;;;:::o;122:2554:25:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1944":{"entryPoint":null,"id":1944,"parameterSlots":2,"returnSlots":1},"@_1962":{"entryPoint":null,"id":1962,"parameterSlots":0,"returnSlots":0},"@_add_3646":{"entryPoint":12455,"id":3646,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_3061":{"entryPoint":11547,"id":3061,"parameterSlots":5,"returnSlots":0},"@_beforeTokenTransfer_3046":{"entryPoint":10959,"id":3046,"parameterSlots":5,"returnSlots":0},"@_burn_2821":{"entryPoint":7791,"id":2821,"parameterSlots":3,"returnSlots":0},"@_checkOwner_3275":{"entryPoint":8937,"id":3275,"parameterSlots":0,"returnSlots":0},"@_contains_3749":{"entryPoint":12843,"id":3749,"parameterSlots":2,"returnSlots":1},"@_fallbackLSP17Extendable_2017":{"entryPoint":2094,"id":2017,"parameterSlots":2,"returnSlots":1},"@_getData_176":{"entryPoint":8772,"id":176,"parameterSlots":1,"returnSlots":1},"@_getExtensionAndForwardValue_2067":{"entryPoint":7405,"id":2067,"parameterSlots":1,"returnSlots":2},"@_mint_2746":{"entryPoint":10367,"id":2746,"parameterSlots":4,"returnSlots":0},"@_msgSender_3345":{"entryPoint":11891,"id":3345,"parameterSlots":0,"returnSlots":1},"@_notifyTokenOperator_3078":{"entryPoint":8722,"id":3078,"parameterSlots":2,"returnSlots":0},"@_notifyTokenReceiver_3141":{"entryPoint":11899,"id":3141,"parameterSlots":3,"returnSlots":0},"@_notifyTokenSender_3095":{"entryPoint":11554,"id":3095,"parameterSlots":2,"returnSlots":0},"@_remove_3730":{"entryPoint":12567,"id":3730,"parameterSlots":2,"returnSlots":1},"@_setDataBatch_249":{"entryPoint":10159,"id":249,"parameterSlots":2,"returnSlots":0},"@_setData_1613":{"entryPoint":9790,"id":1613,"parameterSlots":2,"returnSlots":0},"@_spendAllowance_2866":{"entryPoint":9259,"id":2866,"parameterSlots":3,"returnSlots":0},"@_supportsInterfaceInERC165Extension_655":{"entryPoint":7688,"id":655,"parameterSlots":1,"returnSlots":1},"@_transferOwnership_3332":{"entryPoint":9063,"id":3332,"parameterSlots":1,"returnSlots":0},"@_transfer_2946":{"entryPoint":9520,"id":2946,"parameterSlots":5,"returnSlots":0},"@_updateOperator_2668":{"entryPoint":7999,"id":2668,"parameterSlots":5,"returnSlots":0},"@_update_3031":{"entryPoint":10966,"id":3031,"parameterSlots":5,"returnSlots":0},"@_values_3794":{"entryPoint":12257,"id":3794,"parameterSlots":1,"returnSlots":1},"@add_3946":{"entryPoint":11604,"id":3946,"parameterSlots":2,"returnSlots":1},"@answerQuestion_4370":{"entryPoint":4901,"id":4370,"parameterSlots":2,"returnSlots":0},"@authorizeOperator_2236":{"entryPoint":6941,"id":2236,"parameterSlots":3,"returnSlots":0},"@authorizedAmountFor_2321":{"entryPoint":5207,"id":2321,"parameterSlots":2,"returnSlots":1},"@balanceOf_2130":{"entryPoint":5845,"id":2130,"parameterSlots":1,"returnSlots":1},"@batchCalls_2200":{"entryPoint":5465,"id":2200,"parameterSlots":2,"returnSlots":1},"@claimFreeToken_4282":{"entryPoint":6636,"id":4282,"parameterSlots":0,"returnSlots":0},"@decimals_2106":{"entryPoint":4499,"id":2106,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_2475":{"entryPoint":6053,"id":2475,"parameterSlots":4,"returnSlots":0},"@generateMappingKey_952":{"entryPoint":10607,"id":952,"parameterSlots":2,"returnSlots":1},"@getAllQuestions_4414":{"entryPoint":3187,"id":4414,"parameterSlots":0,"returnSlots":1},"@getDataBatch_111":{"entryPoint":7097,"id":111,"parameterSlots":1,"returnSlots":1},"@getData_64":{"entryPoint":5189,"id":64,"parameterSlots":1,"returnSlots":1},"@getFQTBalance_4458":{"entryPoint":6459,"id":4458,"parameterSlots":1,"returnSlots":1},"@getOperatorsOf_2338":{"entryPoint":7017,"id":2338,"parameterSlots":1,"returnSlots":1},"@hasReceivedToken_4233":{"entryPoint":5938,"id":4233,"parameterSlots":0,"returnSlots":0},"@hasSubmittedQuestion_4446":{"entryPoint":3015,"id":4446,"parameterSlots":1,"returnSlots":1},"@increaseAllowance_2396":{"entryPoint":3799,"id":2396,"parameterSlots":3,"returnSlots":0},"@notifyUniversalReceiver_519":{"entryPoint":11700,"id":519,"parameterSlots":3,"returnSlots":0},"@owner_3261":{"entryPoint":6477,"id":3261,"parameterSlots":0,"returnSlots":1},"@profileOwner_4222":{"entryPoint":6598,"id":4222,"parameterSlots":0,"returnSlots":0},"@questionCounter_4224":{"entryPoint":7011,"id":4224,"parameterSlots":0,"returnSlots":0},"@questions_4229":{"entryPoint":4536,"id":4229,"parameterSlots":0,"returnSlots":0},"@remove_3973":{"entryPoint":11652,"id":3973,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_3289":{"entryPoint":5918,"id":3289,"parameterSlots":0,"returnSlots":0},"@revokeOperator_2293":{"entryPoint":4246,"id":2293,"parameterSlots":4,"returnSlots":0},"@setDataBatch_163":{"entryPoint":6518,"id":163,"parameterSlots":2,"returnSlots":0},"@setData_136":{"entryPoint":6379,"id":136,"parameterSlots":2,"returnSlots":0},"@submitQuestion_4328":{"entryPoint":2589,"id":4328,"parameterSlots":1,"returnSlots":0},"@supportsERC165InterfaceUnchecked_3580":{"entryPoint":10768,"id":3580,"parameterSlots":2,"returnSlots":1},"@supportsInterface_2093":{"entryPoint":2476,"id":2093,"parameterSlots":1,"returnSlots":1},"@supportsInterface_268":{"entryPoint":10671,"id":268,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3386":{"entryPoint":12349,"id":3386,"parameterSlots":1,"returnSlots":1},"@supportsInterface_623":{"entryPoint":7591,"id":623,"parameterSlots":1,"returnSlots":1},"@totalSupply_2116":{"entryPoint":3177,"id":2116,"parameterSlots":0,"returnSlots":1},"@transferBatch_2592":{"entryPoint":3970,"id":2592,"parameterSlots":5,"returnSlots":0},"@transferOwnership_3312":{"entryPoint":7274,"id":3312,"parameterSlots":1,"returnSlots":0},"@transfer_2512":{"entryPoint":5970,"id":2512,"parameterSlots":5,"returnSlots":0},"@values_4072":{"entryPoint":10574,"id":4072,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":14769,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr":{"entryPoint":15203,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":17517,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":15398,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":14964,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":14497,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr_fromMemory":{"entryPoint":21735,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":13537,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":13795,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":14874,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bool_$dyn_memory_ptr":{"entryPoint":15308,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":17622,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":16607,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":15533,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15069,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":15182,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":16370,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":13235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":14563,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr_fromMemory":{"entryPoint":21801,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":13603,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":14427,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":13816,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":16538,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_boolt_bytes_memory_ptr":{"entryPoint":15842,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_addresst_uint256t_boolt_bytes_memory_ptr":{"entryPoint":17072,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":17223,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr":{"entryPoint":14609,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bool_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":15579,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":17997,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":17668,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":16693,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":16391,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes_memory_ptr":{"entryPoint":17354,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":13256,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr_fromMemory":{"entryPoint":21847,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":13649,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":16028,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":16245,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":17832,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":16888,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_Question_$4220_memory_ptr_to_t_struct$_Question_$4220_memory_ptr":{"entryPoint":14220,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":13957,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":16073,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":18209,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":17869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":16921,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":14253,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool":{"entryPoint":14099,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":13313,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack":{"entryPoint":21237,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack":{"entryPoint":21347,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack":{"entryPoint":21314,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":21672,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":18070,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":13067,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18123,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":16831,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":16447,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18324,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_0_by_1_to_t_uint8_fromStack":{"entryPoint":19707,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":14042,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":16105,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":20364,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4eb56e33b190c911f9a62dafbc06b9f3d9c8ebfa91addfd5c4ed064caf80fb28_to_t_string_memory_ptr_fromStack":{"entryPoint":20218,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7012ed5ec9b5652af45260c130745cf693bfe45361b071a180578cecce6252c4_to_t_string_memory_ptr_fromStack":{"entryPoint":19971,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":20746,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack":{"entryPoint":12968,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_feffb919f33f741fb31a502394ba298782f4310d28ba5450a753fb62b6059085_to_t_string_memory_ptr_fromStack":{"entryPoint":19863,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ff075107381d702750af5e734cb03ff5255767cbecd0d4c2fe55faaadb5b2448_to_t_string_memory_ptr_fromStack":{"entryPoint":18475,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Question_$4220_memory_ptr_to_t_struct$_Question_$4220_memory_ptr":{"entryPoint":14114,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":13871,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":18242,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":15986,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes10_t_bytes2_t_bytes20__to_t_bytes10_t_bytes2_t_bytes20__nonPadded_inplace_fromStack_reversed":{"entryPoint":21370,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":20152,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address_t_uint256__to_t_bytes_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":18265,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18373,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":17446,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed":{"entryPoint":19608,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":20615,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_rational_0_by_1_t_bytes_memory_ptr__to_t_address_t_uint8_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":19722,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_bool__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":16162,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":20813,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":19546,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":17963,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":17038,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14370,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":13328,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":21687,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":18085,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":13112,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":16504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20399,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4eb56e33b190c911f9a62dafbc06b9f3d9c8ebfa91addfd5c4ed064caf80fb28__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20253,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7012ed5ec9b5652af45260c130745cf693bfe45361b071a180578cecce6252c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20006,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20781,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":13003,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_feffb919f33f741fb31a502394ba298782f4310d28ba5450a753fb62b6059085__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19898,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ff075107381d702750af5e734cb03ff5255767cbecd0d4c2fe55faaadb5b2448__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18510,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":13886,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":21555,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool_t_bytes_memory_ptr__to_t_uint256_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":21610,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":16001,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":20053,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":13461,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":13148,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":14720,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_bool_$dyn_memory_ptr":{"entryPoint":15115,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":17473,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":15354,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":14920,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":14448,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":13488,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":17816,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":16798,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr":{"entryPoint":13941,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":20431,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage":{"entryPoint":20882,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":18757,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":17788,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":16770,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr":{"entryPoint":13913,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":16436,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":13972,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":17856,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":16908,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr":{"entryPoint":14240,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":17799,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":16781,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13924,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":16814,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":12942,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18112,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":13983,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":16088,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":19494,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":19395,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_bytes_storage":{"entryPoint":20903,"id":null,"parameterSlots":3,"returnSlots":0},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":19044,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":13754,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":13301,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes10":{"entryPoint":21183,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes2":{"entryPoint":21260,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes20":{"entryPoint":20447,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":16337,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":13168,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":19663,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":13722,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":13861,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":15973,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":19009,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20":{"entryPoint":20512,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":21452,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_0_by_1_to_t_uint8":{"entryPoint":19673,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":18899,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":20973,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":19185,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":13035,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":14000,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":18778,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":18708,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":19157,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":13412,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":18889,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":18589,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":18191,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes10":{"entryPoint":21227,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes2":{"entryPoint":21304,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes20":{"entryPoint":21337,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":18173,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":18232,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":19127,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":18542,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":18661,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":21920,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":19447,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":13365,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":18933,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes20":{"entryPoint":20491,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":21431,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":16602,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":13355,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":20043,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":20038,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":14764,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":20048,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":13360,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":13163,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":13158,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":13050,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":18160,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":18794,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":19114,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":18985,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":20285,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4eb56e33b190c911f9a62dafbc06b9f3d9c8ebfa91addfd5c4ed064caf80fb28":{"entryPoint":20177,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7012ed5ec9b5652af45260c130745cf693bfe45361b071a180578cecce6252c4":{"entryPoint":19930,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":20705,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c":{"entryPoint":12959,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_feffb919f33f741fb31a502394ba298782f4310d28ba5450a753fb62b6059085":{"entryPoint":19784,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ff075107381d702750af5e734cb03ff5255767cbecd0d4c2fe55faaadb5b2448":{"entryPoint":18396,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":18807,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":18943,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":13772,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":15159,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":16347,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":13212,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":14404,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":18980,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:68152:26","statements":[{"body":{"nodeType":"YulBlock","src":"102:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"119:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"124:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"112:6:26"},"nodeType":"YulFunctionCall","src":"112:19:26"},"nodeType":"YulExpressionStatement","src":"112:19:26"},{"nodeType":"YulAssignment","src":"140:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"159:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"164:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"155:3:26"},"nodeType":"YulFunctionCall","src":"155:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"140:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"74:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"79:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"90:11:26","type":""}],"src":"7:168:26"},{"body":{"nodeType":"YulBlock","src":"287:108:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"309:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"305:3:26"},"nodeType":"YulFunctionCall","src":"305:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"321:66:26","type":"","value":"0x0000000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"298:6:26"},"nodeType":"YulFunctionCall","src":"298:90:26"},"nodeType":"YulExpressionStatement","src":"298:90:26"}]},"name":"store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"279:6:26","type":""}],"src":"181:214:26"},{"body":{"nodeType":"YulBlock","src":"546:218:26","statements":[{"nodeType":"YulAssignment","src":"556:72:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"621:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"626:1:26","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"563:57:26"},"nodeType":"YulFunctionCall","src":"563:65:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"556:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"726:3:26"}],"functionName":{"name":"store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","nodeType":"YulIdentifier","src":"637:88:26"},"nodeType":"YulFunctionCall","src":"637:93:26"},"nodeType":"YulExpressionStatement","src":"637:93:26"},{"nodeType":"YulAssignment","src":"739:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"750:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"755:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"746:3:26"},"nodeType":"YulFunctionCall","src":"746:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"739:3:26"}]}]},"name":"abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"534:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"542:3:26","type":""}],"src":"401:363:26"},{"body":{"nodeType":"YulBlock","src":"940:247:26","statements":[{"nodeType":"YulAssignment","src":"950:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"962:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"973:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"958:3:26"},"nodeType":"YulFunctionCall","src":"958:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"950:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"997:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1008:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"993:3:26"},"nodeType":"YulFunctionCall","src":"993:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1016:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1022:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1012:3:26"},"nodeType":"YulFunctionCall","src":"1012:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"986:6:26"},"nodeType":"YulFunctionCall","src":"986:47:26"},"nodeType":"YulExpressionStatement","src":"986:47:26"},{"nodeType":"YulAssignment","src":"1042:138:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1175:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1050:123:26"},"nodeType":"YulFunctionCall","src":"1050:130:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1042:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"920:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"935:4:26","type":""}],"src":"770:417:26"},{"body":{"nodeType":"YulBlock","src":"1257:82:26","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1280:3:26"},{"name":"src","nodeType":"YulIdentifier","src":"1285:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"1290:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1267:12:26"},"nodeType":"YulFunctionCall","src":"1267:30:26"},"nodeType":"YulExpressionStatement","src":"1267:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1317:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"1322:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1313:3:26"},"nodeType":"YulFunctionCall","src":"1313:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"1331:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1306:6:26"},"nodeType":"YulFunctionCall","src":"1306:27:26"},"nodeType":"YulExpressionStatement","src":"1306:27:26"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1239:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1244:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1249:6:26","type":""}],"src":"1193:146:26"},{"body":{"nodeType":"YulBlock","src":"1393:54:26","statements":[{"nodeType":"YulAssignment","src":"1403:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1421:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1428:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1417:3:26"},"nodeType":"YulFunctionCall","src":"1417:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1437:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1433:3:26"},"nodeType":"YulFunctionCall","src":"1433:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1413:3:26"},"nodeType":"YulFunctionCall","src":"1413:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1403:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1376:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1386:6:26","type":""}],"src":"1345:102:26"},{"body":{"nodeType":"YulBlock","src":"1575:214:26","statements":[{"nodeType":"YulAssignment","src":"1585:77:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1650:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"1655:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1592:57:26"},"nodeType":"YulFunctionCall","src":"1592:70:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1585:3:26"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1709:5:26"},{"name":"pos","nodeType":"YulIdentifier","src":"1716:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"1721:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1672:36:26"},"nodeType":"YulFunctionCall","src":"1672:56:26"},"nodeType":"YulExpressionStatement","src":"1672:56:26"},{"nodeType":"YulAssignment","src":"1737:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1748:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1775:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1753:21:26"},"nodeType":"YulFunctionCall","src":"1753:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1744:3:26"},"nodeType":"YulFunctionCall","src":"1744:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1737:3:26"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"1548:5:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1555:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1563:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1571:3:26","type":""}],"src":"1475:314:26"},{"body":{"nodeType":"YulBlock","src":"1921:203:26","statements":[{"nodeType":"YulAssignment","src":"1931:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1943:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1954:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1939:3:26"},"nodeType":"YulFunctionCall","src":"1939:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1931:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1978:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1989:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1974:3:26"},"nodeType":"YulFunctionCall","src":"1974:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1997:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2003:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1993:3:26"},"nodeType":"YulFunctionCall","src":"1993:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1967:6:26"},"nodeType":"YulFunctionCall","src":"1967:47:26"},"nodeType":"YulExpressionStatement","src":"1967:47:26"},{"nodeType":"YulAssignment","src":"2023:94:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2095:6:26"},{"name":"value1","nodeType":"YulIdentifier","src":"2103:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"2112:4:26"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2031:63:26"},"nodeType":"YulFunctionCall","src":"2031:86:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2023:4:26"}]}]},"name":"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1885:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1897:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1905:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1916:4:26","type":""}],"src":"1795:329:26"},{"body":{"nodeType":"YulBlock","src":"2170:35:26","statements":[{"nodeType":"YulAssignment","src":"2180:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2196:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2190:5:26"},"nodeType":"YulFunctionCall","src":"2190:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2180:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2163:6:26","type":""}],"src":"2130:75:26"},{"body":{"nodeType":"YulBlock","src":"2300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2310:6:26"},"nodeType":"YulFunctionCall","src":"2310:12:26"},"nodeType":"YulExpressionStatement","src":"2310:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2211:117:26"},{"body":{"nodeType":"YulBlock","src":"2423:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2440:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2443:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2433:6:26"},"nodeType":"YulFunctionCall","src":"2433:12:26"},"nodeType":"YulExpressionStatement","src":"2433:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2334:117:26"},{"body":{"nodeType":"YulBlock","src":"2501:105:26","statements":[{"nodeType":"YulAssignment","src":"2511:89:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2526:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2533:66:26","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2522:3:26"},"nodeType":"YulFunctionCall","src":"2522:78:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2511:7:26"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2483:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2493:7:26","type":""}],"src":"2457:149:26"},{"body":{"nodeType":"YulBlock","src":"2654:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"2710:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2719:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2722:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2712:6:26"},"nodeType":"YulFunctionCall","src":"2712:12:26"},"nodeType":"YulExpressionStatement","src":"2712:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2677:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2701:5:26"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"2684:16:26"},"nodeType":"YulFunctionCall","src":"2684:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2674:2:26"},"nodeType":"YulFunctionCall","src":"2674:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2667:6:26"},"nodeType":"YulFunctionCall","src":"2667:42:26"},"nodeType":"YulIf","src":"2664:62:26"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2647:5:26","type":""}],"src":"2612:120:26"},{"body":{"nodeType":"YulBlock","src":"2789:86:26","statements":[{"nodeType":"YulAssignment","src":"2799:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2821:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2808:12:26"},"nodeType":"YulFunctionCall","src":"2808:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2799:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2863:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2837:25:26"},"nodeType":"YulFunctionCall","src":"2837:32:26"},"nodeType":"YulExpressionStatement","src":"2837:32:26"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2767:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2775:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2783:5:26","type":""}],"src":"2738:137:26"},{"body":{"nodeType":"YulBlock","src":"2946:262:26","statements":[{"body":{"nodeType":"YulBlock","src":"2992:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2994:77:26"},"nodeType":"YulFunctionCall","src":"2994:79:26"},"nodeType":"YulExpressionStatement","src":"2994:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2967:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2976:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2963:3:26"},"nodeType":"YulFunctionCall","src":"2963:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2988:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2959:3:26"},"nodeType":"YulFunctionCall","src":"2959:32:26"},"nodeType":"YulIf","src":"2956:119:26"},{"nodeType":"YulBlock","src":"3085:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3100:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3114:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3104:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3129:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3163:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3174:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3159:3:26"},"nodeType":"YulFunctionCall","src":"3159:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3183:7:26"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"3139:19:26"},"nodeType":"YulFunctionCall","src":"3139:52:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3129:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2916:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2927:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2939:6:26","type":""}],"src":"2881:327:26"},{"body":{"nodeType":"YulBlock","src":"3256:48:26","statements":[{"nodeType":"YulAssignment","src":"3266:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3291:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3284:6:26"},"nodeType":"YulFunctionCall","src":"3284:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3277:6:26"},"nodeType":"YulFunctionCall","src":"3277:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3266:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3238:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3248:7:26","type":""}],"src":"3214:90:26"},{"body":{"nodeType":"YulBlock","src":"3369:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3386:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3406:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3391:14:26"},"nodeType":"YulFunctionCall","src":"3391:21:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3379:6:26"},"nodeType":"YulFunctionCall","src":"3379:34:26"},"nodeType":"YulExpressionStatement","src":"3379:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3357:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3364:3:26","type":""}],"src":"3310:109:26"},{"body":{"nodeType":"YulBlock","src":"3517:118:26","statements":[{"nodeType":"YulAssignment","src":"3527:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3539:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3550:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3535:3:26"},"nodeType":"YulFunctionCall","src":"3535:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3527:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3601:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3614:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3625:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3610:3:26"},"nodeType":"YulFunctionCall","src":"3610:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3563:37:26"},"nodeType":"YulFunctionCall","src":"3563:65:26"},"nodeType":"YulExpressionStatement","src":"3563:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3489:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3501:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3512:4:26","type":""}],"src":"3425:210:26"},{"body":{"nodeType":"YulBlock","src":"3730:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3747:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3750:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3740:6:26"},"nodeType":"YulFunctionCall","src":"3740:12:26"},"nodeType":"YulExpressionStatement","src":"3740:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3641:117:26"},{"body":{"nodeType":"YulBlock","src":"3853:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3870:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3873:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3863:6:26"},"nodeType":"YulFunctionCall","src":"3863:12:26"},"nodeType":"YulExpressionStatement","src":"3863:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3764:117:26"},{"body":{"nodeType":"YulBlock","src":"3915:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3932:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3935:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3925:6:26"},"nodeType":"YulFunctionCall","src":"3925:88:26"},"nodeType":"YulExpressionStatement","src":"3925:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4029:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4022:6:26"},"nodeType":"YulFunctionCall","src":"4022:15:26"},"nodeType":"YulExpressionStatement","src":"4022:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4053:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4056:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4046:6:26"},"nodeType":"YulFunctionCall","src":"4046:15:26"},"nodeType":"YulExpressionStatement","src":"4046:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3887:180:26"},{"body":{"nodeType":"YulBlock","src":"4116:238:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4126:58:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4148:6:26"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4178:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4156:21:26"},"nodeType":"YulFunctionCall","src":"4156:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4144:3:26"},"nodeType":"YulFunctionCall","src":"4144:40:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4130:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4295:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4297:16:26"},"nodeType":"YulFunctionCall","src":"4297:18:26"},"nodeType":"YulExpressionStatement","src":"4297:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4238:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"4250:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4235:2:26"},"nodeType":"YulFunctionCall","src":"4235:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4274:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4286:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4271:2:26"},"nodeType":"YulFunctionCall","src":"4271:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4232:2:26"},"nodeType":"YulFunctionCall","src":"4232:62:26"},"nodeType":"YulIf","src":"4229:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4333:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4337:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4326:6:26"},"nodeType":"YulFunctionCall","src":"4326:22:26"},"nodeType":"YulExpressionStatement","src":"4326:22:26"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4102:6:26","type":""},{"name":"size","nodeType":"YulTypedName","src":"4110:4:26","type":""}],"src":"4073:281:26"},{"body":{"nodeType":"YulBlock","src":"4401:88:26","statements":[{"nodeType":"YulAssignment","src":"4411:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4421:18:26"},"nodeType":"YulFunctionCall","src":"4421:20:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4411:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4470:6:26"},{"name":"size","nodeType":"YulIdentifier","src":"4478:4:26"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4450:19:26"},"nodeType":"YulFunctionCall","src":"4450:33:26"},"nodeType":"YulExpressionStatement","src":"4450:33:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4385:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4394:6:26","type":""}],"src":"4360:129:26"},{"body":{"nodeType":"YulBlock","src":"4562:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"4667:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4669:16:26"},"nodeType":"YulFunctionCall","src":"4669:18:26"},"nodeType":"YulExpressionStatement","src":"4669:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4639:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4647:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4636:2:26"},"nodeType":"YulFunctionCall","src":"4636:30:26"},"nodeType":"YulIf","src":"4633:56:26"},{"nodeType":"YulAssignment","src":"4699:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4729:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4707:21:26"},"nodeType":"YulFunctionCall","src":"4707:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4699:4:26"}]},{"nodeType":"YulAssignment","src":"4773:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4785:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"4791:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4781:3:26"},"nodeType":"YulFunctionCall","src":"4781:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4773:4:26"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4546:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4557:4:26","type":""}],"src":"4495:308:26"},{"body":{"nodeType":"YulBlock","src":"4893:341:26","statements":[{"nodeType":"YulAssignment","src":"4903:75:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4970:6:26"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4928:41:26"},"nodeType":"YulFunctionCall","src":"4928:49:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4912:15:26"},"nodeType":"YulFunctionCall","src":"4912:66:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4903:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4994:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"5001:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4987:6:26"},"nodeType":"YulFunctionCall","src":"4987:21:26"},"nodeType":"YulExpressionStatement","src":"4987:21:26"},{"nodeType":"YulVariableDeclaration","src":"5017:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5032:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"5039:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5028:3:26"},"nodeType":"YulFunctionCall","src":"5028:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5021:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5082:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"5084:77:26"},"nodeType":"YulFunctionCall","src":"5084:79:26"},"nodeType":"YulExpressionStatement","src":"5084:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5063:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"5068:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5059:3:26"},"nodeType":"YulFunctionCall","src":"5059:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"5077:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5056:2:26"},"nodeType":"YulFunctionCall","src":"5056:25:26"},"nodeType":"YulIf","src":"5053:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5211:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"5216:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"5221:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5174:36:26"},"nodeType":"YulFunctionCall","src":"5174:54:26"},"nodeType":"YulExpressionStatement","src":"5174:54:26"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4866:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"4871:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4879:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4887:5:26","type":""}],"src":"4809:425:26"},{"body":{"nodeType":"YulBlock","src":"5316:278:26","statements":[{"body":{"nodeType":"YulBlock","src":"5365:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5367:77:26"},"nodeType":"YulFunctionCall","src":"5367:79:26"},"nodeType":"YulExpressionStatement","src":"5367:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5344:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5352:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5340:3:26"},"nodeType":"YulFunctionCall","src":"5340:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"5359:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5336:3:26"},"nodeType":"YulFunctionCall","src":"5336:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5329:6:26"},"nodeType":"YulFunctionCall","src":"5329:35:26"},"nodeType":"YulIf","src":"5326:122:26"},{"nodeType":"YulVariableDeclaration","src":"5457:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5484:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5471:12:26"},"nodeType":"YulFunctionCall","src":"5471:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5461:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5500:88:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5561:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5569:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5557:3:26"},"nodeType":"YulFunctionCall","src":"5557:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"5576:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"5584:3:26"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5509:47:26"},"nodeType":"YulFunctionCall","src":"5509:79:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5500:5:26"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5294:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"5302:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5310:5:26","type":""}],"src":"5254:340:26"},{"body":{"nodeType":"YulBlock","src":"5676:433:26","statements":[{"body":{"nodeType":"YulBlock","src":"5722:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5724:77:26"},"nodeType":"YulFunctionCall","src":"5724:79:26"},"nodeType":"YulExpressionStatement","src":"5724:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5697:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5706:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5693:3:26"},"nodeType":"YulFunctionCall","src":"5693:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5718:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5689:3:26"},"nodeType":"YulFunctionCall","src":"5689:32:26"},"nodeType":"YulIf","src":"5686:119:26"},{"nodeType":"YulBlock","src":"5815:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5830:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5861:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5872:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5857:3:26"},"nodeType":"YulFunctionCall","src":"5857:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5844:12:26"},"nodeType":"YulFunctionCall","src":"5844:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5834:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5922:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5924:77:26"},"nodeType":"YulFunctionCall","src":"5924:79:26"},"nodeType":"YulExpressionStatement","src":"5924:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5894:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5902:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5891:2:26"},"nodeType":"YulFunctionCall","src":"5891:30:26"},"nodeType":"YulIf","src":"5888:117:26"},{"nodeType":"YulAssignment","src":"6019:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6064:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6075:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6060:3:26"},"nodeType":"YulFunctionCall","src":"6060:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6084:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6029:30:26"},"nodeType":"YulFunctionCall","src":"6029:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6019:6:26"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5646:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5657:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5669:6:26","type":""}],"src":"5600:509:26"},{"body":{"nodeType":"YulBlock","src":"6160:81:26","statements":[{"nodeType":"YulAssignment","src":"6170:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6185:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"6192:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6181:3:26"},"nodeType":"YulFunctionCall","src":"6181:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6170:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6142:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6152:7:26","type":""}],"src":"6115:126:26"},{"body":{"nodeType":"YulBlock","src":"6292:51:26","statements":[{"nodeType":"YulAssignment","src":"6302:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6331:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6313:17:26"},"nodeType":"YulFunctionCall","src":"6313:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6302:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6274:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6284:7:26","type":""}],"src":"6247:96:26"},{"body":{"nodeType":"YulBlock","src":"6392:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"6449:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6458:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6461:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6451:6:26"},"nodeType":"YulFunctionCall","src":"6451:12:26"},"nodeType":"YulExpressionStatement","src":"6451:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6415:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6440:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6422:17:26"},"nodeType":"YulFunctionCall","src":"6422:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6412:2:26"},"nodeType":"YulFunctionCall","src":"6412:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6405:6:26"},"nodeType":"YulFunctionCall","src":"6405:43:26"},"nodeType":"YulIf","src":"6402:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6385:5:26","type":""}],"src":"6349:122:26"},{"body":{"nodeType":"YulBlock","src":"6529:87:26","statements":[{"nodeType":"YulAssignment","src":"6539:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6561:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6548:12:26"},"nodeType":"YulFunctionCall","src":"6548:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6539:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6604:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"6577:26:26"},"nodeType":"YulFunctionCall","src":"6577:33:26"},"nodeType":"YulExpressionStatement","src":"6577:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6507:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"6515:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6523:5:26","type":""}],"src":"6477:139:26"},{"body":{"nodeType":"YulBlock","src":"6688:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"6734:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6736:77:26"},"nodeType":"YulFunctionCall","src":"6736:79:26"},"nodeType":"YulExpressionStatement","src":"6736:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6709:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6718:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6705:3:26"},"nodeType":"YulFunctionCall","src":"6705:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6730:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6701:3:26"},"nodeType":"YulFunctionCall","src":"6701:32:26"},"nodeType":"YulIf","src":"6698:119:26"},{"nodeType":"YulBlock","src":"6827:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6842:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6856:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6846:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6871:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6906:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6917:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6902:3:26"},"nodeType":"YulFunctionCall","src":"6902:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6926:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6881:20:26"},"nodeType":"YulFunctionCall","src":"6881:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6871:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6658:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6669:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6681:6:26","type":""}],"src":"6622:329:26"},{"body":{"nodeType":"YulBlock","src":"7002:32:26","statements":[{"nodeType":"YulAssignment","src":"7012:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"7023:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7012:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6984:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6994:7:26","type":""}],"src":"6957:77:26"},{"body":{"nodeType":"YulBlock","src":"7105:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7122:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7145:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7127:17:26"},"nodeType":"YulFunctionCall","src":"7127:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7115:6:26"},"nodeType":"YulFunctionCall","src":"7115:37:26"},"nodeType":"YulExpressionStatement","src":"7115:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7093:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7100:3:26","type":""}],"src":"7040:118:26"},{"body":{"nodeType":"YulBlock","src":"7262:124:26","statements":[{"nodeType":"YulAssignment","src":"7272:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7284:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7295:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7280:3:26"},"nodeType":"YulFunctionCall","src":"7280:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7272:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7352:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7365:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7376:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7361:3:26"},"nodeType":"YulFunctionCall","src":"7361:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7308:43:26"},"nodeType":"YulFunctionCall","src":"7308:71:26"},"nodeType":"YulExpressionStatement","src":"7308:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7234:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7246:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7257:4:26","type":""}],"src":"7164:222:26"},{"body":{"nodeType":"YulBlock","src":"7492:40:26","statements":[{"nodeType":"YulAssignment","src":"7503:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7519:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7513:5:26"},"nodeType":"YulFunctionCall","src":"7513:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7503:6:26"}]}]},"name":"array_length_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7475:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7485:6:26","type":""}],"src":"7392:140:26"},{"body":{"nodeType":"YulBlock","src":"7675:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7692:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"7697:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7685:6:26"},"nodeType":"YulFunctionCall","src":"7685:19:26"},"nodeType":"YulExpressionStatement","src":"7685:19:26"},{"nodeType":"YulAssignment","src":"7713:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7732:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"7737:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7728:3:26"},"nodeType":"YulFunctionCall","src":"7728:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7713:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7647:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"7652:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7663:11:26","type":""}],"src":"7538:210:26"},{"body":{"nodeType":"YulBlock","src":"7852:60:26","statements":[{"nodeType":"YulAssignment","src":"7862:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"7870:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7862:4:26"}]},{"nodeType":"YulAssignment","src":"7883:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7895:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"7900:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7891:3:26"},"nodeType":"YulFunctionCall","src":"7891:14:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7883:4:26"}]}]},"name":"array_dataslot_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7839:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7847:4:26","type":""}],"src":"7754:158:26"},{"body":{"nodeType":"YulBlock","src":"7973:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7990:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8013:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7995:17:26"},"nodeType":"YulFunctionCall","src":"7995:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7983:6:26"},"nodeType":"YulFunctionCall","src":"7983:37:26"},"nodeType":"YulExpressionStatement","src":"7983:37:26"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7961:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7968:3:26","type":""}],"src":"7918:108:26"},{"body":{"nodeType":"YulBlock","src":"8091:40:26","statements":[{"nodeType":"YulAssignment","src":"8102:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8118:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8112:5:26"},"nodeType":"YulFunctionCall","src":"8112:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8102:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8074:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8084:6:26","type":""}],"src":"8032:99:26"},{"body":{"nodeType":"YulBlock","src":"8223:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8240:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8245:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8233:6:26"},"nodeType":"YulFunctionCall","src":"8233:19:26"},"nodeType":"YulExpressionStatement","src":"8233:19:26"},{"nodeType":"YulAssignment","src":"8261:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8280:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"8285:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8276:3:26"},"nodeType":"YulFunctionCall","src":"8276:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8261:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8195:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8200:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8211:11:26","type":""}],"src":"8137:159:26"},{"body":{"nodeType":"YulBlock","src":"8364:184:26","statements":[{"nodeType":"YulVariableDeclaration","src":"8374:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"8383:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8378:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"8443:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8468:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"8473:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8464:3:26"},"nodeType":"YulFunctionCall","src":"8464:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8487:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"8492:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8483:3:26"},"nodeType":"YulFunctionCall","src":"8483:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8477:5:26"},"nodeType":"YulFunctionCall","src":"8477:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8457:6:26"},"nodeType":"YulFunctionCall","src":"8457:39:26"},"nodeType":"YulExpressionStatement","src":"8457:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8404:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"8407:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8401:2:26"},"nodeType":"YulFunctionCall","src":"8401:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8415:19:26","statements":[{"nodeType":"YulAssignment","src":"8417:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8426:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"8429:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8422:3:26"},"nodeType":"YulFunctionCall","src":"8422:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8417:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"8397:3:26","statements":[]},"src":"8393:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8526:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8531:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8522:3:26"},"nodeType":"YulFunctionCall","src":"8522:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"8540:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8515:6:26"},"nodeType":"YulFunctionCall","src":"8515:27:26"},"nodeType":"YulExpressionStatement","src":"8515:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8346:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8351:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8356:6:26","type":""}],"src":"8302:246:26"},{"body":{"nodeType":"YulBlock","src":"8636:275:26","statements":[{"nodeType":"YulVariableDeclaration","src":"8646:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8693:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8660:32:26"},"nodeType":"YulFunctionCall","src":"8660:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8650:6:26","type":""}]},{"nodeType":"YulAssignment","src":"8708:68:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8764:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8769:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8715:48:26"},"nodeType":"YulFunctionCall","src":"8715:61:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8708:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8824:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"8831:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8820:3:26"},"nodeType":"YulFunctionCall","src":"8820:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"8838:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8843:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8785:34:26"},"nodeType":"YulFunctionCall","src":"8785:65:26"},"nodeType":"YulExpressionStatement","src":"8785:65:26"},{"nodeType":"YulAssignment","src":"8859:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8870:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8897:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8875:21:26"},"nodeType":"YulFunctionCall","src":"8875:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8866:3:26"},"nodeType":"YulFunctionCall","src":"8866:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8859:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8617:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8624:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8632:3:26","type":""}],"src":"8554:357:26"},{"body":{"nodeType":"YulBlock","src":"8966:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8983:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9003:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"8988:14:26"},"nodeType":"YulFunctionCall","src":"8988:21:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8976:6:26"},"nodeType":"YulFunctionCall","src":"8976:34:26"},"nodeType":"YulExpressionStatement","src":"8976:34:26"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8954:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8961:3:26","type":""}],"src":"8917:99:26"},{"body":{"nodeType":"YulBlock","src":"9200:915:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9210:26:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9226:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"9231:4:26","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9222:3:26"},"nodeType":"YulFunctionCall","src":"9222:14:26"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"9214:4:26","type":""}]},{"nodeType":"YulBlock","src":"9246:166:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9283:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9313:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"9320:4:26","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9309:3:26"},"nodeType":"YulFunctionCall","src":"9309:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9303:5:26"},"nodeType":"YulFunctionCall","src":"9303:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9287:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9373:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9391:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"9396:4:26","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9387:3:26"},"nodeType":"YulFunctionCall","src":"9387:14:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"9339:33:26"},"nodeType":"YulFunctionCall","src":"9339:63:26"},"nodeType":"YulExpressionStatement","src":"9339:63:26"}]},{"nodeType":"YulBlock","src":"9422:243:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9465:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9495:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"9502:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9491:3:26"},"nodeType":"YulFunctionCall","src":"9491:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9485:5:26"},"nodeType":"YulFunctionCall","src":"9485:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9469:12:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9533:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"9538:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9529:3:26"},"nodeType":"YulFunctionCall","src":"9529:14:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9549:4:26"},{"name":"pos","nodeType":"YulIdentifier","src":"9555:3:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9545:3:26"},"nodeType":"YulFunctionCall","src":"9545:14:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9522:6:26"},"nodeType":"YulFunctionCall","src":"9522:38:26"},"nodeType":"YulExpressionStatement","src":"9522:38:26"},{"nodeType":"YulAssignment","src":"9573:81:26","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9635:12:26"},{"name":"tail","nodeType":"YulIdentifier","src":"9649:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9581:53:26"},"nodeType":"YulFunctionCall","src":"9581:73:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9573:4:26"}]}]},{"nodeType":"YulBlock","src":"9675:241:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9716:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9746:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"9753:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9742:3:26"},"nodeType":"YulFunctionCall","src":"9742:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9736:5:26"},"nodeType":"YulFunctionCall","src":"9736:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9720:12:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9784:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"9789:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9780:3:26"},"nodeType":"YulFunctionCall","src":"9780:14:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9800:4:26"},{"name":"pos","nodeType":"YulIdentifier","src":"9806:3:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9796:3:26"},"nodeType":"YulFunctionCall","src":"9796:14:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9773:6:26"},"nodeType":"YulFunctionCall","src":"9773:38:26"},"nodeType":"YulExpressionStatement","src":"9773:38:26"},{"nodeType":"YulAssignment","src":"9824:81:26","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9886:12:26"},{"name":"tail","nodeType":"YulIdentifier","src":"9900:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9832:53:26"},"nodeType":"YulFunctionCall","src":"9832:73:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9824:4:26"}]}]},{"nodeType":"YulBlock","src":"9926:162:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9965:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9995:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"10002:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9991:3:26"},"nodeType":"YulFunctionCall","src":"9991:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9985:5:26"},"nodeType":"YulFunctionCall","src":"9985:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9969:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10049:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10067:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"10072:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10063:3:26"},"nodeType":"YulFunctionCall","src":"10063:14:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"10021:27:26"},"nodeType":"YulFunctionCall","src":"10021:57:26"},"nodeType":"YulExpressionStatement","src":"10021:57:26"}]},{"nodeType":"YulAssignment","src":"10098:11:26","value":{"name":"tail","nodeType":"YulIdentifier","src":"10105:4:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10098:3:26"}]}]},"name":"abi_encode_t_struct$_Question_$4220_memory_ptr_to_t_struct$_Question_$4220_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9179:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9186:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9195:3:26","type":""}],"src":"9084:1031:26"},{"body":{"nodeType":"YulBlock","src":"10253:128:26","statements":[{"nodeType":"YulAssignment","src":"10263:112:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10363:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"10371:3:26"}],"functionName":{"name":"abi_encode_t_struct$_Question_$4220_memory_ptr_to_t_struct$_Question_$4220_memory_ptr","nodeType":"YulIdentifier","src":"10277:85:26"},"nodeType":"YulFunctionCall","src":"10277:98:26"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"10263:10:26"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_Question_$4220_memory_ptr_to_t_struct$_Question_$4220_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"10226:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10234:3:26","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"10242:10:26","type":""}],"src":"10121:260:26"},{"body":{"nodeType":"YulBlock","src":"10488:38:26","statements":[{"nodeType":"YulAssignment","src":"10498:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10510:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"10515:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10506:3:26"},"nodeType":"YulFunctionCall","src":"10506:14:26"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"10498:4:26"}]}]},"name":"array_nextElement_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10475:3:26","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"10483:4:26","type":""}],"src":"10387:139:26"},{"body":{"nodeType":"YulBlock","src":"10774:943:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10784:94:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10872:5:26"}],"functionName":{"name":"array_length_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10798:73:26"},"nodeType":"YulFunctionCall","src":"10798:80:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10788:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10887:119:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10994:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"10999:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10894:99:26"},"nodeType":"YulFunctionCall","src":"10894:112:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10887:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"11015:20:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"11032:3:26"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"11019:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11044:39:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11060:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11069:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"11077:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11065:3:26"},"nodeType":"YulFunctionCall","src":"11065:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11056:3:26"},"nodeType":"YulFunctionCall","src":"11056:27:26"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"11048:4:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11092:97:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11183:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11107:75:26"},"nodeType":"YulFunctionCall","src":"11107:82:26"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"11096:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11198:21:26","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"11212:7:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"11202:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"11288:384:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11309:3:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11318:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"11324:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11314:3:26"},"nodeType":"YulFunctionCall","src":"11314:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11302:6:26"},"nodeType":"YulFunctionCall","src":"11302:33:26"},"nodeType":"YulExpressionStatement","src":"11302:33:26"},{"nodeType":"YulVariableDeclaration","src":"11348:34:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11375:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11369:5:26"},"nodeType":"YulFunctionCall","src":"11369:13:26"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"11352:13:26","type":""}]},{"nodeType":"YulAssignment","src":"11395:124:26","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"11499:13:26"},{"name":"tail","nodeType":"YulIdentifier","src":"11514:4:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_Question_$4220_memory_ptr_to_t_struct$_Question_$4220_memory_ptr","nodeType":"YulIdentifier","src":"11403:95:26"},"nodeType":"YulFunctionCall","src":"11403:116:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11395:4:26"}]},{"nodeType":"YulAssignment","src":"11532:96:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11621:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11542:78:26"},"nodeType":"YulFunctionCall","src":"11542:86:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11532:6:26"}]},{"nodeType":"YulAssignment","src":"11641:21:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11652:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11657:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11648:3:26"},"nodeType":"YulFunctionCall","src":"11648:14:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11641:3:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11250:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"11253:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11247:2:26"},"nodeType":"YulFunctionCall","src":"11247:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11261:18:26","statements":[{"nodeType":"YulAssignment","src":"11263:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11272:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"11275:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11268:3:26"},"nodeType":"YulFunctionCall","src":"11268:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11263:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"11232:14:26","statements":[{"nodeType":"YulVariableDeclaration","src":"11234:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"11243:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11238:1:26","type":""}]}]},"src":"11228:444:26"},{"nodeType":"YulAssignment","src":"11681:11:26","value":{"name":"tail","nodeType":"YulIdentifier","src":"11688:4:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11681:3:26"}]},{"nodeType":"YulAssignment","src":"11701:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"11708:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11701:3:26"}]}]},"name":"abi_encode_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10753:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10760:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10769:3:26","type":""}],"src":"10598:1119:26"},{"body":{"nodeType":"YulBlock","src":"11923:277:26","statements":[{"nodeType":"YulAssignment","src":"11933:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11945:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11956:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11941:3:26"},"nodeType":"YulFunctionCall","src":"11941:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11933:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11980:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11991:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11976:3:26"},"nodeType":"YulFunctionCall","src":"11976:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11999:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"12005:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11995:3:26"},"nodeType":"YulFunctionCall","src":"11995:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11969:6:26"},"nodeType":"YulFunctionCall","src":"11969:47:26"},"nodeType":"YulExpressionStatement","src":"11969:47:26"},{"nodeType":"YulAssignment","src":"12025:168:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12179:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"12188:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12033:145:26"},"nodeType":"YulFunctionCall","src":"12033:160:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12025:4:26"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11895:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11907:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11918:4:26","type":""}],"src":"11723:477:26"},{"body":{"nodeType":"YulBlock","src":"12249:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"12306:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12315:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12318:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12308:6:26"},"nodeType":"YulFunctionCall","src":"12308:12:26"},"nodeType":"YulExpressionStatement","src":"12308:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12272:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12297:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12279:17:26"},"nodeType":"YulFunctionCall","src":"12279:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12269:2:26"},"nodeType":"YulFunctionCall","src":"12269:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12262:6:26"},"nodeType":"YulFunctionCall","src":"12262:43:26"},"nodeType":"YulIf","src":"12259:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12242:5:26","type":""}],"src":"12206:122:26"},{"body":{"nodeType":"YulBlock","src":"12386:87:26","statements":[{"nodeType":"YulAssignment","src":"12396:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12418:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12405:12:26"},"nodeType":"YulFunctionCall","src":"12405:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12396:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12461:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"12434:26:26"},"nodeType":"YulFunctionCall","src":"12434:33:26"},"nodeType":"YulExpressionStatement","src":"12434:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12364:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"12372:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12380:5:26","type":""}],"src":"12334:139:26"},{"body":{"nodeType":"YulBlock","src":"12545:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"12650:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"12652:16:26"},"nodeType":"YulFunctionCall","src":"12652:18:26"},"nodeType":"YulExpressionStatement","src":"12652:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12622:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12630:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12619:2:26"},"nodeType":"YulFunctionCall","src":"12619:30:26"},"nodeType":"YulIf","src":"12616:56:26"},{"nodeType":"YulAssignment","src":"12682:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12712:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"12690:21:26"},"nodeType":"YulFunctionCall","src":"12690:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"12682:4:26"}]},{"nodeType":"YulAssignment","src":"12756:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"12768:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"12774:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12764:3:26"},"nodeType":"YulFunctionCall","src":"12764:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"12756:4:26"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"12529:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"12540:4:26","type":""}],"src":"12479:307:26"},{"body":{"nodeType":"YulBlock","src":"12875:340:26","statements":[{"nodeType":"YulAssignment","src":"12885:74:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12951:6:26"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12910:40:26"},"nodeType":"YulFunctionCall","src":"12910:48:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"12894:15:26"},"nodeType":"YulFunctionCall","src":"12894:65:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"12885:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"12975:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"12982:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12968:6:26"},"nodeType":"YulFunctionCall","src":"12968:21:26"},"nodeType":"YulExpressionStatement","src":"12968:21:26"},{"nodeType":"YulVariableDeclaration","src":"12998:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13013:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"13020:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13009:3:26"},"nodeType":"YulFunctionCall","src":"13009:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"13002:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"13063:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"13065:77:26"},"nodeType":"YulFunctionCall","src":"13065:79:26"},"nodeType":"YulExpressionStatement","src":"13065:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13044:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13049:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13040:3:26"},"nodeType":"YulFunctionCall","src":"13040:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"13058:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13037:2:26"},"nodeType":"YulFunctionCall","src":"13037:25:26"},"nodeType":"YulIf","src":"13034:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13192:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"13197:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13202:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13155:36:26"},"nodeType":"YulFunctionCall","src":"13155:54:26"},"nodeType":"YulExpressionStatement","src":"13155:54:26"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"12848:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"12853:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"12861:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"12869:5:26","type":""}],"src":"12792:423:26"},{"body":{"nodeType":"YulBlock","src":"13295:277:26","statements":[{"body":{"nodeType":"YulBlock","src":"13344:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"13346:77:26"},"nodeType":"YulFunctionCall","src":"13346:79:26"},"nodeType":"YulExpressionStatement","src":"13346:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13323:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13331:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13319:3:26"},"nodeType":"YulFunctionCall","src":"13319:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"13338:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13315:3:26"},"nodeType":"YulFunctionCall","src":"13315:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13308:6:26"},"nodeType":"YulFunctionCall","src":"13308:35:26"},"nodeType":"YulIf","src":"13305:122:26"},{"nodeType":"YulVariableDeclaration","src":"13436:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13463:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13450:12:26"},"nodeType":"YulFunctionCall","src":"13450:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13440:6:26","type":""}]},{"nodeType":"YulAssignment","src":"13479:87:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13539:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13547:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13535:3:26"},"nodeType":"YulFunctionCall","src":"13535:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"13554:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"13562:3:26"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13488:46:26"},"nodeType":"YulFunctionCall","src":"13488:78:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13479:5:26"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13273:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"13281:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13289:5:26","type":""}],"src":"13234:338:26"},{"body":{"nodeType":"YulBlock","src":"13687:688:26","statements":[{"body":{"nodeType":"YulBlock","src":"13733:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13735:77:26"},"nodeType":"YulFunctionCall","src":"13735:79:26"},"nodeType":"YulExpressionStatement","src":"13735:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13708:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"13717:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13704:3:26"},"nodeType":"YulFunctionCall","src":"13704:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"13729:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13700:3:26"},"nodeType":"YulFunctionCall","src":"13700:32:26"},"nodeType":"YulIf","src":"13697:119:26"},{"nodeType":"YulBlock","src":"13826:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13841:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"13855:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13845:6:26","type":""}]},{"nodeType":"YulAssignment","src":"13870:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13905:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"13916:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13901:3:26"},"nodeType":"YulFunctionCall","src":"13901:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13925:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13880:20:26"},"nodeType":"YulFunctionCall","src":"13880:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13870:6:26"}]}]},{"nodeType":"YulBlock","src":"13953:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13968:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"13982:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13972:6:26","type":""}]},{"nodeType":"YulAssignment","src":"13998:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14033:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"14044:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14029:3:26"},"nodeType":"YulFunctionCall","src":"14029:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14053:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14008:20:26"},"nodeType":"YulFunctionCall","src":"14008:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13998:6:26"}]}]},{"nodeType":"YulBlock","src":"14081:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"14096:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14127:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14138:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14123:3:26"},"nodeType":"YulFunctionCall","src":"14123:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14110:12:26"},"nodeType":"YulFunctionCall","src":"14110:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14100:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"14189:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14191:77:26"},"nodeType":"YulFunctionCall","src":"14191:79:26"},"nodeType":"YulExpressionStatement","src":"14191:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14161:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"14169:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14158:2:26"},"nodeType":"YulFunctionCall","src":"14158:30:26"},"nodeType":"YulIf","src":"14155:117:26"},{"nodeType":"YulAssignment","src":"14286:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14330:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"14341:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14326:3:26"},"nodeType":"YulFunctionCall","src":"14326:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14350:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14296:29:26"},"nodeType":"YulFunctionCall","src":"14296:62:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14286:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13641:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13652:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13664:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13672:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13680:6:26","type":""}],"src":"13578:797:26"},{"body":{"nodeType":"YulBlock","src":"14463:229:26","statements":[{"body":{"nodeType":"YulBlock","src":"14568:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14570:16:26"},"nodeType":"YulFunctionCall","src":"14570:18:26"},"nodeType":"YulExpressionStatement","src":"14570:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14540:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"14548:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14537:2:26"},"nodeType":"YulFunctionCall","src":"14537:30:26"},"nodeType":"YulIf","src":"14534:56:26"},{"nodeType":"YulAssignment","src":"14600:25:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14612:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"14620:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14608:3:26"},"nodeType":"YulFunctionCall","src":"14608:17:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14600:4:26"}]},{"nodeType":"YulAssignment","src":"14662:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"14674:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"14680:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14670:3:26"},"nodeType":"YulFunctionCall","src":"14670:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14662:4:26"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"14447:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"14458:4:26","type":""}],"src":"14381:311:26"},{"body":{"nodeType":"YulBlock","src":"14787:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14804:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14807:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14797:6:26"},"nodeType":"YulFunctionCall","src":"14797:12:26"},"nodeType":"YulExpressionStatement","src":"14797:12:26"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"14698:117:26"},{"body":{"nodeType":"YulBlock","src":"14940:608:26","statements":[{"nodeType":"YulAssignment","src":"14950:90:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15032:6:26"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14975:56:26"},"nodeType":"YulFunctionCall","src":"14975:64:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"14959:15:26"},"nodeType":"YulFunctionCall","src":"14959:81:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14950:5:26"}]},{"nodeType":"YulVariableDeclaration","src":"15049:16:26","value":{"name":"array","nodeType":"YulIdentifier","src":"15060:5:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"15053:3:26","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"15082:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"15089:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15075:6:26"},"nodeType":"YulFunctionCall","src":"15075:21:26"},"nodeType":"YulExpressionStatement","src":"15075:21:26"},{"nodeType":"YulAssignment","src":"15105:23:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"15116:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"15123:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15112:3:26"},"nodeType":"YulFunctionCall","src":"15112:16:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"15105:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"15138:44:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15156:6:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15168:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"15176:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15164:3:26"},"nodeType":"YulFunctionCall","src":"15164:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15152:3:26"},"nodeType":"YulFunctionCall","src":"15152:30:26"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"15142:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"15210:103:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"15224:77:26"},"nodeType":"YulFunctionCall","src":"15224:79:26"},"nodeType":"YulExpressionStatement","src":"15224:79:26"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"15197:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"15205:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15194:2:26"},"nodeType":"YulFunctionCall","src":"15194:15:26"},"nodeType":"YulIf","src":"15191:122:26"},{"body":{"nodeType":"YulBlock","src":"15398:144:26","statements":[{"nodeType":"YulVariableDeclaration","src":"15413:21:26","value":{"name":"src","nodeType":"YulIdentifier","src":"15431:3:26"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"15417:10:26","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15455:3:26"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"15481:10:26"},{"name":"end","nodeType":"YulIdentifier","src":"15493:3:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15460:20:26"},"nodeType":"YulFunctionCall","src":"15460:37:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15448:6:26"},"nodeType":"YulFunctionCall","src":"15448:50:26"},"nodeType":"YulExpressionStatement","src":"15448:50:26"},{"nodeType":"YulAssignment","src":"15511:21:26","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15522:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"15527:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15518:3:26"},"nodeType":"YulFunctionCall","src":"15518:14:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"15511:3:26"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15351:3:26"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"15356:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15348:2:26"},"nodeType":"YulFunctionCall","src":"15348:15:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15364:25:26","statements":[{"nodeType":"YulAssignment","src":"15366:21:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15377:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"15382:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15373:3:26"},"nodeType":"YulFunctionCall","src":"15373:14:26"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"15366:3:26"}]}]},"pre":{"nodeType":"YulBlock","src":"15326:21:26","statements":[{"nodeType":"YulVariableDeclaration","src":"15328:17:26","value":{"name":"offset","nodeType":"YulIdentifier","src":"15339:6:26"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"15332:3:26","type":""}]}]},"src":"15322:220:26"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14910:6:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"14918:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"14926:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"14934:5:26","type":""}],"src":"14838:710:26"},{"body":{"nodeType":"YulBlock","src":"15648:293:26","statements":[{"body":{"nodeType":"YulBlock","src":"15697:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"15699:77:26"},"nodeType":"YulFunctionCall","src":"15699:79:26"},"nodeType":"YulExpressionStatement","src":"15699:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15676:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"15684:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15672:3:26"},"nodeType":"YulFunctionCall","src":"15672:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"15691:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15668:3:26"},"nodeType":"YulFunctionCall","src":"15668:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15661:6:26"},"nodeType":"YulFunctionCall","src":"15661:35:26"},"nodeType":"YulIf","src":"15658:122:26"},{"nodeType":"YulVariableDeclaration","src":"15789:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15816:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15803:12:26"},"nodeType":"YulFunctionCall","src":"15803:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15793:6:26","type":""}]},{"nodeType":"YulAssignment","src":"15832:103:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15908:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"15916:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15904:3:26"},"nodeType":"YulFunctionCall","src":"15904:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"15923:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"15931:3:26"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15841:62:26"},"nodeType":"YulFunctionCall","src":"15841:94:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"15832:5:26"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15626:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"15634:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"15642:5:26","type":""}],"src":"15571:370:26"},{"body":{"nodeType":"YulBlock","src":"16029:229:26","statements":[{"body":{"nodeType":"YulBlock","src":"16134:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16136:16:26"},"nodeType":"YulFunctionCall","src":"16136:18:26"},"nodeType":"YulExpressionStatement","src":"16136:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16106:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"16114:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16103:2:26"},"nodeType":"YulFunctionCall","src":"16103:30:26"},"nodeType":"YulIf","src":"16100:56:26"},{"nodeType":"YulAssignment","src":"16166:25:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16178:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"16186:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16174:3:26"},"nodeType":"YulFunctionCall","src":"16174:17:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16166:4:26"}]},{"nodeType":"YulAssignment","src":"16228:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"16240:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"16246:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16236:3:26"},"nodeType":"YulFunctionCall","src":"16236:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16228:4:26"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"16013:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"16024:4:26","type":""}],"src":"15947:311:26"},{"body":{"nodeType":"YulBlock","src":"16383:608:26","statements":[{"nodeType":"YulAssignment","src":"16393:90:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16475:6:26"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16418:56:26"},"nodeType":"YulFunctionCall","src":"16418:64:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"16402:15:26"},"nodeType":"YulFunctionCall","src":"16402:81:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"16393:5:26"}]},{"nodeType":"YulVariableDeclaration","src":"16492:16:26","value":{"name":"array","nodeType":"YulIdentifier","src":"16503:5:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"16496:3:26","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"16525:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"16532:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16518:6:26"},"nodeType":"YulFunctionCall","src":"16518:21:26"},"nodeType":"YulExpressionStatement","src":"16518:21:26"},{"nodeType":"YulAssignment","src":"16548:23:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"16559:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"16566:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16555:3:26"},"nodeType":"YulFunctionCall","src":"16555:16:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"16548:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"16581:44:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16599:6:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16611:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"16619:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16607:3:26"},"nodeType":"YulFunctionCall","src":"16607:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16595:3:26"},"nodeType":"YulFunctionCall","src":"16595:30:26"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"16585:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"16653:103:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"16667:77:26"},"nodeType":"YulFunctionCall","src":"16667:79:26"},"nodeType":"YulExpressionStatement","src":"16667:79:26"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"16640:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"16648:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16637:2:26"},"nodeType":"YulFunctionCall","src":"16637:15:26"},"nodeType":"YulIf","src":"16634:122:26"},{"body":{"nodeType":"YulBlock","src":"16841:144:26","statements":[{"nodeType":"YulVariableDeclaration","src":"16856:21:26","value":{"name":"src","nodeType":"YulIdentifier","src":"16874:3:26"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"16860:10:26","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"16898:3:26"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"16924:10:26"},{"name":"end","nodeType":"YulIdentifier","src":"16936:3:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16903:20:26"},"nodeType":"YulFunctionCall","src":"16903:37:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16891:6:26"},"nodeType":"YulFunctionCall","src":"16891:50:26"},"nodeType":"YulExpressionStatement","src":"16891:50:26"},{"nodeType":"YulAssignment","src":"16954:21:26","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"16965:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"16970:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16961:3:26"},"nodeType":"YulFunctionCall","src":"16961:14:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"16954:3:26"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16794:3:26"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"16799:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16791:2:26"},"nodeType":"YulFunctionCall","src":"16791:15:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16807:25:26","statements":[{"nodeType":"YulAssignment","src":"16809:21:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16820:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"16825:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16816:3:26"},"nodeType":"YulFunctionCall","src":"16816:14:26"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"16809:3:26"}]}]},"pre":{"nodeType":"YulBlock","src":"16769:21:26","statements":[{"nodeType":"YulVariableDeclaration","src":"16771:17:26","value":{"name":"offset","nodeType":"YulIdentifier","src":"16782:6:26"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"16775:3:26","type":""}]}]},"src":"16765:220:26"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16353:6:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"16361:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"16369:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"16377:5:26","type":""}],"src":"16281:710:26"},{"body":{"nodeType":"YulBlock","src":"17091:293:26","statements":[{"body":{"nodeType":"YulBlock","src":"17140:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"17142:77:26"},"nodeType":"YulFunctionCall","src":"17142:79:26"},"nodeType":"YulExpressionStatement","src":"17142:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17119:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17127:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17115:3:26"},"nodeType":"YulFunctionCall","src":"17115:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"17134:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17111:3:26"},"nodeType":"YulFunctionCall","src":"17111:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17104:6:26"},"nodeType":"YulFunctionCall","src":"17104:35:26"},"nodeType":"YulIf","src":"17101:122:26"},{"nodeType":"YulVariableDeclaration","src":"17232:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17259:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17246:12:26"},"nodeType":"YulFunctionCall","src":"17246:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17236:6:26","type":""}]},{"nodeType":"YulAssignment","src":"17275:103:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17351:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17359:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17347:3:26"},"nodeType":"YulFunctionCall","src":"17347:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"17366:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"17374:3:26"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"17284:62:26"},"nodeType":"YulFunctionCall","src":"17284:94:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"17275:5:26"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"17069:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"17077:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"17085:5:26","type":""}],"src":"17014:370:26"},{"body":{"nodeType":"YulBlock","src":"17469:229:26","statements":[{"body":{"nodeType":"YulBlock","src":"17574:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"17576:16:26"},"nodeType":"YulFunctionCall","src":"17576:18:26"},"nodeType":"YulExpressionStatement","src":"17576:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17546:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17554:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17543:2:26"},"nodeType":"YulFunctionCall","src":"17543:30:26"},"nodeType":"YulIf","src":"17540:56:26"},{"nodeType":"YulAssignment","src":"17606:25:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17618:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17626:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17614:3:26"},"nodeType":"YulFunctionCall","src":"17614:17:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17606:4:26"}]},{"nodeType":"YulAssignment","src":"17668:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"17680:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"17686:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17676:3:26"},"nodeType":"YulFunctionCall","src":"17676:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17668:4:26"}]}]},"name":"array_allocation_size_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"17453:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"17464:4:26","type":""}],"src":"17390:308:26"},{"body":{"nodeType":"YulBlock","src":"17744:76:26","statements":[{"body":{"nodeType":"YulBlock","src":"17798:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17807:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17810:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17800:6:26"},"nodeType":"YulFunctionCall","src":"17800:12:26"},"nodeType":"YulExpressionStatement","src":"17800:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17767:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17789:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"17774:14:26"},"nodeType":"YulFunctionCall","src":"17774:21:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17764:2:26"},"nodeType":"YulFunctionCall","src":"17764:32:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17757:6:26"},"nodeType":"YulFunctionCall","src":"17757:40:26"},"nodeType":"YulIf","src":"17754:60:26"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17737:5:26","type":""}],"src":"17704:116:26"},{"body":{"nodeType":"YulBlock","src":"17875:84:26","statements":[{"nodeType":"YulAssignment","src":"17885:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17907:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17894:12:26"},"nodeType":"YulFunctionCall","src":"17894:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17885:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17947:5:26"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"17923:23:26"},"nodeType":"YulFunctionCall","src":"17923:30:26"},"nodeType":"YulExpressionStatement","src":"17923:30:26"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"17853:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"17861:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"17869:5:26","type":""}],"src":"17826:133:26"},{"body":{"nodeType":"YulBlock","src":"18078:602:26","statements":[{"nodeType":"YulAssignment","src":"18088:87:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18167:6:26"}],"functionName":{"name":"array_allocation_size_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"18113:53:26"},"nodeType":"YulFunctionCall","src":"18113:61:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"18097:15:26"},"nodeType":"YulFunctionCall","src":"18097:78:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"18088:5:26"}]},{"nodeType":"YulVariableDeclaration","src":"18184:16:26","value":{"name":"array","nodeType":"YulIdentifier","src":"18195:5:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"18188:3:26","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"18217:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"18224:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18210:6:26"},"nodeType":"YulFunctionCall","src":"18210:21:26"},"nodeType":"YulExpressionStatement","src":"18210:21:26"},{"nodeType":"YulAssignment","src":"18240:23:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"18251:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"18258:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18247:3:26"},"nodeType":"YulFunctionCall","src":"18247:16:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"18240:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"18273:44:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18291:6:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18303:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"18311:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18299:3:26"},"nodeType":"YulFunctionCall","src":"18299:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18287:3:26"},"nodeType":"YulFunctionCall","src":"18287:30:26"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"18277:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"18345:103:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"18359:77:26"},"nodeType":"YulFunctionCall","src":"18359:79:26"},"nodeType":"YulExpressionStatement","src":"18359:79:26"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"18332:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"18340:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18329:2:26"},"nodeType":"YulFunctionCall","src":"18329:15:26"},"nodeType":"YulIf","src":"18326:122:26"},{"body":{"nodeType":"YulBlock","src":"18533:141:26","statements":[{"nodeType":"YulVariableDeclaration","src":"18548:21:26","value":{"name":"src","nodeType":"YulIdentifier","src":"18566:3:26"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"18552:10:26","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18590:3:26"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"18613:10:26"},{"name":"end","nodeType":"YulIdentifier","src":"18625:3:26"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"18595:17:26"},"nodeType":"YulFunctionCall","src":"18595:34:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18583:6:26"},"nodeType":"YulFunctionCall","src":"18583:47:26"},"nodeType":"YulExpressionStatement","src":"18583:47:26"},{"nodeType":"YulAssignment","src":"18643:21:26","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18654:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"18659:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18650:3:26"},"nodeType":"YulFunctionCall","src":"18650:14:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"18643:3:26"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18486:3:26"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"18491:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18483:2:26"},"nodeType":"YulFunctionCall","src":"18483:15:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18499:25:26","statements":[{"nodeType":"YulAssignment","src":"18501:21:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18512:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"18517:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18508:3:26"},"nodeType":"YulFunctionCall","src":"18508:14:26"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"18501:3:26"}]}]},"pre":{"nodeType":"YulBlock","src":"18461:21:26","statements":[{"nodeType":"YulVariableDeclaration","src":"18463:17:26","value":{"name":"offset","nodeType":"YulIdentifier","src":"18474:6:26"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"18467:3:26","type":""}]}]},"src":"18457:217:26"}]},"name":"abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18048:6:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"18056:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"18064:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"18072:5:26","type":""}],"src":"17979:701:26"},{"body":{"nodeType":"YulBlock","src":"18774:290:26","statements":[{"body":{"nodeType":"YulBlock","src":"18823:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"18825:77:26"},"nodeType":"YulFunctionCall","src":"18825:79:26"},"nodeType":"YulExpressionStatement","src":"18825:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18802:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"18810:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18798:3:26"},"nodeType":"YulFunctionCall","src":"18798:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"18817:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18794:3:26"},"nodeType":"YulFunctionCall","src":"18794:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18787:6:26"},"nodeType":"YulFunctionCall","src":"18787:35:26"},"nodeType":"YulIf","src":"18784:122:26"},{"nodeType":"YulVariableDeclaration","src":"18915:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18942:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18929:12:26"},"nodeType":"YulFunctionCall","src":"18929:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18919:6:26","type":""}]},{"nodeType":"YulAssignment","src":"18958:100:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19031:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"19039:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19027:3:26"},"nodeType":"YulFunctionCall","src":"19027:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"19046:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"19054:3:26"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"18967:59:26"},"nodeType":"YulFunctionCall","src":"18967:91:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"18958:5:26"}]}]},"name":"abi_decode_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18752:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"18760:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"18768:5:26","type":""}],"src":"18700:364:26"},{"body":{"nodeType":"YulBlock","src":"19161:229:26","statements":[{"body":{"nodeType":"YulBlock","src":"19266:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19268:16:26"},"nodeType":"YulFunctionCall","src":"19268:18:26"},"nodeType":"YulExpressionStatement","src":"19268:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19238:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"19246:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19235:2:26"},"nodeType":"YulFunctionCall","src":"19235:30:26"},"nodeType":"YulIf","src":"19232:56:26"},{"nodeType":"YulAssignment","src":"19298:25:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19310:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"19318:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19306:3:26"},"nodeType":"YulFunctionCall","src":"19306:17:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"19298:4:26"}]},{"nodeType":"YulAssignment","src":"19360:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"19372:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"19378:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19368:3:26"},"nodeType":"YulFunctionCall","src":"19368:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"19360:4:26"}]}]},"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"19145:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"19156:4:26","type":""}],"src":"19070:320:26"},{"body":{"nodeType":"YulBlock","src":"19522:831:26","statements":[{"nodeType":"YulAssignment","src":"19532:99:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19623:6:26"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19557:65:26"},"nodeType":"YulFunctionCall","src":"19557:73:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"19541:15:26"},"nodeType":"YulFunctionCall","src":"19541:90:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"19532:5:26"}]},{"nodeType":"YulVariableDeclaration","src":"19640:16:26","value":{"name":"array","nodeType":"YulIdentifier","src":"19651:5:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"19644:3:26","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19673:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"19680:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19666:6:26"},"nodeType":"YulFunctionCall","src":"19666:21:26"},"nodeType":"YulExpressionStatement","src":"19666:21:26"},{"nodeType":"YulAssignment","src":"19696:23:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19707:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"19714:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19703:3:26"},"nodeType":"YulFunctionCall","src":"19703:16:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"19696:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"19729:44:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19747:6:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19759:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"19767:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19755:3:26"},"nodeType":"YulFunctionCall","src":"19755:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19743:3:26"},"nodeType":"YulFunctionCall","src":"19743:30:26"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"19733:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"19801:103:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"19815:77:26"},"nodeType":"YulFunctionCall","src":"19815:79:26"},"nodeType":"YulExpressionStatement","src":"19815:79:26"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"19788:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"19796:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19785:2:26"},"nodeType":"YulFunctionCall","src":"19785:15:26"},"nodeType":"YulIf","src":"19782:122:26"},{"body":{"nodeType":"YulBlock","src":"19989:358:26","statements":[{"nodeType":"YulVariableDeclaration","src":"20004:36:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20036:3:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20023:12:26"},"nodeType":"YulFunctionCall","src":"20023:17:26"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"20008:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"20092:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"20094:77:26"},"nodeType":"YulFunctionCall","src":"20094:79:26"},"nodeType":"YulExpressionStatement","src":"20094:79:26"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"20059:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"20072:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20056:2:26"},"nodeType":"YulFunctionCall","src":"20056:35:26"},"nodeType":"YulIf","src":"20053:122:26"},{"nodeType":"YulVariableDeclaration","src":"20188:42:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20210:6:26"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"20218:11:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20206:3:26"},"nodeType":"YulFunctionCall","src":"20206:24:26"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"20192:10:26","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20251:3:26"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"20286:10:26"},{"name":"end","nodeType":"YulIdentifier","src":"20298:3:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"20256:29:26"},"nodeType":"YulFunctionCall","src":"20256:46:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20244:6:26"},"nodeType":"YulFunctionCall","src":"20244:59:26"},"nodeType":"YulExpressionStatement","src":"20244:59:26"},{"nodeType":"YulAssignment","src":"20316:21:26","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20327:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"20332:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20323:3:26"},"nodeType":"YulFunctionCall","src":"20323:14:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"20316:3:26"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19942:3:26"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"19947:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19939:2:26"},"nodeType":"YulFunctionCall","src":"19939:15:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19955:25:26","statements":[{"nodeType":"YulAssignment","src":"19957:21:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19968:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19973:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19964:3:26"},"nodeType":"YulFunctionCall","src":"19964:14:26"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"19957:3:26"}]}]},"pre":{"nodeType":"YulBlock","src":"19917:21:26","statements":[{"nodeType":"YulVariableDeclaration","src":"19919:17:26","value":{"name":"offset","nodeType":"YulIdentifier","src":"19930:6:26"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"19923:3:26","type":""}]}]},"src":"19913:434:26"}]},"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19492:6:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"19500:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"19508:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"19516:5:26","type":""}],"src":"19411:942:26"},{"body":{"nodeType":"YulBlock","src":"20460:302:26","statements":[{"body":{"nodeType":"YulBlock","src":"20509:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"20511:77:26"},"nodeType":"YulFunctionCall","src":"20511:79:26"},"nodeType":"YulExpressionStatement","src":"20511:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20488:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"20496:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20484:3:26"},"nodeType":"YulFunctionCall","src":"20484:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"20503:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20480:3:26"},"nodeType":"YulFunctionCall","src":"20480:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20473:6:26"},"nodeType":"YulFunctionCall","src":"20473:35:26"},"nodeType":"YulIf","src":"20470:122:26"},{"nodeType":"YulVariableDeclaration","src":"20601:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20628:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20615:12:26"},"nodeType":"YulFunctionCall","src":"20615:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"20605:6:26","type":""}]},{"nodeType":"YulAssignment","src":"20644:112:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20729:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"20737:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20725:3:26"},"nodeType":"YulFunctionCall","src":"20725:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"20744:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"20752:3:26"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"20653:71:26"},"nodeType":"YulFunctionCall","src":"20653:103:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"20644:5:26"}]}]},"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"20438:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"20446:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"20454:5:26","type":""}],"src":"20374:388:26"},{"body":{"nodeType":"YulBlock","src":"21033:1708:26","statements":[{"body":{"nodeType":"YulBlock","src":"21080:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21082:77:26"},"nodeType":"YulFunctionCall","src":"21082:79:26"},"nodeType":"YulExpressionStatement","src":"21082:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21054:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"21063:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21050:3:26"},"nodeType":"YulFunctionCall","src":"21050:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"21075:3:26","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21046:3:26"},"nodeType":"YulFunctionCall","src":"21046:33:26"},"nodeType":"YulIf","src":"21043:120:26"},{"nodeType":"YulBlock","src":"21173:302:26","statements":[{"nodeType":"YulVariableDeclaration","src":"21188:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21219:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21230:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21215:3:26"},"nodeType":"YulFunctionCall","src":"21215:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21202:12:26"},"nodeType":"YulFunctionCall","src":"21202:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21192:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"21280:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21282:77:26"},"nodeType":"YulFunctionCall","src":"21282:79:26"},"nodeType":"YulExpressionStatement","src":"21282:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21252:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"21260:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21249:2:26"},"nodeType":"YulFunctionCall","src":"21249:30:26"},"nodeType":"YulIf","src":"21246:117:26"},{"nodeType":"YulAssignment","src":"21377:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21437:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"21448:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21433:3:26"},"nodeType":"YulFunctionCall","src":"21433:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21457:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"21387:45:26"},"nodeType":"YulFunctionCall","src":"21387:78:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21377:6:26"}]}]},{"nodeType":"YulBlock","src":"21485:303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"21500:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21531:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21542:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21527:3:26"},"nodeType":"YulFunctionCall","src":"21527:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21514:12:26"},"nodeType":"YulFunctionCall","src":"21514:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21504:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"21593:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21595:77:26"},"nodeType":"YulFunctionCall","src":"21595:79:26"},"nodeType":"YulExpressionStatement","src":"21595:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21565:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"21573:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21562:2:26"},"nodeType":"YulFunctionCall","src":"21562:30:26"},"nodeType":"YulIf","src":"21559:117:26"},{"nodeType":"YulAssignment","src":"21690:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21750:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"21761:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21746:3:26"},"nodeType":"YulFunctionCall","src":"21746:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21770:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"21700:45:26"},"nodeType":"YulFunctionCall","src":"21700:78:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21690:6:26"}]}]},{"nodeType":"YulBlock","src":"21798:303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"21813:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21844:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21855:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21840:3:26"},"nodeType":"YulFunctionCall","src":"21840:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21827:12:26"},"nodeType":"YulFunctionCall","src":"21827:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21817:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"21906:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21908:77:26"},"nodeType":"YulFunctionCall","src":"21908:79:26"},"nodeType":"YulExpressionStatement","src":"21908:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21878:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"21886:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21875:2:26"},"nodeType":"YulFunctionCall","src":"21875:30:26"},"nodeType":"YulIf","src":"21872:117:26"},{"nodeType":"YulAssignment","src":"22003:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22063:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"22074:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22059:3:26"},"nodeType":"YulFunctionCall","src":"22059:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22083:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22013:45:26"},"nodeType":"YulFunctionCall","src":"22013:78:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"22003:6:26"}]}]},{"nodeType":"YulBlock","src":"22111:300:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22126:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22157:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22168:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22153:3:26"},"nodeType":"YulFunctionCall","src":"22153:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22140:12:26"},"nodeType":"YulFunctionCall","src":"22140:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22130:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"22219:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"22221:77:26"},"nodeType":"YulFunctionCall","src":"22221:79:26"},"nodeType":"YulExpressionStatement","src":"22221:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22191:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"22199:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22188:2:26"},"nodeType":"YulFunctionCall","src":"22188:30:26"},"nodeType":"YulIf","src":"22185:117:26"},{"nodeType":"YulAssignment","src":"22316:85:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22373:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"22384:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22369:3:26"},"nodeType":"YulFunctionCall","src":"22369:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22393:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22326:42:26"},"nodeType":"YulFunctionCall","src":"22326:75:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"22316:6:26"}]}]},{"nodeType":"YulBlock","src":"22421:313:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22436:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22467:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22478:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22463:3:26"},"nodeType":"YulFunctionCall","src":"22463:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22450:12:26"},"nodeType":"YulFunctionCall","src":"22450:33:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22440:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"22530:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"22532:77:26"},"nodeType":"YulFunctionCall","src":"22532:79:26"},"nodeType":"YulExpressionStatement","src":"22532:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22502:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"22510:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22499:2:26"},"nodeType":"YulFunctionCall","src":"22499:30:26"},"nodeType":"YulIf","src":"22496:117:26"},{"nodeType":"YulAssignment","src":"22627:97:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22696:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"22707:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22692:3:26"},"nodeType":"YulFunctionCall","src":"22692:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22716:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22637:54:26"},"nodeType":"YulFunctionCall","src":"22637:87:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"22627:6:26"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bool_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20971:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20982:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20994:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21002:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21010:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21018:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"21026:6:26","type":""}],"src":"20768:1973:26"},{"body":{"nodeType":"YulBlock","src":"22870:814:26","statements":[{"body":{"nodeType":"YulBlock","src":"22917:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22919:77:26"},"nodeType":"YulFunctionCall","src":"22919:79:26"},"nodeType":"YulExpressionStatement","src":"22919:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22891:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"22900:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22887:3:26"},"nodeType":"YulFunctionCall","src":"22887:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"22912:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22883:3:26"},"nodeType":"YulFunctionCall","src":"22883:33:26"},"nodeType":"YulIf","src":"22880:120:26"},{"nodeType":"YulBlock","src":"23010:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"23025:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"23039:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23029:6:26","type":""}]},{"nodeType":"YulAssignment","src":"23054:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23089:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"23100:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23085:3:26"},"nodeType":"YulFunctionCall","src":"23085:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23109:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"23064:20:26"},"nodeType":"YulFunctionCall","src":"23064:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23054:6:26"}]}]},{"nodeType":"YulBlock","src":"23137:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"23152:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"23166:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23156:6:26","type":""}]},{"nodeType":"YulAssignment","src":"23182:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23217:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"23228:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23213:3:26"},"nodeType":"YulFunctionCall","src":"23213:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23237:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"23192:20:26"},"nodeType":"YulFunctionCall","src":"23192:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"23182:6:26"}]}]},{"nodeType":"YulBlock","src":"23265:115:26","statements":[{"nodeType":"YulVariableDeclaration","src":"23280:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"23294:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23284:6:26","type":""}]},{"nodeType":"YulAssignment","src":"23310:60:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23342:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"23353:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23338:3:26"},"nodeType":"YulFunctionCall","src":"23338:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23362:7:26"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"23320:17:26"},"nodeType":"YulFunctionCall","src":"23320:50:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"23310:6:26"}]}]},{"nodeType":"YulBlock","src":"23390:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"23405:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23436:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"23447:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23432:3:26"},"nodeType":"YulFunctionCall","src":"23432:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23419:12:26"},"nodeType":"YulFunctionCall","src":"23419:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23409:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"23498:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"23500:77:26"},"nodeType":"YulFunctionCall","src":"23500:79:26"},"nodeType":"YulExpressionStatement","src":"23500:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23470:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"23478:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23467:2:26"},"nodeType":"YulFunctionCall","src":"23467:30:26"},"nodeType":"YulIf","src":"23464:117:26"},{"nodeType":"YulAssignment","src":"23595:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23639:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"23650:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23635:3:26"},"nodeType":"YulFunctionCall","src":"23635:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23659:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"23605:29:26"},"nodeType":"YulFunctionCall","src":"23605:62:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"23595:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_boolt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22816:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22827:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22839:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22847:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22855:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22863:6:26","type":""}],"src":"22747:937:26"},{"body":{"nodeType":"YulBlock","src":"23733:43:26","statements":[{"nodeType":"YulAssignment","src":"23743:27:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23758:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"23765:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23754:3:26"},"nodeType":"YulFunctionCall","src":"23754:16:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"23743:7:26"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23715:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"23725:7:26","type":""}],"src":"23690:86:26"},{"body":{"nodeType":"YulBlock","src":"23843:51:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23860:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23881:5:26"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"23865:15:26"},"nodeType":"YulFunctionCall","src":"23865:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23853:6:26"},"nodeType":"YulFunctionCall","src":"23853:35:26"},"nodeType":"YulExpressionStatement","src":"23853:35:26"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23831:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23838:3:26","type":""}],"src":"23782:112:26"},{"body":{"nodeType":"YulBlock","src":"23994:120:26","statements":[{"nodeType":"YulAssignment","src":"24004:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24016:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24027:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24012:3:26"},"nodeType":"YulFunctionCall","src":"24012:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24004:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24080:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24093:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24104:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24089:3:26"},"nodeType":"YulFunctionCall","src":"24089:17:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"24040:39:26"},"nodeType":"YulFunctionCall","src":"24040:67:26"},"nodeType":"YulExpressionStatement","src":"24040:67:26"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23966:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23978:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23989:4:26","type":""}],"src":"23900:214:26"},{"body":{"nodeType":"YulBlock","src":"24186:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"24232:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24234:77:26"},"nodeType":"YulFunctionCall","src":"24234:79:26"},"nodeType":"YulExpressionStatement","src":"24234:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24207:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"24216:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24203:3:26"},"nodeType":"YulFunctionCall","src":"24203:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"24228:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24199:3:26"},"nodeType":"YulFunctionCall","src":"24199:32:26"},"nodeType":"YulIf","src":"24196:119:26"},{"nodeType":"YulBlock","src":"24325:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"24340:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"24354:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24344:6:26","type":""}]},{"nodeType":"YulAssignment","src":"24369:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24404:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"24415:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24400:3:26"},"nodeType":"YulFunctionCall","src":"24400:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24424:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"24379:20:26"},"nodeType":"YulFunctionCall","src":"24379:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24369:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24156:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24167:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24179:6:26","type":""}],"src":"24120:329:26"},{"body":{"nodeType":"YulBlock","src":"24520:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24537:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24560:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"24542:17:26"},"nodeType":"YulFunctionCall","src":"24542:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24530:6:26"},"nodeType":"YulFunctionCall","src":"24530:37:26"},"nodeType":"YulExpressionStatement","src":"24530:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24508:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24515:3:26","type":""}],"src":"24455:118:26"},{"body":{"nodeType":"YulBlock","src":"24675:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24692:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"24697:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24685:6:26"},"nodeType":"YulFunctionCall","src":"24685:19:26"},"nodeType":"YulExpressionStatement","src":"24685:19:26"},{"nodeType":"YulAssignment","src":"24713:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24732:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"24737:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24728:3:26"},"nodeType":"YulFunctionCall","src":"24728:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"24713:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24647:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"24652:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"24663:11:26","type":""}],"src":"24579:169:26"},{"body":{"nodeType":"YulBlock","src":"24846:285:26","statements":[{"nodeType":"YulVariableDeclaration","src":"24856:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24903:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"24870:32:26"},"nodeType":"YulFunctionCall","src":"24870:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24860:6:26","type":""}]},{"nodeType":"YulAssignment","src":"24918:78:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24984:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"24989:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24925:58:26"},"nodeType":"YulFunctionCall","src":"24925:71:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24918:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25044:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"25051:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25040:3:26"},"nodeType":"YulFunctionCall","src":"25040:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"25058:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"25063:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"25005:34:26"},"nodeType":"YulFunctionCall","src":"25005:65:26"},"nodeType":"YulExpressionStatement","src":"25005:65:26"},{"nodeType":"YulAssignment","src":"25079:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25090:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25117:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"25095:21:26"},"nodeType":"YulFunctionCall","src":"25095:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25086:3:26"},"nodeType":"YulFunctionCall","src":"25086:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25079:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24827:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24834:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24842:3:26","type":""}],"src":"24754:377:26"},{"body":{"nodeType":"YulBlock","src":"25353:507:26","statements":[{"nodeType":"YulAssignment","src":"25363:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25375:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25386:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25371:3:26"},"nodeType":"YulFunctionCall","src":"25371:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25363:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25444:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25457:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25468:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25453:3:26"},"nodeType":"YulFunctionCall","src":"25453:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25400:43:26"},"nodeType":"YulFunctionCall","src":"25400:71:26"},"nodeType":"YulExpressionStatement","src":"25400:71:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25492:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25503:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25488:3:26"},"nodeType":"YulFunctionCall","src":"25488:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25512:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"25518:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25508:3:26"},"nodeType":"YulFunctionCall","src":"25508:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25481:6:26"},"nodeType":"YulFunctionCall","src":"25481:48:26"},"nodeType":"YulExpressionStatement","src":"25481:48:26"},{"nodeType":"YulAssignment","src":"25538:86:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25610:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"25619:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25546:63:26"},"nodeType":"YulFunctionCall","src":"25546:78:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25538:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25645:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25656:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25641:3:26"},"nodeType":"YulFunctionCall","src":"25641:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25665:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"25671:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25661:3:26"},"nodeType":"YulFunctionCall","src":"25661:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25634:6:26"},"nodeType":"YulFunctionCall","src":"25634:48:26"},"nodeType":"YulExpressionStatement","src":"25634:48:26"},{"nodeType":"YulAssignment","src":"25691:86:26","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25763:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"25772:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25699:63:26"},"nodeType":"YulFunctionCall","src":"25699:78:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25691:4:26"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"25825:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25838:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25849:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25834:3:26"},"nodeType":"YulFunctionCall","src":"25834:18:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25787:37:26"},"nodeType":"YulFunctionCall","src":"25787:66:26"},"nodeType":"YulExpressionStatement","src":"25787:66:26"}]},"name":"abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_bool__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25301:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25313:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25321:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25329:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25337:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25348:4:26","type":""}],"src":"25137:723:26"},{"body":{"nodeType":"YulBlock","src":"25959:561:26","statements":[{"body":{"nodeType":"YulBlock","src":"26005:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"26007:77:26"},"nodeType":"YulFunctionCall","src":"26007:79:26"},"nodeType":"YulExpressionStatement","src":"26007:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25980:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"25989:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25976:3:26"},"nodeType":"YulFunctionCall","src":"25976:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"26001:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25972:3:26"},"nodeType":"YulFunctionCall","src":"25972:32:26"},"nodeType":"YulIf","src":"25969:119:26"},{"nodeType":"YulBlock","src":"26098:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"26113:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"26127:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26117:6:26","type":""}]},{"nodeType":"YulAssignment","src":"26142:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26177:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"26188:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26173:3:26"},"nodeType":"YulFunctionCall","src":"26173:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26197:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"26152:20:26"},"nodeType":"YulFunctionCall","src":"26152:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"26142:6:26"}]}]},{"nodeType":"YulBlock","src":"26225:288:26","statements":[{"nodeType":"YulVariableDeclaration","src":"26240:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26271:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26282:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26267:3:26"},"nodeType":"YulFunctionCall","src":"26267:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26254:12:26"},"nodeType":"YulFunctionCall","src":"26254:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26244:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"26333:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"26335:77:26"},"nodeType":"YulFunctionCall","src":"26335:79:26"},"nodeType":"YulExpressionStatement","src":"26335:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26305:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"26313:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26302:2:26"},"nodeType":"YulFunctionCall","src":"26302:30:26"},"nodeType":"YulIf","src":"26299:117:26"},{"nodeType":"YulAssignment","src":"26430:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26475:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"26486:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26471:3:26"},"nodeType":"YulFunctionCall","src":"26471:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26495:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"26440:30:26"},"nodeType":"YulFunctionCall","src":"26440:63:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"26430:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25921:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25932:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25944:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25952:6:26","type":""}],"src":"25866:654:26"},{"body":{"nodeType":"YulBlock","src":"26571:32:26","statements":[{"nodeType":"YulAssignment","src":"26581:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"26592:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26581:7:26"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26553:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26563:7:26","type":""}],"src":"26526:77:26"},{"body":{"nodeType":"YulBlock","src":"26652:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"26709:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26718:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26721:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26711:6:26"},"nodeType":"YulFunctionCall","src":"26711:12:26"},"nodeType":"YulExpressionStatement","src":"26711:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26675:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26700:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"26682:17:26"},"nodeType":"YulFunctionCall","src":"26682:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26672:2:26"},"nodeType":"YulFunctionCall","src":"26672:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26665:6:26"},"nodeType":"YulFunctionCall","src":"26665:43:26"},"nodeType":"YulIf","src":"26662:63:26"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26645:5:26","type":""}],"src":"26609:122:26"},{"body":{"nodeType":"YulBlock","src":"26789:87:26","statements":[{"nodeType":"YulAssignment","src":"26799:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26821:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26808:12:26"},"nodeType":"YulFunctionCall","src":"26808:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"26799:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26864:5:26"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"26837:26:26"},"nodeType":"YulFunctionCall","src":"26837:33:26"},"nodeType":"YulExpressionStatement","src":"26837:33:26"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"26767:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"26775:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"26783:5:26","type":""}],"src":"26737:139:26"},{"body":{"nodeType":"YulBlock","src":"26948:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"26994:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"26996:77:26"},"nodeType":"YulFunctionCall","src":"26996:79:26"},"nodeType":"YulExpressionStatement","src":"26996:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"26969:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"26978:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26965:3:26"},"nodeType":"YulFunctionCall","src":"26965:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"26990:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26961:3:26"},"nodeType":"YulFunctionCall","src":"26961:32:26"},"nodeType":"YulIf","src":"26958:119:26"},{"nodeType":"YulBlock","src":"27087:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"27102:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"27116:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27106:6:26","type":""}]},{"nodeType":"YulAssignment","src":"27131:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27166:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"27177:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27162:3:26"},"nodeType":"YulFunctionCall","src":"27162:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27186:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"27141:20:26"},"nodeType":"YulFunctionCall","src":"27141:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"27131:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26918:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"26929:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"26941:6:26","type":""}],"src":"26882:329:26"},{"body":{"nodeType":"YulBlock","src":"27275:40:26","statements":[{"nodeType":"YulAssignment","src":"27286:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27302:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27296:5:26"},"nodeType":"YulFunctionCall","src":"27296:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"27286:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27258:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"27268:6:26","type":""}],"src":"27217:98:26"},{"body":{"nodeType":"YulBlock","src":"27411:283:26","statements":[{"nodeType":"YulVariableDeclaration","src":"27421:52:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27467:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"27435:31:26"},"nodeType":"YulFunctionCall","src":"27435:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"27425:6:26","type":""}]},{"nodeType":"YulAssignment","src":"27482:77:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27547:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"27552:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27489:57:26"},"nodeType":"YulFunctionCall","src":"27489:70:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27482:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27607:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"27614:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27603:3:26"},"nodeType":"YulFunctionCall","src":"27603:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"27621:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"27626:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"27568:34:26"},"nodeType":"YulFunctionCall","src":"27568:65:26"},"nodeType":"YulExpressionStatement","src":"27568:65:26"},{"nodeType":"YulAssignment","src":"27642:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27653:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27680:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"27658:21:26"},"nodeType":"YulFunctionCall","src":"27658:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27649:3:26"},"nodeType":"YulFunctionCall","src":"27649:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27642:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27392:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27399:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27407:3:26","type":""}],"src":"27321:373:26"},{"body":{"nodeType":"YulBlock","src":"27816:193:26","statements":[{"nodeType":"YulAssignment","src":"27826:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27838:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27849:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27834:3:26"},"nodeType":"YulFunctionCall","src":"27834:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27826:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27873:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27884:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27869:3:26"},"nodeType":"YulFunctionCall","src":"27869:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27892:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"27898:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27888:3:26"},"nodeType":"YulFunctionCall","src":"27888:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27862:6:26"},"nodeType":"YulFunctionCall","src":"27862:47:26"},"nodeType":"YulExpressionStatement","src":"27862:47:26"},{"nodeType":"YulAssignment","src":"27918:84:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27988:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"27997:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27926:61:26"},"nodeType":"YulFunctionCall","src":"27926:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27918:4:26"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27788:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27800:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27811:4:26","type":""}],"src":"27700:309:26"},{"body":{"nodeType":"YulBlock","src":"28098:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"28144:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28146:77:26"},"nodeType":"YulFunctionCall","src":"28146:79:26"},"nodeType":"YulExpressionStatement","src":"28146:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28119:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"28128:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28115:3:26"},"nodeType":"YulFunctionCall","src":"28115:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"28140:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28111:3:26"},"nodeType":"YulFunctionCall","src":"28111:32:26"},"nodeType":"YulIf","src":"28108:119:26"},{"nodeType":"YulBlock","src":"28237:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"28252:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"28266:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28256:6:26","type":""}]},{"nodeType":"YulAssignment","src":"28281:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28316:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"28327:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28312:3:26"},"nodeType":"YulFunctionCall","src":"28312:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28336:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"28291:20:26"},"nodeType":"YulFunctionCall","src":"28291:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28281:6:26"}]}]},{"nodeType":"YulBlock","src":"28364:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"28379:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"28393:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28383:6:26","type":""}]},{"nodeType":"YulAssignment","src":"28409:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28444:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"28455:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28440:3:26"},"nodeType":"YulFunctionCall","src":"28440:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28464:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"28419:20:26"},"nodeType":"YulFunctionCall","src":"28419:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"28409:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28060:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28071:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28083:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28091:6:26","type":""}],"src":"28015:474:26"},{"body":{"nodeType":"YulBlock","src":"28584:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28601:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28604:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28594:6:26"},"nodeType":"YulFunctionCall","src":"28594:12:26"},"nodeType":"YulExpressionStatement","src":"28594:12:26"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"28495:117:26"},{"body":{"nodeType":"YulBlock","src":"28734:478:26","statements":[{"body":{"nodeType":"YulBlock","src":"28783:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"28785:77:26"},"nodeType":"YulFunctionCall","src":"28785:79:26"},"nodeType":"YulExpressionStatement","src":"28785:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28762:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"28770:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28758:3:26"},"nodeType":"YulFunctionCall","src":"28758:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"28777:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28754:3:26"},"nodeType":"YulFunctionCall","src":"28754:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28747:6:26"},"nodeType":"YulFunctionCall","src":"28747:35:26"},"nodeType":"YulIf","src":"28744:122:26"},{"nodeType":"YulAssignment","src":"28875:30:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28898:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"28885:12:26"},"nodeType":"YulFunctionCall","src":"28885:20:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"28875:6:26"}]},{"body":{"nodeType":"YulBlock","src":"28948:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"28950:77:26"},"nodeType":"YulFunctionCall","src":"28950:79:26"},"nodeType":"YulExpressionStatement","src":"28950:79:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28920:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"28928:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28917:2:26"},"nodeType":"YulFunctionCall","src":"28917:30:26"},"nodeType":"YulIf","src":"28914:117:26"},{"nodeType":"YulAssignment","src":"29040:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29056:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"29064:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29052:3:26"},"nodeType":"YulFunctionCall","src":"29052:17:26"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"29040:8:26"}]},{"body":{"nodeType":"YulBlock","src":"29123:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"29125:77:26"},"nodeType":"YulFunctionCall","src":"29125:79:26"},"nodeType":"YulExpressionStatement","src":"29125:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"29088:8:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29102:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"29110:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29098:3:26"},"nodeType":"YulFunctionCall","src":"29098:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29084:3:26"},"nodeType":"YulFunctionCall","src":"29084:32:26"},{"name":"end","nodeType":"YulIdentifier","src":"29118:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29081:2:26"},"nodeType":"YulFunctionCall","src":"29081:41:26"},"nodeType":"YulIf","src":"29078:128:26"}]},"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"28701:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"28709:3:26","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"28717:8:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"28727:6:26","type":""}],"src":"28633:579:26"},{"body":{"nodeType":"YulBlock","src":"29330:469:26","statements":[{"body":{"nodeType":"YulBlock","src":"29376:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"29378:77:26"},"nodeType":"YulFunctionCall","src":"29378:79:26"},"nodeType":"YulExpressionStatement","src":"29378:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"29351:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"29360:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29347:3:26"},"nodeType":"YulFunctionCall","src":"29347:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"29372:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"29343:3:26"},"nodeType":"YulFunctionCall","src":"29343:32:26"},"nodeType":"YulIf","src":"29340:119:26"},{"nodeType":"YulBlock","src":"29469:323:26","statements":[{"nodeType":"YulVariableDeclaration","src":"29484:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29515:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"29526:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29511:3:26"},"nodeType":"YulFunctionCall","src":"29511:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"29498:12:26"},"nodeType":"YulFunctionCall","src":"29498:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29488:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"29576:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"29578:77:26"},"nodeType":"YulFunctionCall","src":"29578:79:26"},"nodeType":"YulExpressionStatement","src":"29578:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29548:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"29556:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29545:2:26"},"nodeType":"YulFunctionCall","src":"29545:30:26"},"nodeType":"YulIf","src":"29542:117:26"},{"nodeType":"YulAssignment","src":"29673:109:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29754:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"29765:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29750:3:26"},"nodeType":"YulFunctionCall","src":"29750:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29774:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"29691:58:26"},"nodeType":"YulFunctionCall","src":"29691:91:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"29673:6:26"},{"name":"value1","nodeType":"YulIdentifier","src":"29681:6:26"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29292:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"29303:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"29315:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29323:6:26","type":""}],"src":"29218:581:26"},{"body":{"nodeType":"YulBlock","src":"29888:40:26","statements":[{"nodeType":"YulAssignment","src":"29899:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29915:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29909:5:26"},"nodeType":"YulFunctionCall","src":"29909:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"29899:6:26"}]}]},"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29871:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"29881:6:26","type":""}],"src":"29805:123:26"},{"body":{"nodeType":"YulBlock","src":"30054:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30071:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"30076:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30064:6:26"},"nodeType":"YulFunctionCall","src":"30064:19:26"},"nodeType":"YulExpressionStatement","src":"30064:19:26"},{"nodeType":"YulAssignment","src":"30092:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30111:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"30116:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30107:3:26"},"nodeType":"YulFunctionCall","src":"30107:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"30092:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30026:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"30031:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"30042:11:26","type":""}],"src":"29934:193:26"},{"body":{"nodeType":"YulBlock","src":"30214:60:26","statements":[{"nodeType":"YulAssignment","src":"30224:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"30232:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"30224:4:26"}]},{"nodeType":"YulAssignment","src":"30245:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"30257:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"30262:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30253:3:26"},"nodeType":"YulFunctionCall","src":"30253:14:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"30245:4:26"}]}]},"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"30201:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"30209:4:26","type":""}],"src":"30133:141:26"},{"body":{"nodeType":"YulBlock","src":"30365:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30382:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"30387:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30375:6:26"},"nodeType":"YulFunctionCall","src":"30375:19:26"},"nodeType":"YulExpressionStatement","src":"30375:19:26"},{"nodeType":"YulAssignment","src":"30403:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30422:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"30427:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30418:3:26"},"nodeType":"YulFunctionCall","src":"30418:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"30403:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30337:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"30342:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"30353:11:26","type":""}],"src":"30280:158:26"},{"body":{"nodeType":"YulBlock","src":"30524:273:26","statements":[{"nodeType":"YulVariableDeclaration","src":"30534:52:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30580:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"30548:31:26"},"nodeType":"YulFunctionCall","src":"30548:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"30538:6:26","type":""}]},{"nodeType":"YulAssignment","src":"30595:67:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30650:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"30655:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"30602:47:26"},"nodeType":"YulFunctionCall","src":"30602:60:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30595:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30710:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"30717:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30706:3:26"},"nodeType":"YulFunctionCall","src":"30706:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"30724:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"30729:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"30671:34:26"},"nodeType":"YulFunctionCall","src":"30671:65:26"},"nodeType":"YulExpressionStatement","src":"30671:65:26"},{"nodeType":"YulAssignment","src":"30745:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30756:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"30783:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"30761:21:26"},"nodeType":"YulFunctionCall","src":"30761:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30752:3:26"},"nodeType":"YulFunctionCall","src":"30752:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30745:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30505:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"30512:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30520:3:26","type":""}],"src":"30444:353:26"},{"body":{"nodeType":"YulBlock","src":"30901:94:26","statements":[{"nodeType":"YulAssignment","src":"30911:78:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30977:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"30985:3:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"30925:51:26"},"nodeType":"YulFunctionCall","src":"30925:64:26"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"30911:10:26"}]}]},"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"30874:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"30882:3:26","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"30890:10:26","type":""}],"src":"30803:192:26"},{"body":{"nodeType":"YulBlock","src":"31085:38:26","statements":[{"nodeType":"YulAssignment","src":"31095:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"31107:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"31112:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31103:3:26"},"nodeType":"YulFunctionCall","src":"31103:14:26"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"31095:4:26"}]}]},"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"31072:3:26","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"31080:4:26","type":""}],"src":"31001:122:26"},{"body":{"nodeType":"YulBlock","src":"31297:841:26","statements":[{"nodeType":"YulVariableDeclaration","src":"31307:77:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31378:5:26"}],"functionName":{"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"31321:56:26"},"nodeType":"YulFunctionCall","src":"31321:63:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"31311:6:26","type":""}]},{"nodeType":"YulAssignment","src":"31393:102:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31483:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"31488:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31400:82:26"},"nodeType":"YulFunctionCall","src":"31400:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31393:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"31504:20:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"31521:3:26"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"31508:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31533:39:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31549:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"31558:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"31566:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"31554:3:26"},"nodeType":"YulFunctionCall","src":"31554:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31545:3:26"},"nodeType":"YulFunctionCall","src":"31545:27:26"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"31537:4:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31581:80:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31655:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"31596:58:26"},"nodeType":"YulFunctionCall","src":"31596:65:26"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"31585:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31670:21:26","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"31684:7:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"31674:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"31760:333:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31781:3:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31790:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"31796:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31786:3:26"},"nodeType":"YulFunctionCall","src":"31786:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31774:6:26"},"nodeType":"YulFunctionCall","src":"31774:33:26"},"nodeType":"YulExpressionStatement","src":"31774:33:26"},{"nodeType":"YulVariableDeclaration","src":"31820:34:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"31847:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31841:5:26"},"nodeType":"YulFunctionCall","src":"31841:13:26"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"31824:13:26","type":""}]},{"nodeType":"YulAssignment","src":"31867:90:26","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"31937:13:26"},{"name":"tail","nodeType":"YulIdentifier","src":"31952:4:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"31875:61:26"},"nodeType":"YulFunctionCall","src":"31875:82:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31867:4:26"}]},{"nodeType":"YulAssignment","src":"31970:79:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"32042:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"31980:61:26"},"nodeType":"YulFunctionCall","src":"31980:69:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"31970:6:26"}]},{"nodeType":"YulAssignment","src":"32062:21:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32073:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"32078:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32069:3:26"},"nodeType":"YulFunctionCall","src":"32069:14:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32062:3:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31722:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"31725:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31719:2:26"},"nodeType":"YulFunctionCall","src":"31719:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"31733:18:26","statements":[{"nodeType":"YulAssignment","src":"31735:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31744:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"31747:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31740:3:26"},"nodeType":"YulFunctionCall","src":"31740:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"31735:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"31704:14:26","statements":[{"nodeType":"YulVariableDeclaration","src":"31706:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"31715:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"31710:1:26","type":""}]}]},"src":"31700:393:26"},{"nodeType":"YulAssignment","src":"32102:11:26","value":{"name":"tail","nodeType":"YulIdentifier","src":"32109:4:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32102:3:26"}]},{"nodeType":"YulAssignment","src":"32122:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"32129:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32122:3:26"}]}]},"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31276:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31283:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31292:3:26","type":""}],"src":"31155:983:26"},{"body":{"nodeType":"YulBlock","src":"32310:243:26","statements":[{"nodeType":"YulAssignment","src":"32320:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32332:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"32343:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32328:3:26"},"nodeType":"YulFunctionCall","src":"32328:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32320:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32367:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"32378:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32363:3:26"},"nodeType":"YulFunctionCall","src":"32363:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32386:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"32392:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32382:3:26"},"nodeType":"YulFunctionCall","src":"32382:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32356:6:26"},"nodeType":"YulFunctionCall","src":"32356:47:26"},"nodeType":"YulExpressionStatement","src":"32356:47:26"},{"nodeType":"YulAssignment","src":"32412:134:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32532:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"32541:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32420:111:26"},"nodeType":"YulFunctionCall","src":"32420:126:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32412:4:26"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32282:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32294:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32305:4:26","type":""}],"src":"32144:409:26"},{"body":{"nodeType":"YulBlock","src":"32699:943:26","statements":[{"body":{"nodeType":"YulBlock","src":"32746:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"32748:77:26"},"nodeType":"YulFunctionCall","src":"32748:79:26"},"nodeType":"YulExpressionStatement","src":"32748:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"32720:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"32729:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32716:3:26"},"nodeType":"YulFunctionCall","src":"32716:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"32741:3:26","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"32712:3:26"},"nodeType":"YulFunctionCall","src":"32712:33:26"},"nodeType":"YulIf","src":"32709:120:26"},{"nodeType":"YulBlock","src":"32839:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"32854:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"32868:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"32858:6:26","type":""}]},{"nodeType":"YulAssignment","src":"32883:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32918:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"32929:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32914:3:26"},"nodeType":"YulFunctionCall","src":"32914:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"32938:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"32893:20:26"},"nodeType":"YulFunctionCall","src":"32893:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"32883:6:26"}]}]},{"nodeType":"YulBlock","src":"32966:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"32981:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"32995:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"32985:6:26","type":""}]},{"nodeType":"YulAssignment","src":"33011:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33046:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"33057:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33042:3:26"},"nodeType":"YulFunctionCall","src":"33042:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33066:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"33021:20:26"},"nodeType":"YulFunctionCall","src":"33021:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"33011:6:26"}]}]},{"nodeType":"YulBlock","src":"33094:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"33109:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"33123:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33113:6:26","type":""}]},{"nodeType":"YulAssignment","src":"33139:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33174:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"33185:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33170:3:26"},"nodeType":"YulFunctionCall","src":"33170:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33194:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"33149:20:26"},"nodeType":"YulFunctionCall","src":"33149:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"33139:6:26"}]}]},{"nodeType":"YulBlock","src":"33222:115:26","statements":[{"nodeType":"YulVariableDeclaration","src":"33237:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"33251:2:26","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33241:6:26","type":""}]},{"nodeType":"YulAssignment","src":"33267:60:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33299:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"33310:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33295:3:26"},"nodeType":"YulFunctionCall","src":"33295:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33319:7:26"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"33277:17:26"},"nodeType":"YulFunctionCall","src":"33277:50:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"33267:6:26"}]}]},{"nodeType":"YulBlock","src":"33347:288:26","statements":[{"nodeType":"YulVariableDeclaration","src":"33362:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33393:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"33404:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33389:3:26"},"nodeType":"YulFunctionCall","src":"33389:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"33376:12:26"},"nodeType":"YulFunctionCall","src":"33376:33:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33366:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"33456:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"33458:77:26"},"nodeType":"YulFunctionCall","src":"33458:79:26"},"nodeType":"YulExpressionStatement","src":"33458:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"33428:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"33436:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33425:2:26"},"nodeType":"YulFunctionCall","src":"33425:30:26"},"nodeType":"YulIf","src":"33422:117:26"},{"nodeType":"YulAssignment","src":"33553:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33597:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"33608:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33593:3:26"},"nodeType":"YulFunctionCall","src":"33593:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33617:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"33563:29:26"},"nodeType":"YulFunctionCall","src":"33563:62:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"33553:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_boolt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32637:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"32648:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"32660:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32668:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32676:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"32684:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"32692:6:26","type":""}],"src":"32559:1083:26"},{"body":{"nodeType":"YulBlock","src":"33774:817:26","statements":[{"body":{"nodeType":"YulBlock","src":"33821:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"33823:77:26"},"nodeType":"YulFunctionCall","src":"33823:79:26"},"nodeType":"YulExpressionStatement","src":"33823:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"33795:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"33804:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33791:3:26"},"nodeType":"YulFunctionCall","src":"33791:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"33816:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"33787:3:26"},"nodeType":"YulFunctionCall","src":"33787:33:26"},"nodeType":"YulIf","src":"33784:120:26"},{"nodeType":"YulBlock","src":"33914:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"33929:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"33943:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33933:6:26","type":""}]},{"nodeType":"YulAssignment","src":"33958:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33993:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"34004:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33989:3:26"},"nodeType":"YulFunctionCall","src":"33989:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"34013:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"33968:20:26"},"nodeType":"YulFunctionCall","src":"33968:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"33958:6:26"}]}]},{"nodeType":"YulBlock","src":"34041:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"34056:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"34070:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"34060:6:26","type":""}]},{"nodeType":"YulAssignment","src":"34086:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34121:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"34132:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34117:3:26"},"nodeType":"YulFunctionCall","src":"34117:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"34141:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"34096:20:26"},"nodeType":"YulFunctionCall","src":"34096:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"34086:6:26"}]}]},{"nodeType":"YulBlock","src":"34169:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"34184:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"34198:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"34188:6:26","type":""}]},{"nodeType":"YulAssignment","src":"34214:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34249:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"34260:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34245:3:26"},"nodeType":"YulFunctionCall","src":"34245:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"34269:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"34224:20:26"},"nodeType":"YulFunctionCall","src":"34224:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"34214:6:26"}]}]},{"nodeType":"YulBlock","src":"34297:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"34312:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34343:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34354:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34339:3:26"},"nodeType":"YulFunctionCall","src":"34339:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"34326:12:26"},"nodeType":"YulFunctionCall","src":"34326:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"34316:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"34405:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"34407:77:26"},"nodeType":"YulFunctionCall","src":"34407:79:26"},"nodeType":"YulExpressionStatement","src":"34407:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"34377:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"34385:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34374:2:26"},"nodeType":"YulFunctionCall","src":"34374:30:26"},"nodeType":"YulIf","src":"34371:117:26"},{"nodeType":"YulAssignment","src":"34502:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34546:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"34557:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34542:3:26"},"nodeType":"YulFunctionCall","src":"34542:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"34566:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"34512:29:26"},"nodeType":"YulFunctionCall","src":"34512:62:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"34502:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33720:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"33731:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"33743:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33751:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33759:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33767:6:26","type":""}],"src":"33648:943:26"},{"body":{"nodeType":"YulBlock","src":"34689:560:26","statements":[{"body":{"nodeType":"YulBlock","src":"34735:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"34737:77:26"},"nodeType":"YulFunctionCall","src":"34737:79:26"},"nodeType":"YulExpressionStatement","src":"34737:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"34710:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"34719:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34706:3:26"},"nodeType":"YulFunctionCall","src":"34706:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"34731:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"34702:3:26"},"nodeType":"YulFunctionCall","src":"34702:32:26"},"nodeType":"YulIf","src":"34699:119:26"},{"nodeType":"YulBlock","src":"34828:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"34843:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"34857:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"34847:6:26","type":""}]},{"nodeType":"YulAssignment","src":"34872:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34907:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"34918:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34903:3:26"},"nodeType":"YulFunctionCall","src":"34903:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"34927:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"34882:20:26"},"nodeType":"YulFunctionCall","src":"34882:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"34872:6:26"}]}]},{"nodeType":"YulBlock","src":"34955:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"34970:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35001:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35012:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34997:3:26"},"nodeType":"YulFunctionCall","src":"34997:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"34984:12:26"},"nodeType":"YulFunctionCall","src":"34984:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"34974:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"35063:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"35065:77:26"},"nodeType":"YulFunctionCall","src":"35065:79:26"},"nodeType":"YulExpressionStatement","src":"35065:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"35035:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"35043:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35032:2:26"},"nodeType":"YulFunctionCall","src":"35032:30:26"},"nodeType":"YulIf","src":"35029:117:26"},{"nodeType":"YulAssignment","src":"35160:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35204:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"35215:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35200:3:26"},"nodeType":"YulFunctionCall","src":"35200:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"35224:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"35170:29:26"},"nodeType":"YulFunctionCall","src":"35170:62:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"35160:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34651:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"34662:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"34674:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34682:6:26","type":""}],"src":"34597:652:26"},{"body":{"nodeType":"YulBlock","src":"35353:124:26","statements":[{"nodeType":"YulAssignment","src":"35363:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35375:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35386:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35371:3:26"},"nodeType":"YulFunctionCall","src":"35371:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35363:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35443:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35456:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35467:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35452:3:26"},"nodeType":"YulFunctionCall","src":"35452:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35399:43:26"},"nodeType":"YulFunctionCall","src":"35399:71:26"},"nodeType":"YulExpressionStatement","src":"35399:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35325:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35337:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35348:4:26","type":""}],"src":"35255:222:26"},{"body":{"nodeType":"YulBlock","src":"35565:229:26","statements":[{"body":{"nodeType":"YulBlock","src":"35670:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"35672:16:26"},"nodeType":"YulFunctionCall","src":"35672:18:26"},"nodeType":"YulExpressionStatement","src":"35672:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35642:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"35650:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35639:2:26"},"nodeType":"YulFunctionCall","src":"35639:30:26"},"nodeType":"YulIf","src":"35636:56:26"},{"nodeType":"YulAssignment","src":"35702:25:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35714:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"35722:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"35710:3:26"},"nodeType":"YulFunctionCall","src":"35710:17:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"35702:4:26"}]},{"nodeType":"YulAssignment","src":"35764:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"35776:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"35782:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35772:3:26"},"nodeType":"YulFunctionCall","src":"35772:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"35764:4:26"}]}]},"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"35549:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"35560:4:26","type":""}],"src":"35483:311:26"},{"body":{"nodeType":"YulBlock","src":"35919:608:26","statements":[{"nodeType":"YulAssignment","src":"35929:90:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"36011:6:26"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"35954:56:26"},"nodeType":"YulFunctionCall","src":"35954:64:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"35938:15:26"},"nodeType":"YulFunctionCall","src":"35938:81:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"35929:5:26"}]},{"nodeType":"YulVariableDeclaration","src":"36028:16:26","value":{"name":"array","nodeType":"YulIdentifier","src":"36039:5:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"36032:3:26","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"36061:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"36068:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36054:6:26"},"nodeType":"YulFunctionCall","src":"36054:21:26"},"nodeType":"YulExpressionStatement","src":"36054:21:26"},{"nodeType":"YulAssignment","src":"36084:23:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"36095:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"36102:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36091:3:26"},"nodeType":"YulFunctionCall","src":"36091:16:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"36084:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"36117:44:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"36135:6:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"36147:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"36155:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"36143:3:26"},"nodeType":"YulFunctionCall","src":"36143:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36131:3:26"},"nodeType":"YulFunctionCall","src":"36131:30:26"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"36121:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"36189:103:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"36203:77:26"},"nodeType":"YulFunctionCall","src":"36203:79:26"},"nodeType":"YulExpressionStatement","src":"36203:79:26"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"36176:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"36184:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36173:2:26"},"nodeType":"YulFunctionCall","src":"36173:15:26"},"nodeType":"YulIf","src":"36170:122:26"},{"body":{"nodeType":"YulBlock","src":"36377:144:26","statements":[{"nodeType":"YulVariableDeclaration","src":"36392:21:26","value":{"name":"src","nodeType":"YulIdentifier","src":"36410:3:26"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"36396:10:26","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"36434:3:26"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"36460:10:26"},{"name":"end","nodeType":"YulIdentifier","src":"36472:3:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"36439:20:26"},"nodeType":"YulFunctionCall","src":"36439:37:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36427:6:26"},"nodeType":"YulFunctionCall","src":"36427:50:26"},"nodeType":"YulExpressionStatement","src":"36427:50:26"},{"nodeType":"YulAssignment","src":"36490:21:26","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"36501:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"36506:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36497:3:26"},"nodeType":"YulFunctionCall","src":"36497:14:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"36490:3:26"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"36330:3:26"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"36335:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36327:2:26"},"nodeType":"YulFunctionCall","src":"36327:15:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"36343:25:26","statements":[{"nodeType":"YulAssignment","src":"36345:21:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"36356:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"36361:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36352:3:26"},"nodeType":"YulFunctionCall","src":"36352:14:26"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"36345:3:26"}]}]},"pre":{"nodeType":"YulBlock","src":"36305:21:26","statements":[{"nodeType":"YulVariableDeclaration","src":"36307:17:26","value":{"name":"offset","nodeType":"YulIdentifier","src":"36318:6:26"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"36311:3:26","type":""}]}]},"src":"36301:220:26"}]},"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"35889:6:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"35897:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"35905:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"35913:5:26","type":""}],"src":"35817:710:26"},{"body":{"nodeType":"YulBlock","src":"36627:293:26","statements":[{"body":{"nodeType":"YulBlock","src":"36676:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"36678:77:26"},"nodeType":"YulFunctionCall","src":"36678:79:26"},"nodeType":"YulExpressionStatement","src":"36678:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"36655:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"36663:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36651:3:26"},"nodeType":"YulFunctionCall","src":"36651:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"36670:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"36647:3:26"},"nodeType":"YulFunctionCall","src":"36647:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36640:6:26"},"nodeType":"YulFunctionCall","src":"36640:35:26"},"nodeType":"YulIf","src":"36637:122:26"},{"nodeType":"YulVariableDeclaration","src":"36768:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"36795:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"36782:12:26"},"nodeType":"YulFunctionCall","src":"36782:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"36772:6:26","type":""}]},{"nodeType":"YulAssignment","src":"36811:103:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"36887:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"36895:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36883:3:26"},"nodeType":"YulFunctionCall","src":"36883:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"36902:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"36910:3:26"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"36820:62:26"},"nodeType":"YulFunctionCall","src":"36820:94:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"36811:5:26"}]}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"36605:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"36613:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"36621:5:26","type":""}],"src":"36550:370:26"},{"body":{"nodeType":"YulBlock","src":"37068:770:26","statements":[{"body":{"nodeType":"YulBlock","src":"37114:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"37116:77:26"},"nodeType":"YulFunctionCall","src":"37116:79:26"},"nodeType":"YulExpressionStatement","src":"37116:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"37089:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"37098:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37085:3:26"},"nodeType":"YulFunctionCall","src":"37085:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"37110:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"37081:3:26"},"nodeType":"YulFunctionCall","src":"37081:32:26"},"nodeType":"YulIf","src":"37078:119:26"},{"nodeType":"YulBlock","src":"37207:302:26","statements":[{"nodeType":"YulVariableDeclaration","src":"37222:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37253:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"37264:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37249:3:26"},"nodeType":"YulFunctionCall","src":"37249:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"37236:12:26"},"nodeType":"YulFunctionCall","src":"37236:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"37226:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"37314:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"37316:77:26"},"nodeType":"YulFunctionCall","src":"37316:79:26"},"nodeType":"YulExpressionStatement","src":"37316:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"37286:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"37294:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37283:2:26"},"nodeType":"YulFunctionCall","src":"37283:30:26"},"nodeType":"YulIf","src":"37280:117:26"},{"nodeType":"YulAssignment","src":"37411:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37471:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"37482:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37467:3:26"},"nodeType":"YulFunctionCall","src":"37467:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"37491:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"37421:45:26"},"nodeType":"YulFunctionCall","src":"37421:78:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"37411:6:26"}]}]},{"nodeType":"YulBlock","src":"37519:312:26","statements":[{"nodeType":"YulVariableDeclaration","src":"37534:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37565:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"37576:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37561:3:26"},"nodeType":"YulFunctionCall","src":"37561:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"37548:12:26"},"nodeType":"YulFunctionCall","src":"37548:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"37538:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"37627:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"37629:77:26"},"nodeType":"YulFunctionCall","src":"37629:79:26"},"nodeType":"YulExpressionStatement","src":"37629:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"37599:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"37607:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37596:2:26"},"nodeType":"YulFunctionCall","src":"37596:30:26"},"nodeType":"YulIf","src":"37593:117:26"},{"nodeType":"YulAssignment","src":"37724:97:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37793:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"37804:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37789:3:26"},"nodeType":"YulFunctionCall","src":"37789:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"37813:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"37734:54:26"},"nodeType":"YulFunctionCall","src":"37734:87:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"37724:6:26"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37030:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"37041:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"37053:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37061:6:26","type":""}],"src":"36926:912:26"},{"body":{"nodeType":"YulBlock","src":"37918:40:26","statements":[{"nodeType":"YulAssignment","src":"37929:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37945:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37939:5:26"},"nodeType":"YulFunctionCall","src":"37939:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"37929:6:26"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37901:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"37911:6:26","type":""}],"src":"37844:114:26"},{"body":{"nodeType":"YulBlock","src":"38075:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38092:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"38097:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38085:6:26"},"nodeType":"YulFunctionCall","src":"38085:19:26"},"nodeType":"YulExpressionStatement","src":"38085:19:26"},{"nodeType":"YulAssignment","src":"38113:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38132:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"38137:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38128:3:26"},"nodeType":"YulFunctionCall","src":"38128:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"38113:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38047:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"38052:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"38063:11:26","type":""}],"src":"37964:184:26"},{"body":{"nodeType":"YulBlock","src":"38226:60:26","statements":[{"nodeType":"YulAssignment","src":"38236:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"38244:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"38236:4:26"}]},{"nodeType":"YulAssignment","src":"38257:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"38269:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"38274:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38265:3:26"},"nodeType":"YulFunctionCall","src":"38265:14:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"38257:4:26"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"38213:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"38221:4:26","type":""}],"src":"38154:132:26"},{"body":{"nodeType":"YulBlock","src":"38372:99:26","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38416:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"38424:3:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"38382:33:26"},"nodeType":"YulFunctionCall","src":"38382:46:26"},"nodeType":"YulExpressionStatement","src":"38382:46:26"},{"nodeType":"YulAssignment","src":"38437:28:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38455:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"38460:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38451:3:26"},"nodeType":"YulFunctionCall","src":"38451:14:26"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"38437:10:26"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"38345:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"38353:3:26","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"38361:10:26","type":""}],"src":"38292:179:26"},{"body":{"nodeType":"YulBlock","src":"38552:38:26","statements":[{"nodeType":"YulAssignment","src":"38562:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"38574:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"38579:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38570:3:26"},"nodeType":"YulFunctionCall","src":"38570:14:26"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"38562:4:26"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"38539:3:26","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"38547:4:26","type":""}],"src":"38477:113:26"},{"body":{"nodeType":"YulBlock","src":"38750:608:26","statements":[{"nodeType":"YulVariableDeclaration","src":"38760:68:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38822:5:26"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"38774:47:26"},"nodeType":"YulFunctionCall","src":"38774:54:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"38764:6:26","type":""}]},{"nodeType":"YulAssignment","src":"38837:93:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38918:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"38923:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38844:73:26"},"nodeType":"YulFunctionCall","src":"38844:86:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38837:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"38939:71:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39004:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"38954:49:26"},"nodeType":"YulFunctionCall","src":"38954:56:26"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"38943:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"39019:21:26","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"39033:7:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"39023:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"39109:224:26","statements":[{"nodeType":"YulVariableDeclaration","src":"39123:34:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"39150:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"39144:5:26"},"nodeType":"YulFunctionCall","src":"39144:13:26"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"39127:13:26","type":""}]},{"nodeType":"YulAssignment","src":"39170:70:26","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"39221:13:26"},{"name":"pos","nodeType":"YulIdentifier","src":"39236:3:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"39177:43:26"},"nodeType":"YulFunctionCall","src":"39177:63:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39170:3:26"}]},{"nodeType":"YulAssignment","src":"39253:70:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"39316:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"39263:52:26"},"nodeType":"YulFunctionCall","src":"39263:60:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"39253:6:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"39071:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"39074:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"39068:2:26"},"nodeType":"YulFunctionCall","src":"39068:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"39082:18:26","statements":[{"nodeType":"YulAssignment","src":"39084:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"39093:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"39096:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39089:3:26"},"nodeType":"YulFunctionCall","src":"39089:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"39084:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"39053:14:26","statements":[{"nodeType":"YulVariableDeclaration","src":"39055:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"39064:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"39059:1:26","type":""}]}]},"src":"39049:284:26"},{"nodeType":"YulAssignment","src":"39342:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"39349:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39342:3:26"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38729:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"38736:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38745:3:26","type":""}],"src":"38626:732:26"},{"body":{"nodeType":"YulBlock","src":"39512:225:26","statements":[{"nodeType":"YulAssignment","src":"39522:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39534:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"39545:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39530:3:26"},"nodeType":"YulFunctionCall","src":"39530:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39522:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39569:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"39580:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39565:3:26"},"nodeType":"YulFunctionCall","src":"39565:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39588:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"39594:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39584:3:26"},"nodeType":"YulFunctionCall","src":"39584:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39558:6:26"},"nodeType":"YulFunctionCall","src":"39558:47:26"},"nodeType":"YulExpressionStatement","src":"39558:47:26"},{"nodeType":"YulAssignment","src":"39614:116:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39716:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"39725:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39622:93:26"},"nodeType":"YulFunctionCall","src":"39622:108:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39614:4:26"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39484:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39496:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39507:4:26","type":""}],"src":"39364:373:26"},{"body":{"nodeType":"YulBlock","src":"39834:448:26","statements":[{"body":{"nodeType":"YulBlock","src":"39880:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"39882:77:26"},"nodeType":"YulFunctionCall","src":"39882:79:26"},"nodeType":"YulExpressionStatement","src":"39882:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"39855:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"39864:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39851:3:26"},"nodeType":"YulFunctionCall","src":"39851:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"39876:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"39847:3:26"},"nodeType":"YulFunctionCall","src":"39847:32:26"},"nodeType":"YulIf","src":"39844:119:26"},{"nodeType":"YulBlock","src":"39973:302:26","statements":[{"nodeType":"YulVariableDeclaration","src":"39988:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40019:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"40030:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40015:3:26"},"nodeType":"YulFunctionCall","src":"40015:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"40002:12:26"},"nodeType":"YulFunctionCall","src":"40002:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"39992:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"40080:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"40082:77:26"},"nodeType":"YulFunctionCall","src":"40082:79:26"},"nodeType":"YulExpressionStatement","src":"40082:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"40052:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"40060:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"40049:2:26"},"nodeType":"YulFunctionCall","src":"40049:30:26"},"nodeType":"YulIf","src":"40046:117:26"},{"nodeType":"YulAssignment","src":"40177:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40237:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"40248:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40233:3:26"},"nodeType":"YulFunctionCall","src":"40233:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"40257:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"40187:45:26"},"nodeType":"YulFunctionCall","src":"40187:78:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"40177:6:26"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39804:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"39815:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"39827:6:26","type":""}],"src":"39743:539:26"},{"body":{"nodeType":"YulBlock","src":"40351:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40368:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40390:5:26"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"40373:16:26"},"nodeType":"YulFunctionCall","src":"40373:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40361:6:26"},"nodeType":"YulFunctionCall","src":"40361:36:26"},"nodeType":"YulExpressionStatement","src":"40361:36:26"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40339:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"40346:3:26","type":""}],"src":"40288:115:26"},{"body":{"nodeType":"YulBlock","src":"40505:122:26","statements":[{"nodeType":"YulAssignment","src":"40515:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40527:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"40538:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40523:3:26"},"nodeType":"YulFunctionCall","src":"40523:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40515:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40593:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40606:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"40617:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40602:3:26"},"nodeType":"YulFunctionCall","src":"40602:17:26"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"40551:41:26"},"nodeType":"YulFunctionCall","src":"40551:69:26"},"nodeType":"YulExpressionStatement","src":"40551:69:26"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40477:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40489:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40500:4:26","type":""}],"src":"40409:218:26"},{"body":{"nodeType":"YulBlock","src":"40746:34:26","statements":[{"nodeType":"YulAssignment","src":"40756:18:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"40771:3:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"40756:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40718:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"40723:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"40734:11:26","type":""}],"src":"40633:147:26"},{"body":{"nodeType":"YulBlock","src":"40926:209:26","statements":[{"nodeType":"YulAssignment","src":"40936:95:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41019:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"41024:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"40943:75:26"},"nodeType":"YulFunctionCall","src":"40943:88:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40936:3:26"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"41078:5:26"},{"name":"pos","nodeType":"YulIdentifier","src":"41085:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"41090:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"41041:36:26"},"nodeType":"YulFunctionCall","src":"41041:56:26"},"nodeType":"YulExpressionStatement","src":"41041:56:26"},{"nodeType":"YulAssignment","src":"41106:23:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41117:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"41122:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41113:3:26"},"nodeType":"YulFunctionCall","src":"41113:16:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41106:3:26"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"40899:5:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"40906:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"40914:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40922:3:26","type":""}],"src":"40808:327:26"},{"body":{"nodeType":"YulBlock","src":"41183:52:26","statements":[{"nodeType":"YulAssignment","src":"41193:35:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41218:2:26","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"41222:5:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"41214:3:26"},"nodeType":"YulFunctionCall","src":"41214:14:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"41193:8:26"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41164:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"41174:8:26","type":""}],"src":"41141:94:26"},{"body":{"nodeType":"YulBlock","src":"41288:47:26","statements":[{"nodeType":"YulAssignment","src":"41298:31:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41323:5:26"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"41309:13:26"},"nodeType":"YulFunctionCall","src":"41309:20:26"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"41298:7:26"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41270:5:26","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"41280:7:26","type":""}],"src":"41241:94:26"},{"body":{"nodeType":"YulBlock","src":"41388:53:26","statements":[{"nodeType":"YulAssignment","src":"41398:37:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41429:5:26"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"41409:19:26"},"nodeType":"YulFunctionCall","src":"41409:26:26"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"41398:7:26"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41370:5:26","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"41380:7:26","type":""}],"src":"41341:100:26"},{"body":{"nodeType":"YulBlock","src":"41530:74:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41547:3:26"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41590:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"41572:17:26"},"nodeType":"YulFunctionCall","src":"41572:24:26"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"41552:19:26"},"nodeType":"YulFunctionCall","src":"41552:45:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41540:6:26"},"nodeType":"YulFunctionCall","src":"41540:58:26"},"nodeType":"YulExpressionStatement","src":"41540:58:26"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41518:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"41525:3:26","type":""}],"src":"41447:157:26"},{"body":{"nodeType":"YulBlock","src":"41657:32:26","statements":[{"nodeType":"YulAssignment","src":"41667:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"41678:5:26"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"41667:7:26"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41639:5:26","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"41649:7:26","type":""}],"src":"41610:79:26"},{"body":{"nodeType":"YulBlock","src":"41778:74:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41795:3:26"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41838:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"41820:17:26"},"nodeType":"YulFunctionCall","src":"41820:24:26"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"41800:19:26"},"nodeType":"YulFunctionCall","src":"41800:45:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41788:6:26"},"nodeType":"YulFunctionCall","src":"41788:58:26"},"nodeType":"YulExpressionStatement","src":"41788:58:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41766:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"41773:3:26","type":""}],"src":"41695:157:26"},{"body":{"nodeType":"YulBlock","src":"42058:373:26","statements":[{"nodeType":"YulAssignment","src":"42069:110:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"42158:6:26"},{"name":"value1","nodeType":"YulIdentifier","src":"42166:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"42175:3:26"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"42076:81:26"},"nodeType":"YulFunctionCall","src":"42076:103:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42069:3:26"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"42251:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"42260:3:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"42189:61:26"},"nodeType":"YulFunctionCall","src":"42189:75:26"},"nodeType":"YulExpressionStatement","src":"42189:75:26"},{"nodeType":"YulAssignment","src":"42273:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42284:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"42289:2:26","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42280:3:26"},"nodeType":"YulFunctionCall","src":"42280:12:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42273:3:26"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"42364:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"42373:3:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"42302:61:26"},"nodeType":"YulFunctionCall","src":"42302:75:26"},"nodeType":"YulExpressionStatement","src":"42302:75:26"},{"nodeType":"YulAssignment","src":"42386:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42397:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"42402:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42393:3:26"},"nodeType":"YulFunctionCall","src":"42393:12:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42386:3:26"}]},{"nodeType":"YulAssignment","src":"42415:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"42422:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42415:3:26"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address_t_uint256__to_t_bytes_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42013:3:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"42019:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"42027:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"42035:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42043:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42054:3:26","type":""}],"src":"41858:573:26"},{"body":{"nodeType":"YulBlock","src":"42545:278:26","statements":[{"nodeType":"YulVariableDeclaration","src":"42555:52:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42601:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"42569:31:26"},"nodeType":"YulFunctionCall","src":"42569:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"42559:6:26","type":""}]},{"nodeType":"YulAssignment","src":"42616:95:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42699:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"42704:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"42623:75:26"},"nodeType":"YulFunctionCall","src":"42623:88:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42616:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42759:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"42766:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42755:3:26"},"nodeType":"YulFunctionCall","src":"42755:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"42773:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"42778:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"42720:34:26"},"nodeType":"YulFunctionCall","src":"42720:65:26"},"nodeType":"YulExpressionStatement","src":"42720:65:26"},{"nodeType":"YulAssignment","src":"42794:23:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42805:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"42810:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42801:3:26"},"nodeType":"YulFunctionCall","src":"42801:16:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42794:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42526:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"42533:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42541:3:26","type":""}],"src":"42437:386:26"},{"body":{"nodeType":"YulBlock","src":"42963:137:26","statements":[{"nodeType":"YulAssignment","src":"42974:100:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43061:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"43070:3:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"42981:79:26"},"nodeType":"YulFunctionCall","src":"42981:93:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42974:3:26"}]},{"nodeType":"YulAssignment","src":"43084:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"43091:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43084:3:26"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42942:3:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42948:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42959:3:26","type":""}],"src":"42829:271:26"},{"body":{"nodeType":"YulBlock","src":"43212:118:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43234:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"43242:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43230:3:26"},"nodeType":"YulFunctionCall","src":"43230:14:26"},{"hexValue":"596f75206e656564206120746f6b656e20746f207375626d6974206120717565","kind":"string","nodeType":"YulLiteral","src":"43246:34:26","type":"","value":"You need a token to submit a que"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43223:6:26"},"nodeType":"YulFunctionCall","src":"43223:58:26"},"nodeType":"YulExpressionStatement","src":"43223:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43302:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"43310:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43298:3:26"},"nodeType":"YulFunctionCall","src":"43298:15:26"},{"hexValue":"7374696f6e","kind":"string","nodeType":"YulLiteral","src":"43315:7:26","type":"","value":"stion"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43291:6:26"},"nodeType":"YulFunctionCall","src":"43291:32:26"},"nodeType":"YulExpressionStatement","src":"43291:32:26"}]},"name":"store_literal_in_memory_ff075107381d702750af5e734cb03ff5255767cbecd0d4c2fe55faaadb5b2448","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43204:6:26","type":""}],"src":"43106:224:26"},{"body":{"nodeType":"YulBlock","src":"43482:220:26","statements":[{"nodeType":"YulAssignment","src":"43492:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43558:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"43563:2:26","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43499:58:26"},"nodeType":"YulFunctionCall","src":"43499:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43492:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43664:3:26"}],"functionName":{"name":"store_literal_in_memory_ff075107381d702750af5e734cb03ff5255767cbecd0d4c2fe55faaadb5b2448","nodeType":"YulIdentifier","src":"43575:88:26"},"nodeType":"YulFunctionCall","src":"43575:93:26"},"nodeType":"YulExpressionStatement","src":"43575:93:26"},{"nodeType":"YulAssignment","src":"43677:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43688:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"43693:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43684:3:26"},"nodeType":"YulFunctionCall","src":"43684:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43677:3:26"}]}]},"name":"abi_encode_t_stringliteral_ff075107381d702750af5e734cb03ff5255767cbecd0d4c2fe55faaadb5b2448_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43470:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43478:3:26","type":""}],"src":"43336:366:26"},{"body":{"nodeType":"YulBlock","src":"43879:248:26","statements":[{"nodeType":"YulAssignment","src":"43889:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43901:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"43912:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43897:3:26"},"nodeType":"YulFunctionCall","src":"43897:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43889:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43936:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"43947:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43932:3:26"},"nodeType":"YulFunctionCall","src":"43932:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43955:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"43961:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43951:3:26"},"nodeType":"YulFunctionCall","src":"43951:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43925:6:26"},"nodeType":"YulFunctionCall","src":"43925:47:26"},"nodeType":"YulExpressionStatement","src":"43925:47:26"},{"nodeType":"YulAssignment","src":"43981:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44115:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_ff075107381d702750af5e734cb03ff5255767cbecd0d4c2fe55faaadb5b2448_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43989:124:26"},"nodeType":"YulFunctionCall","src":"43989:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43981:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_ff075107381d702750af5e734cb03ff5255767cbecd0d4c2fe55faaadb5b2448__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43859:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43874:4:26","type":""}],"src":"43708:419:26"},{"body":{"nodeType":"YulBlock","src":"44161:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44178:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44181:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44171:6:26"},"nodeType":"YulFunctionCall","src":"44171:88:26"},"nodeType":"YulExpressionStatement","src":"44171:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44275:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"44278:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44268:6:26"},"nodeType":"YulFunctionCall","src":"44268:15:26"},"nodeType":"YulExpressionStatement","src":"44268:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44299:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44302:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44292:6:26"},"nodeType":"YulFunctionCall","src":"44292:15:26"},"nodeType":"YulExpressionStatement","src":"44292:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"44133:180:26"},{"body":{"nodeType":"YulBlock","src":"44362:190:26","statements":[{"nodeType":"YulAssignment","src":"44372:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44399:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"44381:17:26"},"nodeType":"YulFunctionCall","src":"44381:24:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"44372:5:26"}]},{"body":{"nodeType":"YulBlock","src":"44495:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"44497:16:26"},"nodeType":"YulFunctionCall","src":"44497:18:26"},"nodeType":"YulExpressionStatement","src":"44497:18:26"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44420:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"44427:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"44417:2:26"},"nodeType":"YulFunctionCall","src":"44417:77:26"},"nodeType":"YulIf","src":"44414:103:26"},{"nodeType":"YulAssignment","src":"44526:20:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44537:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"44544:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44533:3:26"},"nodeType":"YulFunctionCall","src":"44533:13:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"44526:3:26"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44348:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"44358:3:26","type":""}],"src":"44319:233:26"},{"body":{"nodeType":"YulBlock","src":"44586:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44603:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44606:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44596:6:26"},"nodeType":"YulFunctionCall","src":"44596:88:26"},"nodeType":"YulExpressionStatement","src":"44596:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44700:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"44703:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44693:6:26"},"nodeType":"YulFunctionCall","src":"44693:15:26"},"nodeType":"YulExpressionStatement","src":"44693:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44724:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44727:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44717:6:26"},"nodeType":"YulFunctionCall","src":"44717:15:26"},"nodeType":"YulExpressionStatement","src":"44717:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"44558:180:26"},{"body":{"nodeType":"YulBlock","src":"44795:269:26","statements":[{"nodeType":"YulAssignment","src":"44805:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"44819:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"44825:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"44815:3:26"},"nodeType":"YulFunctionCall","src":"44815:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"44805:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"44836:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"44866:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"44872:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"44862:3:26"},"nodeType":"YulFunctionCall","src":"44862:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"44840:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"44913:51:26","statements":[{"nodeType":"YulAssignment","src":"44927:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"44941:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"44949:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"44937:3:26"},"nodeType":"YulFunctionCall","src":"44937:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"44927:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"44893:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"44886:6:26"},"nodeType":"YulFunctionCall","src":"44886:26:26"},"nodeType":"YulIf","src":"44883:81:26"},{"body":{"nodeType":"YulBlock","src":"45016:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"45030:16:26"},"nodeType":"YulFunctionCall","src":"45030:18:26"},"nodeType":"YulExpressionStatement","src":"45030:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"44980:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"45003:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"45011:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"45000:2:26"},"nodeType":"YulFunctionCall","src":"45000:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"44977:2:26"},"nodeType":"YulFunctionCall","src":"44977:38:26"},"nodeType":"YulIf","src":"44974:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"44779:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"44788:6:26","type":""}],"src":"44744:320:26"},{"body":{"nodeType":"YulBlock","src":"45124:87:26","statements":[{"nodeType":"YulAssignment","src":"45134:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"45142:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"45134:4:26"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45162:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"45165:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45155:6:26"},"nodeType":"YulFunctionCall","src":"45155:14:26"},"nodeType":"YulExpressionStatement","src":"45155:14:26"},{"nodeType":"YulAssignment","src":"45178:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45196:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"45199:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"45186:9:26"},"nodeType":"YulFunctionCall","src":"45186:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"45178:4:26"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"45111:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"45119:4:26","type":""}],"src":"45070:141:26"},{"body":{"nodeType":"YulBlock","src":"45261:49:26","statements":[{"nodeType":"YulAssignment","src":"45271:33:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45289:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"45296:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45285:3:26"},"nodeType":"YulFunctionCall","src":"45285:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"45301:2:26","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"45281:3:26"},"nodeType":"YulFunctionCall","src":"45281:23:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"45271:6:26"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45244:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"45254:6:26","type":""}],"src":"45217:93:26"},{"body":{"nodeType":"YulBlock","src":"45369:54:26","statements":[{"nodeType":"YulAssignment","src":"45379:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"45404:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"45410:5:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"45400:3:26"},"nodeType":"YulFunctionCall","src":"45400:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"45379:8:26"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"45344:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"45350:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"45360:8:26","type":""}],"src":"45316:107:26"},{"body":{"nodeType":"YulBlock","src":"45505:317:26","statements":[{"nodeType":"YulVariableDeclaration","src":"45515:35:26","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"45536:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"45548:1:26","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"45532:3:26"},"nodeType":"YulFunctionCall","src":"45532:18:26"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"45519:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"45559:109:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"45590:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"45601:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"45571:18:26"},"nodeType":"YulFunctionCall","src":"45571:97:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"45563:4:26","type":""}]},{"nodeType":"YulAssignment","src":"45677:51:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"45708:9:26"},{"name":"toInsert","nodeType":"YulIdentifier","src":"45719:8:26"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"45689:18:26"},"nodeType":"YulFunctionCall","src":"45689:39:26"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"45677:8:26"}]},{"nodeType":"YulAssignment","src":"45737:30:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45750:5:26"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"45761:4:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"45757:3:26"},"nodeType":"YulFunctionCall","src":"45757:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45746:3:26"},"nodeType":"YulFunctionCall","src":"45746:21:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"45737:5:26"}]},{"nodeType":"YulAssignment","src":"45776:40:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45789:5:26"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"45800:8:26"},{"name":"mask","nodeType":"YulIdentifier","src":"45810:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45796:3:26"},"nodeType":"YulFunctionCall","src":"45796:19:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"45786:2:26"},"nodeType":"YulFunctionCall","src":"45786:30:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"45776:6:26"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45466:5:26","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"45473:10:26","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"45485:8:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"45498:6:26","type":""}],"src":"45429:393:26"},{"body":{"nodeType":"YulBlock","src":"45860:28:26","statements":[{"nodeType":"YulAssignment","src":"45870:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"45877:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"45870:3:26"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45846:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"45856:3:26","type":""}],"src":"45828:60:26"},{"body":{"nodeType":"YulBlock","src":"45954:82:26","statements":[{"nodeType":"YulAssignment","src":"45964:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46022:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"46004:17:26"},"nodeType":"YulFunctionCall","src":"46004:24:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"45995:8:26"},"nodeType":"YulFunctionCall","src":"45995:34:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"45977:17:26"},"nodeType":"YulFunctionCall","src":"45977:53:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"45964:9:26"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45934:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"45944:9:26","type":""}],"src":"45894:142:26"},{"body":{"nodeType":"YulBlock","src":"46089:28:26","statements":[{"nodeType":"YulAssignment","src":"46099:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"46106:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"46099:3:26"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46075:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"46085:3:26","type":""}],"src":"46042:75:26"},{"body":{"nodeType":"YulBlock","src":"46199:193:26","statements":[{"nodeType":"YulVariableDeclaration","src":"46209:63:26","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"46264:7:26"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"46233:30:26"},"nodeType":"YulFunctionCall","src":"46233:39:26"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"46213:16:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"46288:4:26"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"46328:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"46322:5:26"},"nodeType":"YulFunctionCall","src":"46322:11:26"},{"name":"offset","nodeType":"YulIdentifier","src":"46335:6:26"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"46367:16:26"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"46343:23:26"},"nodeType":"YulFunctionCall","src":"46343:41:26"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"46294:27:26"},"nodeType":"YulFunctionCall","src":"46294:91:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"46281:6:26"},"nodeType":"YulFunctionCall","src":"46281:105:26"},"nodeType":"YulExpressionStatement","src":"46281:105:26"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"46176:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"46182:6:26","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"46190:7:26","type":""}],"src":"46123:269:26"},{"body":{"nodeType":"YulBlock","src":"46447:24:26","statements":[{"nodeType":"YulAssignment","src":"46457:8:26","value":{"kind":"number","nodeType":"YulLiteral","src":"46464:1:26","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"46457:3:26"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"46443:3:26","type":""}],"src":"46398:73:26"},{"body":{"nodeType":"YulBlock","src":"46530:136:26","statements":[{"nodeType":"YulVariableDeclaration","src":"46540:46:26","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"46554:30:26"},"nodeType":"YulFunctionCall","src":"46554:32:26"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"46544:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"46639:4:26"},{"name":"offset","nodeType":"YulIdentifier","src":"46645:6:26"},{"name":"zero_0","nodeType":"YulIdentifier","src":"46653:6:26"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"46595:43:26"},"nodeType":"YulFunctionCall","src":"46595:65:26"},"nodeType":"YulExpressionStatement","src":"46595:65:26"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"46516:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"46522:6:26","type":""}],"src":"46477:189:26"},{"body":{"nodeType":"YulBlock","src":"46722:136:26","statements":[{"body":{"nodeType":"YulBlock","src":"46789:63:26","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"46833:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"46840:1:26","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"46803:29:26"},"nodeType":"YulFunctionCall","src":"46803:39:26"},"nodeType":"YulExpressionStatement","src":"46803:39:26"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"46742:5:26"},{"name":"end","nodeType":"YulIdentifier","src":"46749:3:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"46739:2:26"},"nodeType":"YulFunctionCall","src":"46739:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"46754:26:26","statements":[{"nodeType":"YulAssignment","src":"46756:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"46769:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"46776:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46765:3:26"},"nodeType":"YulFunctionCall","src":"46765:13:26"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"46756:5:26"}]}]},"pre":{"nodeType":"YulBlock","src":"46736:2:26","statements":[]},"src":"46732:120:26"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"46710:5:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"46717:3:26","type":""}],"src":"46672:186:26"},{"body":{"nodeType":"YulBlock","src":"46943:464:26","statements":[{"body":{"nodeType":"YulBlock","src":"46969:431:26","statements":[{"nodeType":"YulVariableDeclaration","src":"46983:54:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"47031:5:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"46999:31:26"},"nodeType":"YulFunctionCall","src":"46999:38:26"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"46987:8:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"47050:63:26","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"47073:8:26"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"47101:10:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"47083:17:26"},"nodeType":"YulFunctionCall","src":"47083:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47069:3:26"},"nodeType":"YulFunctionCall","src":"47069:44:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"47054:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"47270:27:26","statements":[{"nodeType":"YulAssignment","src":"47272:23:26","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"47287:8:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"47272:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"47254:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"47266:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"47251:2:26"},"nodeType":"YulFunctionCall","src":"47251:18:26"},"nodeType":"YulIf","src":"47248:49:26"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"47339:11:26"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"47356:8:26"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"47384:3:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"47366:17:26"},"nodeType":"YulFunctionCall","src":"47366:22:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47352:3:26"},"nodeType":"YulFunctionCall","src":"47352:37:26"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"47310:28:26"},"nodeType":"YulFunctionCall","src":"47310:80:26"},"nodeType":"YulExpressionStatement","src":"47310:80:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"46960:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"46965:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"46957:2:26"},"nodeType":"YulFunctionCall","src":"46957:11:26"},"nodeType":"YulIf","src":"46954:446:26"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"46919:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"46926:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"46931:10:26","type":""}],"src":"46864:543:26"},{"body":{"nodeType":"YulBlock","src":"47476:54:26","statements":[{"nodeType":"YulAssignment","src":"47486:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"47511:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"47517:5:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"47507:3:26"},"nodeType":"YulFunctionCall","src":"47507:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"47486:8:26"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"47451:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"47457:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"47467:8:26","type":""}],"src":"47413:117:26"},{"body":{"nodeType":"YulBlock","src":"47587:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"47597:68:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47646:1:26","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"47649:5:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"47642:3:26"},"nodeType":"YulFunctionCall","src":"47642:13:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47661:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"47657:3:26"},"nodeType":"YulFunctionCall","src":"47657:6:26"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"47613:28:26"},"nodeType":"YulFunctionCall","src":"47613:51:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"47609:3:26"},"nodeType":"YulFunctionCall","src":"47609:56:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"47601:4:26","type":""}]},{"nodeType":"YulAssignment","src":"47674:25:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"47688:4:26"},{"name":"mask","nodeType":"YulIdentifier","src":"47694:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"47684:3:26"},"nodeType":"YulFunctionCall","src":"47684:15:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"47674:6:26"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"47564:4:26","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"47570:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"47580:6:26","type":""}],"src":"47536:169:26"},{"body":{"nodeType":"YulBlock","src":"47791:214:26","statements":[{"nodeType":"YulAssignment","src":"47924:37:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"47951:4:26"},{"name":"len","nodeType":"YulIdentifier","src":"47957:3:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"47932:18:26"},"nodeType":"YulFunctionCall","src":"47932:29:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"47924:4:26"}]},{"nodeType":"YulAssignment","src":"47970:29:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"47981:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47991:1:26","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"47994:3:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"47987:3:26"},"nodeType":"YulFunctionCall","src":"47987:11:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"47978:2:26"},"nodeType":"YulFunctionCall","src":"47978:21:26"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"47970:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"47772:4:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"47778:3:26","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"47786:4:26","type":""}],"src":"47710:295:26"},{"body":{"nodeType":"YulBlock","src":"48102:1303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"48113:51:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"48160:3:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"48127:32:26"},"nodeType":"YulFunctionCall","src":"48127:37:26"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"48117:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"48249:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"48251:16:26"},"nodeType":"YulFunctionCall","src":"48251:18:26"},"nodeType":"YulExpressionStatement","src":"48251:18:26"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"48221:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"48229:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"48218:2:26"},"nodeType":"YulFunctionCall","src":"48218:30:26"},"nodeType":"YulIf","src":"48215:56:26"},{"nodeType":"YulVariableDeclaration","src":"48281:52:26","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"48327:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"48321:5:26"},"nodeType":"YulFunctionCall","src":"48321:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"48295:25:26"},"nodeType":"YulFunctionCall","src":"48295:38:26"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"48285:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"48426:4:26"},{"name":"oldLen","nodeType":"YulIdentifier","src":"48432:6:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"48440:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"48380:45:26"},"nodeType":"YulFunctionCall","src":"48380:67:26"},"nodeType":"YulExpressionStatement","src":"48380:67:26"},{"nodeType":"YulVariableDeclaration","src":"48457:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"48474:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"48461:9:26","type":""}]},{"nodeType":"YulAssignment","src":"48485:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"48498:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"48485:9:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"48549:611:26","statements":[{"nodeType":"YulVariableDeclaration","src":"48563:37:26","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"48582:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"48594:4:26","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"48590:3:26"},"nodeType":"YulFunctionCall","src":"48590:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"48578:3:26"},"nodeType":"YulFunctionCall","src":"48578:22:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"48567:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"48614:51:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"48660:4:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"48628:31:26"},"nodeType":"YulFunctionCall","src":"48628:37:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"48618:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"48678:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"48687:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"48682:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"48746:163:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"48771:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"48789:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"48794:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48785:3:26"},"nodeType":"YulFunctionCall","src":"48785:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"48779:5:26"},"nodeType":"YulFunctionCall","src":"48779:26:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"48764:6:26"},"nodeType":"YulFunctionCall","src":"48764:42:26"},"nodeType":"YulExpressionStatement","src":"48764:42:26"},{"nodeType":"YulAssignment","src":"48823:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"48837:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"48845:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48833:3:26"},"nodeType":"YulFunctionCall","src":"48833:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"48823:6:26"}]},{"nodeType":"YulAssignment","src":"48864:31:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"48881:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"48892:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48877:3:26"},"nodeType":"YulFunctionCall","src":"48877:18:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"48864:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"48712:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"48715:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"48709:2:26"},"nodeType":"YulFunctionCall","src":"48709:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"48724:21:26","statements":[{"nodeType":"YulAssignment","src":"48726:17:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"48735:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"48738:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48731:3:26"},"nodeType":"YulFunctionCall","src":"48731:12:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"48726:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"48705:3:26","statements":[]},"src":"48701:208:26"},{"body":{"nodeType":"YulBlock","src":"48945:156:26","statements":[{"nodeType":"YulVariableDeclaration","src":"48963:43:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"48990:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"48995:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48986:3:26"},"nodeType":"YulFunctionCall","src":"48986:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"48980:5:26"},"nodeType":"YulFunctionCall","src":"48980:26:26"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"48967:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"49030:6:26"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"49057:9:26"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"49072:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"49080:4:26","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"49068:3:26"},"nodeType":"YulFunctionCall","src":"49068:17:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"49038:18:26"},"nodeType":"YulFunctionCall","src":"49038:48:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"49023:6:26"},"nodeType":"YulFunctionCall","src":"49023:64:26"},"nodeType":"YulExpressionStatement","src":"49023:64:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"48928:7:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"48937:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"48925:2:26"},"nodeType":"YulFunctionCall","src":"48925:19:26"},"nodeType":"YulIf","src":"48922:179:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"49121:4:26"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"49135:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"49143:1:26","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"49131:3:26"},"nodeType":"YulFunctionCall","src":"49131:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"49147:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49127:3:26"},"nodeType":"YulFunctionCall","src":"49127:22:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"49114:6:26"},"nodeType":"YulFunctionCall","src":"49114:36:26"},"nodeType":"YulExpressionStatement","src":"49114:36:26"}]},"nodeType":"YulCase","src":"48542:618:26","value":{"kind":"number","nodeType":"YulLiteral","src":"48547:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"49177:222:26","statements":[{"nodeType":"YulVariableDeclaration","src":"49191:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"49204:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"49195:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"49228:67:26","statements":[{"nodeType":"YulAssignment","src":"49246:35:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"49265:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"49270:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49261:3:26"},"nodeType":"YulFunctionCall","src":"49261:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"49255:5:26"},"nodeType":"YulFunctionCall","src":"49255:26:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"49246:5:26"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"49221:6:26"},"nodeType":"YulIf","src":"49218:77:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"49315:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49374:5:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"49381:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"49321:52:26"},"nodeType":"YulFunctionCall","src":"49321:67:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"49308:6:26"},"nodeType":"YulFunctionCall","src":"49308:81:26"},"nodeType":"YulExpressionStatement","src":"49308:81:26"}]},"nodeType":"YulCase","src":"49169:230:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"48522:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"48530:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"48519:2:26"},"nodeType":"YulFunctionCall","src":"48519:14:26"},"nodeType":"YulSwitch","src":"48512:887:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"48091:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"48097:3:26","type":""}],"src":"48010:1395:26"},{"body":{"nodeType":"YulBlock","src":"49456:149:26","statements":[{"nodeType":"YulAssignment","src":"49466:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"49489:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"49471:17:26"},"nodeType":"YulFunctionCall","src":"49471:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"49466:1:26"}]},{"nodeType":"YulAssignment","src":"49500:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"49523:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"49505:17:26"},"nodeType":"YulFunctionCall","src":"49505:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"49500:1:26"}]},{"nodeType":"YulAssignment","src":"49534:17:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"49546:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"49549:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49542:3:26"},"nodeType":"YulFunctionCall","src":"49542:9:26"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"49534:4:26"}]},{"body":{"nodeType":"YulBlock","src":"49576:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"49578:16:26"},"nodeType":"YulFunctionCall","src":"49578:18:26"},"nodeType":"YulExpressionStatement","src":"49578:18:26"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"49567:4:26"},{"name":"x","nodeType":"YulIdentifier","src":"49573:1:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"49564:2:26"},"nodeType":"YulFunctionCall","src":"49564:11:26"},"nodeType":"YulIf","src":"49561:37:26"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"49442:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"49445:1:26","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"49451:4:26","type":""}],"src":"49411:194:26"},{"body":{"nodeType":"YulBlock","src":"49639:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49656:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49659:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49649:6:26"},"nodeType":"YulFunctionCall","src":"49649:88:26"},"nodeType":"YulExpressionStatement","src":"49649:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49753:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"49756:4:26","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49746:6:26"},"nodeType":"YulFunctionCall","src":"49746:15:26"},"nodeType":"YulExpressionStatement","src":"49746:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49777:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49780:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"49770:6:26"},"nodeType":"YulFunctionCall","src":"49770:15:26"},"nodeType":"YulExpressionStatement","src":"49770:15:26"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"49611:180:26"},{"body":{"nodeType":"YulBlock","src":"49841:147:26","statements":[{"nodeType":"YulAssignment","src":"49851:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"49874:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"49856:17:26"},"nodeType":"YulFunctionCall","src":"49856:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"49851:1:26"}]},{"nodeType":"YulAssignment","src":"49885:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"49908:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"49890:17:26"},"nodeType":"YulFunctionCall","src":"49890:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"49885:1:26"}]},{"nodeType":"YulAssignment","src":"49919:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"49930:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"49933:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49926:3:26"},"nodeType":"YulFunctionCall","src":"49926:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"49919:3:26"}]},{"body":{"nodeType":"YulBlock","src":"49959:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"49961:16:26"},"nodeType":"YulFunctionCall","src":"49961:18:26"},"nodeType":"YulExpressionStatement","src":"49961:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"49951:1:26"},{"name":"sum","nodeType":"YulIdentifier","src":"49954:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"49948:2:26"},"nodeType":"YulFunctionCall","src":"49948:10:26"},"nodeType":"YulIf","src":"49945:36:26"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"49828:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"49831:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"49837:3:26","type":""}],"src":"49797:191:26"},{"body":{"nodeType":"YulBlock","src":"50166:357:26","statements":[{"nodeType":"YulAssignment","src":"50176:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50188:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"50199:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50184:3:26"},"nodeType":"YulFunctionCall","src":"50184:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50176:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"50256:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50269:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"50280:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50265:3:26"},"nodeType":"YulFunctionCall","src":"50265:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"50212:43:26"},"nodeType":"YulFunctionCall","src":"50212:71:26"},"nodeType":"YulExpressionStatement","src":"50212:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"50337:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50350:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"50361:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50346:3:26"},"nodeType":"YulFunctionCall","src":"50346:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"50293:43:26"},"nodeType":"YulFunctionCall","src":"50293:72:26"},"nodeType":"YulExpressionStatement","src":"50293:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50386:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"50397:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50382:3:26"},"nodeType":"YulFunctionCall","src":"50382:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50406:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"50412:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"50402:3:26"},"nodeType":"YulFunctionCall","src":"50402:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50375:6:26"},"nodeType":"YulFunctionCall","src":"50375:48:26"},"nodeType":"YulExpressionStatement","src":"50375:48:26"},{"nodeType":"YulAssignment","src":"50432:84:26","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"50502:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"50511:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50440:61:26"},"nodeType":"YulFunctionCall","src":"50440:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50432:4:26"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50122:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"50134:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"50142:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"50150:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50161:4:26","type":""}],"src":"49994:529:26"},{"body":{"nodeType":"YulBlock","src":"50683:288:26","statements":[{"nodeType":"YulAssignment","src":"50693:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50705:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"50716:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50701:3:26"},"nodeType":"YulFunctionCall","src":"50701:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50693:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"50773:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50786:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"50797:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50782:3:26"},"nodeType":"YulFunctionCall","src":"50782:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"50729:43:26"},"nodeType":"YulFunctionCall","src":"50729:71:26"},"nodeType":"YulExpressionStatement","src":"50729:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"50854:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50867:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"50878:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50863:3:26"},"nodeType":"YulFunctionCall","src":"50863:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"50810:43:26"},"nodeType":"YulFunctionCall","src":"50810:72:26"},"nodeType":"YulExpressionStatement","src":"50810:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"50936:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50949:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"50960:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50945:3:26"},"nodeType":"YulFunctionCall","src":"50945:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"50892:43:26"},"nodeType":"YulFunctionCall","src":"50892:72:26"},"nodeType":"YulExpressionStatement","src":"50892:72:26"}]},"name":"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50639:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"50651:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"50659:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"50667:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50678:4:26","type":""}],"src":"50529:442:26"},{"body":{"nodeType":"YulBlock","src":"51030:32:26","statements":[{"nodeType":"YulAssignment","src":"51040:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"51051:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"51040:7:26"}]}]},"name":"cleanup_t_rational_0_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"51012:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"51022:7:26","type":""}],"src":"50977:85:26"},{"body":{"nodeType":"YulBlock","src":"51134:88:26","statements":[{"nodeType":"YulAssignment","src":"51144:72:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"51208:5:26"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nodeType":"YulIdentifier","src":"51182:25:26"},"nodeType":"YulFunctionCall","src":"51182:32:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"51173:8:26"},"nodeType":"YulFunctionCall","src":"51173:42:26"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"51157:15:26"},"nodeType":"YulFunctionCall","src":"51157:59:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"51144:9:26"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"51114:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"51124:9:26","type":""}],"src":"51068:154:26"},{"body":{"nodeType":"YulBlock","src":"51299:72:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51316:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"51358:5:26"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"51321:36:26"},"nodeType":"YulFunctionCall","src":"51321:43:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51309:6:26"},"nodeType":"YulFunctionCall","src":"51309:56:26"},"nodeType":"YulExpressionStatement","src":"51309:56:26"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"51287:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"51294:3:26","type":""}],"src":"51228:143:26"},{"body":{"nodeType":"YulBlock","src":"51555:363:26","statements":[{"nodeType":"YulAssignment","src":"51565:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51577:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"51588:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51573:3:26"},"nodeType":"YulFunctionCall","src":"51573:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51565:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"51645:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51658:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"51669:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51654:3:26"},"nodeType":"YulFunctionCall","src":"51654:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"51601:43:26"},"nodeType":"YulFunctionCall","src":"51601:71:26"},"nodeType":"YulExpressionStatement","src":"51601:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"51732:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51745:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"51756:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51741:3:26"},"nodeType":"YulFunctionCall","src":"51741:18:26"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"51682:49:26"},"nodeType":"YulFunctionCall","src":"51682:78:26"},"nodeType":"YulExpressionStatement","src":"51682:78:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51781:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"51792:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51777:3:26"},"nodeType":"YulFunctionCall","src":"51777:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51801:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"51807:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51797:3:26"},"nodeType":"YulFunctionCall","src":"51797:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51770:6:26"},"nodeType":"YulFunctionCall","src":"51770:48:26"},"nodeType":"YulExpressionStatement","src":"51770:48:26"},{"nodeType":"YulAssignment","src":"51827:84:26","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"51897:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"51906:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51835:61:26"},"nodeType":"YulFunctionCall","src":"51835:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51827:4:26"}]}]},"name":"abi_encode_tuple_t_address_t_rational_0_by_1_t_bytes_memory_ptr__to_t_address_t_uint8_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"51511:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"51523:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"51531:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"51539:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51550:4:26","type":""}],"src":"51377:541:26"},{"body":{"nodeType":"YulBlock","src":"52030:124:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52052:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"52060:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52048:3:26"},"nodeType":"YulFunctionCall","src":"52048:14:26"},{"hexValue":"4f6e6c79207468652070726f66696c65206f776e65722063616e20616e737765","kind":"string","nodeType":"YulLiteral","src":"52064:34:26","type":"","value":"Only the profile owner can answe"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52041:6:26"},"nodeType":"YulFunctionCall","src":"52041:58:26"},"nodeType":"YulExpressionStatement","src":"52041:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52120:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"52128:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52116:3:26"},"nodeType":"YulFunctionCall","src":"52116:15:26"},{"hexValue":"72207175657374696f6e73","kind":"string","nodeType":"YulLiteral","src":"52133:13:26","type":"","value":"r questions"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52109:6:26"},"nodeType":"YulFunctionCall","src":"52109:38:26"},"nodeType":"YulExpressionStatement","src":"52109:38:26"}]},"name":"store_literal_in_memory_feffb919f33f741fb31a502394ba298782f4310d28ba5450a753fb62b6059085","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"52022:6:26","type":""}],"src":"51924:230:26"},{"body":{"nodeType":"YulBlock","src":"52306:220:26","statements":[{"nodeType":"YulAssignment","src":"52316:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52382:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"52387:2:26","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52323:58:26"},"nodeType":"YulFunctionCall","src":"52323:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"52316:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52488:3:26"}],"functionName":{"name":"store_literal_in_memory_feffb919f33f741fb31a502394ba298782f4310d28ba5450a753fb62b6059085","nodeType":"YulIdentifier","src":"52399:88:26"},"nodeType":"YulFunctionCall","src":"52399:93:26"},"nodeType":"YulExpressionStatement","src":"52399:93:26"},{"nodeType":"YulAssignment","src":"52501:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52512:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"52517:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52508:3:26"},"nodeType":"YulFunctionCall","src":"52508:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"52501:3:26"}]}]},"name":"abi_encode_t_stringliteral_feffb919f33f741fb31a502394ba298782f4310d28ba5450a753fb62b6059085_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"52294:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"52302:3:26","type":""}],"src":"52160:366:26"},{"body":{"nodeType":"YulBlock","src":"52703:248:26","statements":[{"nodeType":"YulAssignment","src":"52713:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52725:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"52736:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52721:3:26"},"nodeType":"YulFunctionCall","src":"52721:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52713:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52760:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"52771:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52756:3:26"},"nodeType":"YulFunctionCall","src":"52756:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52779:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"52785:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"52775:3:26"},"nodeType":"YulFunctionCall","src":"52775:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52749:6:26"},"nodeType":"YulFunctionCall","src":"52749:47:26"},"nodeType":"YulExpressionStatement","src":"52749:47:26"},{"nodeType":"YulAssignment","src":"52805:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52939:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_feffb919f33f741fb31a502394ba298782f4310d28ba5450a753fb62b6059085_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52813:124:26"},"nodeType":"YulFunctionCall","src":"52813:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52805:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_feffb919f33f741fb31a502394ba298782f4310d28ba5450a753fb62b6059085__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"52683:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"52698:4:26","type":""}],"src":"52532:419:26"},{"body":{"nodeType":"YulBlock","src":"53063:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53085:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"53093:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53081:3:26"},"nodeType":"YulFunctionCall","src":"53081:14:26"},{"hexValue":"496e76616c6964207175657374696f6e204944","kind":"string","nodeType":"YulLiteral","src":"53097:21:26","type":"","value":"Invalid question ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53074:6:26"},"nodeType":"YulFunctionCall","src":"53074:45:26"},"nodeType":"YulExpressionStatement","src":"53074:45:26"}]},"name":"store_literal_in_memory_7012ed5ec9b5652af45260c130745cf693bfe45361b071a180578cecce6252c4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"53055:6:26","type":""}],"src":"52957:169:26"},{"body":{"nodeType":"YulBlock","src":"53278:220:26","statements":[{"nodeType":"YulAssignment","src":"53288:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53354:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"53359:2:26","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53295:58:26"},"nodeType":"YulFunctionCall","src":"53295:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"53288:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53460:3:26"}],"functionName":{"name":"store_literal_in_memory_7012ed5ec9b5652af45260c130745cf693bfe45361b071a180578cecce6252c4","nodeType":"YulIdentifier","src":"53371:88:26"},"nodeType":"YulFunctionCall","src":"53371:93:26"},"nodeType":"YulExpressionStatement","src":"53371:93:26"},{"nodeType":"YulAssignment","src":"53473:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53484:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"53489:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53480:3:26"},"nodeType":"YulFunctionCall","src":"53480:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"53473:3:26"}]}]},"name":"abi_encode_t_stringliteral_7012ed5ec9b5652af45260c130745cf693bfe45361b071a180578cecce6252c4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"53266:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"53274:3:26","type":""}],"src":"53132:366:26"},{"body":{"nodeType":"YulBlock","src":"53675:248:26","statements":[{"nodeType":"YulAssignment","src":"53685:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53697:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"53708:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53693:3:26"},"nodeType":"YulFunctionCall","src":"53693:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53685:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53732:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"53743:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53728:3:26"},"nodeType":"YulFunctionCall","src":"53728:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53751:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"53757:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"53747:3:26"},"nodeType":"YulFunctionCall","src":"53747:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53721:6:26"},"nodeType":"YulFunctionCall","src":"53721:47:26"},"nodeType":"YulExpressionStatement","src":"53721:47:26"},{"nodeType":"YulAssignment","src":"53777:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53911:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_7012ed5ec9b5652af45260c130745cf693bfe45361b071a180578cecce6252c4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53785:124:26"},"nodeType":"YulFunctionCall","src":"53785:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53777:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_7012ed5ec9b5652af45260c130745cf693bfe45361b071a180578cecce6252c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"53655:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"53670:4:26","type":""}],"src":"53504:419:26"},{"body":{"nodeType":"YulBlock","src":"54018:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"54035:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"54038:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"54028:6:26"},"nodeType":"YulFunctionCall","src":"54028:12:26"},"nodeType":"YulExpressionStatement","src":"54028:12:26"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"53929:117:26"},{"body":{"nodeType":"YulBlock","src":"54141:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"54158:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"54161:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"54151:6:26"},"nodeType":"YulFunctionCall","src":"54151:12:26"},"nodeType":"YulExpressionStatement","src":"54151:12:26"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"54052:117:26"},{"body":{"nodeType":"YulBlock","src":"54264:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"54281:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"54284:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"54274:6:26"},"nodeType":"YulFunctionCall","src":"54274:12:26"},"nodeType":"YulExpressionStatement","src":"54274:12:26"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"54175:117:26"},{"body":{"nodeType":"YulBlock","src":"54388:634:26","statements":[{"nodeType":"YulVariableDeclaration","src":"54398:51:26","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"54437:11:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"54424:12:26"},"nodeType":"YulFunctionCall","src":"54424:25:26"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"54402:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"54543:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"54545:77:26"},"nodeType":"YulFunctionCall","src":"54545:79:26"},"nodeType":"YulExpressionStatement","src":"54545:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"54472:18:26"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"54500:12:26"},"nodeType":"YulFunctionCall","src":"54500:14:26"},{"name":"base_ref","nodeType":"YulIdentifier","src":"54516:8:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54496:3:26"},"nodeType":"YulFunctionCall","src":"54496:29:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"54531:4:26","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"54537:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54527:3:26"},"nodeType":"YulFunctionCall","src":"54527:12:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54492:3:26"},"nodeType":"YulFunctionCall","src":"54492:48:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"54468:3:26"},"nodeType":"YulFunctionCall","src":"54468:73:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"54461:6:26"},"nodeType":"YulFunctionCall","src":"54461:81:26"},"nodeType":"YulIf","src":"54458:168:26"},{"nodeType":"YulAssignment","src":"54635:41:26","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"54647:8:26"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"54657:18:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54643:3:26"},"nodeType":"YulFunctionCall","src":"54643:33:26"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"54635:4:26"}]},{"nodeType":"YulAssignment","src":"54686:28:26","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"54709:4:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"54696:12:26"},"nodeType":"YulFunctionCall","src":"54696:18:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"54686:6:26"}]},{"body":{"nodeType":"YulBlock","src":"54757:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"54759:77:26"},"nodeType":"YulFunctionCall","src":"54759:79:26"},"nodeType":"YulExpressionStatement","src":"54759:79:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"54729:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"54737:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"54726:2:26"},"nodeType":"YulFunctionCall","src":"54726:30:26"},"nodeType":"YulIf","src":"54723:117:26"},{"nodeType":"YulAssignment","src":"54849:21:26","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"54861:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"54867:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54857:3:26"},"nodeType":"YulFunctionCall","src":"54857:13:26"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"54849:4:26"}]},{"body":{"nodeType":"YulBlock","src":"54932:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"54934:77:26"},"nodeType":"YulFunctionCall","src":"54934:79:26"},"nodeType":"YulExpressionStatement","src":"54934:79:26"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"54886:4:26"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"54896:12:26"},"nodeType":"YulFunctionCall","src":"54896:14:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"54916:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"54924:4:26","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"54912:3:26"},"nodeType":"YulFunctionCall","src":"54912:17:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54892:3:26"},"nodeType":"YulFunctionCall","src":"54892:38:26"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"54882:3:26"},"nodeType":"YulFunctionCall","src":"54882:49:26"},"nodeType":"YulIf","src":"54879:136:26"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"54349:8:26","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"54359:11:26","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"54375:4:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"54381:6:26","type":""}],"src":"54298:724:26"},{"body":{"nodeType":"YulBlock","src":"55172:147:26","statements":[{"nodeType":"YulAssignment","src":"55183:110:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"55272:6:26"},{"name":"value1","nodeType":"YulIdentifier","src":"55280:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"55289:3:26"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"55190:81:26"},"nodeType":"YulFunctionCall","src":"55190:103:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"55183:3:26"}]},{"nodeType":"YulAssignment","src":"55303:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"55310:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"55303:3:26"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"55143:3:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"55149:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"55157:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"55168:3:26","type":""}],"src":"55028:291:26"},{"body":{"nodeType":"YulBlock","src":"55431:72:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"55453:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"55461:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55449:3:26"},"nodeType":"YulFunctionCall","src":"55449:14:26"},{"hexValue":"416c726561647920636c61696d65642061206672656520746f6b656e","kind":"string","nodeType":"YulLiteral","src":"55465:30:26","type":"","value":"Already claimed a free token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55442:6:26"},"nodeType":"YulFunctionCall","src":"55442:54:26"},"nodeType":"YulExpressionStatement","src":"55442:54:26"}]},"name":"store_literal_in_memory_4eb56e33b190c911f9a62dafbc06b9f3d9c8ebfa91addfd5c4ed064caf80fb28","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"55423:6:26","type":""}],"src":"55325:178:26"},{"body":{"nodeType":"YulBlock","src":"55655:220:26","statements":[{"nodeType":"YulAssignment","src":"55665:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55731:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"55736:2:26","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55672:58:26"},"nodeType":"YulFunctionCall","src":"55672:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"55665:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55837:3:26"}],"functionName":{"name":"store_literal_in_memory_4eb56e33b190c911f9a62dafbc06b9f3d9c8ebfa91addfd5c4ed064caf80fb28","nodeType":"YulIdentifier","src":"55748:88:26"},"nodeType":"YulFunctionCall","src":"55748:93:26"},"nodeType":"YulExpressionStatement","src":"55748:93:26"},{"nodeType":"YulAssignment","src":"55850:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55861:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"55866:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55857:3:26"},"nodeType":"YulFunctionCall","src":"55857:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"55850:3:26"}]}]},"name":"abi_encode_t_stringliteral_4eb56e33b190c911f9a62dafbc06b9f3d9c8ebfa91addfd5c4ed064caf80fb28_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"55643:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"55651:3:26","type":""}],"src":"55509:366:26"},{"body":{"nodeType":"YulBlock","src":"56052:248:26","statements":[{"nodeType":"YulAssignment","src":"56062:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56074:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"56085:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56070:3:26"},"nodeType":"YulFunctionCall","src":"56070:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56062:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56109:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"56120:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56105:3:26"},"nodeType":"YulFunctionCall","src":"56105:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"56128:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"56134:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"56124:3:26"},"nodeType":"YulFunctionCall","src":"56124:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56098:6:26"},"nodeType":"YulFunctionCall","src":"56098:47:26"},"nodeType":"YulExpressionStatement","src":"56098:47:26"},{"nodeType":"YulAssignment","src":"56154:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"56288:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_4eb56e33b190c911f9a62dafbc06b9f3d9c8ebfa91addfd5c4ed064caf80fb28_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"56162:124:26"},"nodeType":"YulFunctionCall","src":"56162:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56154:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_4eb56e33b190c911f9a62dafbc06b9f3d9c8ebfa91addfd5c4ed064caf80fb28__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"56032:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"56047:4:26","type":""}],"src":"55881:419:26"},{"body":{"nodeType":"YulBlock","src":"56412:119:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"56434:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"56442:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56430:3:26"},"nodeType":"YulFunctionCall","src":"56430:14:26"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"56446:34:26","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56423:6:26"},"nodeType":"YulFunctionCall","src":"56423:58:26"},"nodeType":"YulExpressionStatement","src":"56423:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"56502:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"56510:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56498:3:26"},"nodeType":"YulFunctionCall","src":"56498:15:26"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"56515:8:26","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56491:6:26"},"nodeType":"YulFunctionCall","src":"56491:33:26"},"nodeType":"YulExpressionStatement","src":"56491:33:26"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"56404:6:26","type":""}],"src":"56306:225:26"},{"body":{"nodeType":"YulBlock","src":"56683:220:26","statements":[{"nodeType":"YulAssignment","src":"56693:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56759:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"56764:2:26","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"56700:58:26"},"nodeType":"YulFunctionCall","src":"56700:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"56693:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56865:3:26"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"56776:88:26"},"nodeType":"YulFunctionCall","src":"56776:93:26"},"nodeType":"YulExpressionStatement","src":"56776:93:26"},{"nodeType":"YulAssignment","src":"56878:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56889:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"56894:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56885:3:26"},"nodeType":"YulFunctionCall","src":"56885:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"56878:3:26"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"56671:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"56679:3:26","type":""}],"src":"56537:366:26"},{"body":{"nodeType":"YulBlock","src":"57080:248:26","statements":[{"nodeType":"YulAssignment","src":"57090:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57102:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"57113:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57098:3:26"},"nodeType":"YulFunctionCall","src":"57098:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57090:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57137:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"57148:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57133:3:26"},"nodeType":"YulFunctionCall","src":"57133:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"57156:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"57162:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"57152:3:26"},"nodeType":"YulFunctionCall","src":"57152:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57126:6:26"},"nodeType":"YulFunctionCall","src":"57126:47:26"},"nodeType":"YulExpressionStatement","src":"57126:47:26"},{"nodeType":"YulAssignment","src":"57182:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"57316:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"57190:124:26"},"nodeType":"YulFunctionCall","src":"57190:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57182:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"57060:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"57075:4:26","type":""}],"src":"56909:419:26"},{"body":{"nodeType":"YulBlock","src":"57390:60:26","statements":[{"nodeType":"YulAssignment","src":"57400:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"57408:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"57400:4:26"}]},{"nodeType":"YulAssignment","src":"57421:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"57433:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"57438:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57429:3:26"},"nodeType":"YulFunctionCall","src":"57429:14:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"57421:4:26"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"57377:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"57385:4:26","type":""}],"src":"57334:116:26"},{"body":{"nodeType":"YulBlock","src":"57501:105:26","statements":[{"nodeType":"YulAssignment","src":"57511:89:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"57526:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"57533:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"57522:3:26"},"nodeType":"YulFunctionCall","src":"57522:78:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"57511:7:26"}]}]},"name":"cleanup_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"57483:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"57493:7:26","type":""}],"src":"57456:150:26"},{"body":{"nodeType":"YulBlock","src":"57667:99:26","statements":[{"nodeType":"YulVariableDeclaration","src":"57678:42:26","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"57715:3:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"57709:5:26"},"nodeType":"YulFunctionCall","src":"57709:10:26"}],"functionName":{"name":"cleanup_t_bytes20","nodeType":"YulIdentifier","src":"57691:17:26"},"nodeType":"YulFunctionCall","src":"57691:29:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"57682:5:26","type":""}]},{"nodeType":"YulAssignment","src":"57730:29:26","value":{"name":"value","nodeType":"YulIdentifier","src":"57754:5:26"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"57730:11:26"}]}]},"name":"read_from_memoryt_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"57647:3:26","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"57655:11:26","type":""}],"src":"57612:154:26"},{"body":{"nodeType":"YulBlock","src":"57862:504:26","statements":[{"nodeType":"YulVariableDeclaration","src":"57873:52:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"57919:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"57887:31:26"},"nodeType":"YulFunctionCall","src":"57887:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"57877:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"57934:21:26","value":{"name":"array","nodeType":"YulIdentifier","src":"57950:5:26"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"57938:8:26","type":""}]},{"nodeType":"YulAssignment","src":"57965:52:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"58011:5:26"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"57977:33:26"},"nodeType":"YulFunctionCall","src":"57977:40:26"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"57965:8:26"}]},{"nodeType":"YulAssignment","src":"58027:44:26","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"58062:8:26"}],"functionName":{"name":"read_from_memoryt_bytes20","nodeType":"YulIdentifier","src":"58036:25:26"},"nodeType":"YulFunctionCall","src":"58036:35:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"58027:5:26"}]},{"body":{"nodeType":"YulBlock","src":"58099:260:26","statements":[{"nodeType":"YulAssignment","src":"58113:236:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"58143:5:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"58210:1:26","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"58217:2:26","type":"","value":"20"},{"name":"length","nodeType":"YulIdentifier","src":"58221:6:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"58213:3:26"},"nodeType":"YulFunctionCall","src":"58213:15:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"58206:3:26"},"nodeType":"YulFunctionCall","src":"58206:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"58251:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"58166:18:26"},"nodeType":"YulFunctionCall","src":"58166:169:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"58122:3:26"},"nodeType":"YulFunctionCall","src":"58122:227:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"58113:5:26"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"58087:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"58095:2:26","type":"","value":"20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"58084:2:26"},"nodeType":"YulFunctionCall","src":"58084:14:26"},"nodeType":"YulIf","src":"58081:278:26"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"57846:5:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"57856:5:26","type":""}],"src":"57772:594:26"},{"body":{"nodeType":"YulBlock","src":"58600:523:26","statements":[{"nodeType":"YulAssignment","src":"58610:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58622:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"58633:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58618:3:26"},"nodeType":"YulFunctionCall","src":"58618:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"58610:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"58691:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58704:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"58715:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58700:3:26"},"nodeType":"YulFunctionCall","src":"58700:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"58647:43:26"},"nodeType":"YulFunctionCall","src":"58647:71:26"},"nodeType":"YulExpressionStatement","src":"58647:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"58772:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58785:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"58796:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58781:3:26"},"nodeType":"YulFunctionCall","src":"58781:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"58728:43:26"},"nodeType":"YulFunctionCall","src":"58728:72:26"},"nodeType":"YulExpressionStatement","src":"58728:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"58854:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58867:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"58878:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58863:3:26"},"nodeType":"YulFunctionCall","src":"58863:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"58810:43:26"},"nodeType":"YulFunctionCall","src":"58810:72:26"},"nodeType":"YulExpressionStatement","src":"58810:72:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"58936:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58949:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"58960:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58945:3:26"},"nodeType":"YulFunctionCall","src":"58945:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"58892:43:26"},"nodeType":"YulFunctionCall","src":"58892:72:26"},"nodeType":"YulExpressionStatement","src":"58892:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58985:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"58996:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58981:3:26"},"nodeType":"YulFunctionCall","src":"58981:19:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"59006:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"59012:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"59002:3:26"},"nodeType":"YulFunctionCall","src":"59002:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"58974:6:26"},"nodeType":"YulFunctionCall","src":"58974:49:26"},"nodeType":"YulExpressionStatement","src":"58974:49:26"},{"nodeType":"YulAssignment","src":"59032:84:26","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"59102:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"59111:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"59040:61:26"},"nodeType":"YulFunctionCall","src":"59040:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"59032:4:26"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"58540:9:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"58552:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"58560:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"58568:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"58576:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"58584:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"58595:4:26","type":""}],"src":"58372:751:26"},{"body":{"nodeType":"YulBlock","src":"59235:76:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"59257:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"59265:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59253:3:26"},"nodeType":"YulFunctionCall","src":"59253:14:26"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"59269:34:26","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"59246:6:26"},"nodeType":"YulFunctionCall","src":"59246:58:26"},"nodeType":"YulExpressionStatement","src":"59246:58:26"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"59227:6:26","type":""}],"src":"59129:182:26"},{"body":{"nodeType":"YulBlock","src":"59463:220:26","statements":[{"nodeType":"YulAssignment","src":"59473:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59539:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"59544:2:26","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"59480:58:26"},"nodeType":"YulFunctionCall","src":"59480:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"59473:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59645:3:26"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"59556:88:26"},"nodeType":"YulFunctionCall","src":"59556:93:26"},"nodeType":"YulExpressionStatement","src":"59556:93:26"},{"nodeType":"YulAssignment","src":"59658:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59669:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"59674:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59665:3:26"},"nodeType":"YulFunctionCall","src":"59665:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"59658:3:26"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"59451:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"59459:3:26","type":""}],"src":"59317:366:26"},{"body":{"nodeType":"YulBlock","src":"59860:248:26","statements":[{"nodeType":"YulAssignment","src":"59870:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59882:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"59893:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59878:3:26"},"nodeType":"YulFunctionCall","src":"59878:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"59870:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59917:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"59928:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59913:3:26"},"nodeType":"YulFunctionCall","src":"59913:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"59936:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"59942:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"59932:3:26"},"nodeType":"YulFunctionCall","src":"59932:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"59906:6:26"},"nodeType":"YulFunctionCall","src":"59906:47:26"},"nodeType":"YulExpressionStatement","src":"59906:47:26"},{"nodeType":"YulAssignment","src":"59962:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"60096:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"59970:124:26"},"nodeType":"YulFunctionCall","src":"59970:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"59962:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"59840:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"59855:4:26","type":""}],"src":"59689:419:26"},{"body":{"nodeType":"YulBlock","src":"60296:371:26","statements":[{"nodeType":"YulAssignment","src":"60306:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60318:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"60329:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60314:3:26"},"nodeType":"YulFunctionCall","src":"60314:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"60306:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"60387:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60400:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"60411:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60396:3:26"},"nodeType":"YulFunctionCall","src":"60396:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"60343:43:26"},"nodeType":"YulFunctionCall","src":"60343:71:26"},"nodeType":"YulExpressionStatement","src":"60343:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"60468:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60481:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"60492:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60477:3:26"},"nodeType":"YulFunctionCall","src":"60477:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"60424:43:26"},"nodeType":"YulFunctionCall","src":"60424:72:26"},"nodeType":"YulExpressionStatement","src":"60424:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"60550:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60563:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"60574:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60559:3:26"},"nodeType":"YulFunctionCall","src":"60559:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"60506:43:26"},"nodeType":"YulFunctionCall","src":"60506:72:26"},"nodeType":"YulExpressionStatement","src":"60506:72:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"60632:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60645:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"60656:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60641:3:26"},"nodeType":"YulFunctionCall","src":"60641:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"60588:43:26"},"nodeType":"YulFunctionCall","src":"60588:72:26"},"nodeType":"YulExpressionStatement","src":"60588:72:26"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"60244:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"60256:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"60264:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"60272:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"60280:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"60291:4:26","type":""}],"src":"60114:553:26"},{"body":{"nodeType":"YulBlock","src":"60726:87:26","statements":[{"nodeType":"YulAssignment","src":"60736:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"60744:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"60736:4:26"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"60764:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"60767:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"60757:6:26"},"nodeType":"YulFunctionCall","src":"60757:14:26"},"nodeType":"YulExpressionStatement","src":"60757:14:26"},{"nodeType":"YulAssignment","src":"60780:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"60798:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"60801:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"60788:9:26"},"nodeType":"YulFunctionCall","src":"60788:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"60780:4:26"}]}]},"name":"array_dataslot_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"60713:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"60721:4:26","type":""}],"src":"60673:140:26"},{"body":{"nodeType":"YulBlock","src":"60897:463:26","statements":[{"body":{"nodeType":"YulBlock","src":"60923:430:26","statements":[{"nodeType":"YulVariableDeclaration","src":"60937:53:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"60984:5:26"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"60953:30:26"},"nodeType":"YulFunctionCall","src":"60953:37:26"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"60941:8:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"61003:63:26","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"61026:8:26"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"61054:10:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"61036:17:26"},"nodeType":"YulFunctionCall","src":"61036:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61022:3:26"},"nodeType":"YulFunctionCall","src":"61022:44:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"61007:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"61223:27:26","statements":[{"nodeType":"YulAssignment","src":"61225:23:26","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"61240:8:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"61225:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"61207:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"61219:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"61204:2:26"},"nodeType":"YulFunctionCall","src":"61204:18:26"},"nodeType":"YulIf","src":"61201:49:26"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"61292:11:26"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"61309:8:26"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"61337:3:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"61319:17:26"},"nodeType":"YulFunctionCall","src":"61319:22:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61305:3:26"},"nodeType":"YulFunctionCall","src":"61305:37:26"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"61263:28:26"},"nodeType":"YulFunctionCall","src":"61263:80:26"},"nodeType":"YulExpressionStatement","src":"61263:80:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"60914:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"60919:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"60911:2:26"},"nodeType":"YulFunctionCall","src":"60911:11:26"},"nodeType":"YulIf","src":"60908:445:26"}]},"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"60873:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"60880:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"60885:10:26","type":""}],"src":"60819:541:26"},{"body":{"nodeType":"YulBlock","src":"61456:1300:26","statements":[{"nodeType":"YulVariableDeclaration","src":"61467:50:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"61513:3:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"61481:31:26"},"nodeType":"YulFunctionCall","src":"61481:36:26"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"61471:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"61602:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"61604:16:26"},"nodeType":"YulFunctionCall","src":"61604:18:26"},"nodeType":"YulExpressionStatement","src":"61604:18:26"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"61574:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"61582:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"61571:2:26"},"nodeType":"YulFunctionCall","src":"61571:30:26"},"nodeType":"YulIf","src":"61568:56:26"},{"nodeType":"YulVariableDeclaration","src":"61634:52:26","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"61680:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"61674:5:26"},"nodeType":"YulFunctionCall","src":"61674:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"61648:25:26"},"nodeType":"YulFunctionCall","src":"61648:38:26"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"61638:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"61778:4:26"},{"name":"oldLen","nodeType":"YulIdentifier","src":"61784:6:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"61792:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulIdentifier","src":"61733:44:26"},"nodeType":"YulFunctionCall","src":"61733:66:26"},"nodeType":"YulExpressionStatement","src":"61733:66:26"},{"nodeType":"YulVariableDeclaration","src":"61809:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"61826:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"61813:9:26","type":""}]},{"nodeType":"YulAssignment","src":"61837:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"61850:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"61837:9:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"61901:610:26","statements":[{"nodeType":"YulVariableDeclaration","src":"61915:37:26","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"61934:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"61946:4:26","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"61942:3:26"},"nodeType":"YulFunctionCall","src":"61942:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"61930:3:26"},"nodeType":"YulFunctionCall","src":"61930:22:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"61919:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"61966:50:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"62011:4:26"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"61980:30:26"},"nodeType":"YulFunctionCall","src":"61980:36:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"61970:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"62029:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"62038:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"62033:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"62097:163:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"62122:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"62140:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"62145:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62136:3:26"},"nodeType":"YulFunctionCall","src":"62136:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"62130:5:26"},"nodeType":"YulFunctionCall","src":"62130:26:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"62115:6:26"},"nodeType":"YulFunctionCall","src":"62115:42:26"},"nodeType":"YulExpressionStatement","src":"62115:42:26"},{"nodeType":"YulAssignment","src":"62174:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"62188:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"62196:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62184:3:26"},"nodeType":"YulFunctionCall","src":"62184:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"62174:6:26"}]},{"nodeType":"YulAssignment","src":"62215:31:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"62232:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"62243:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62228:3:26"},"nodeType":"YulFunctionCall","src":"62228:18:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"62215:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"62063:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"62066:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"62060:2:26"},"nodeType":"YulFunctionCall","src":"62060:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"62075:21:26","statements":[{"nodeType":"YulAssignment","src":"62077:17:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"62086:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"62089:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62082:3:26"},"nodeType":"YulFunctionCall","src":"62082:12:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"62077:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"62056:3:26","statements":[]},"src":"62052:208:26"},{"body":{"nodeType":"YulBlock","src":"62296:156:26","statements":[{"nodeType":"YulVariableDeclaration","src":"62314:43:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"62341:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"62346:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62337:3:26"},"nodeType":"YulFunctionCall","src":"62337:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"62331:5:26"},"nodeType":"YulFunctionCall","src":"62331:26:26"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"62318:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"62381:6:26"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"62408:9:26"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"62423:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"62431:4:26","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"62419:3:26"},"nodeType":"YulFunctionCall","src":"62419:17:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"62389:18:26"},"nodeType":"YulFunctionCall","src":"62389:48:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"62374:6:26"},"nodeType":"YulFunctionCall","src":"62374:64:26"},"nodeType":"YulExpressionStatement","src":"62374:64:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"62279:7:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"62288:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"62276:2:26"},"nodeType":"YulFunctionCall","src":"62276:19:26"},"nodeType":"YulIf","src":"62273:179:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"62472:4:26"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"62486:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"62494:1:26","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"62482:3:26"},"nodeType":"YulFunctionCall","src":"62482:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"62498:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62478:3:26"},"nodeType":"YulFunctionCall","src":"62478:22:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"62465:6:26"},"nodeType":"YulFunctionCall","src":"62465:36:26"},"nodeType":"YulExpressionStatement","src":"62465:36:26"}]},"nodeType":"YulCase","src":"61894:617:26","value":{"kind":"number","nodeType":"YulLiteral","src":"61899:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"62528:222:26","statements":[{"nodeType":"YulVariableDeclaration","src":"62542:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"62555:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"62546:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"62579:67:26","statements":[{"nodeType":"YulAssignment","src":"62597:35:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"62616:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"62621:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62612:3:26"},"nodeType":"YulFunctionCall","src":"62612:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"62606:5:26"},"nodeType":"YulFunctionCall","src":"62606:26:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"62597:5:26"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"62572:6:26"},"nodeType":"YulIf","src":"62569:77:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"62666:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"62725:5:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"62732:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"62672:52:26"},"nodeType":"YulFunctionCall","src":"62672:67:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"62659:6:26"},"nodeType":"YulFunctionCall","src":"62659:81:26"},"nodeType":"YulExpressionStatement","src":"62659:81:26"}]},"nodeType":"YulCase","src":"62520:230:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"61874:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"61882:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"61871:2:26"},"nodeType":"YulFunctionCall","src":"61871:14:26"},"nodeType":"YulSwitch","src":"61864:886:26"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"61445:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"61451:3:26","type":""}],"src":"61366:1390:26"},{"body":{"nodeType":"YulBlock","src":"62807:105:26","statements":[{"nodeType":"YulAssignment","src":"62817:89:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"62832:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"62839:66:26","type":"","value":"0xffffffffffffffffffff00000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"62828:3:26"},"nodeType":"YulFunctionCall","src":"62828:78:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62817:7:26"}]}]},"name":"cleanup_t_bytes10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"62789:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"62799:7:26","type":""}],"src":"62762:150:26"},{"body":{"nodeType":"YulBlock","src":"62965:32:26","statements":[{"nodeType":"YulAssignment","src":"62975:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"62986:5:26"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"62975:7:26"}]}]},"name":"leftAlign_t_bytes10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"62947:5:26","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"62957:7:26","type":""}],"src":"62918:79:26"},{"body":{"nodeType":"YulBlock","src":"63086:74:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"63103:3:26"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"63146:5:26"}],"functionName":{"name":"cleanup_t_bytes10","nodeType":"YulIdentifier","src":"63128:17:26"},"nodeType":"YulFunctionCall","src":"63128:24:26"}],"functionName":{"name":"leftAlign_t_bytes10","nodeType":"YulIdentifier","src":"63108:19:26"},"nodeType":"YulFunctionCall","src":"63108:45:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"63096:6:26"},"nodeType":"YulFunctionCall","src":"63096:58:26"},"nodeType":"YulExpressionStatement","src":"63096:58:26"}]},"name":"abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63074:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"63081:3:26","type":""}],"src":"63003:157:26"},{"body":{"nodeType":"YulBlock","src":"63210:105:26","statements":[{"nodeType":"YulAssignment","src":"63220:89:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"63235:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"63242:66:26","type":"","value":"0xffff000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"63231:3:26"},"nodeType":"YulFunctionCall","src":"63231:78:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"63220:7:26"}]}]},"name":"cleanup_t_bytes2","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63192:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"63202:7:26","type":""}],"src":"63166:149:26"},{"body":{"nodeType":"YulBlock","src":"63367:32:26","statements":[{"nodeType":"YulAssignment","src":"63377:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"63388:5:26"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"63377:7:26"}]}]},"name":"leftAlign_t_bytes2","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63349:5:26","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"63359:7:26","type":""}],"src":"63321:78:26"},{"body":{"nodeType":"YulBlock","src":"63486:72:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"63503:3:26"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"63544:5:26"}],"functionName":{"name":"cleanup_t_bytes2","nodeType":"YulIdentifier","src":"63527:16:26"},"nodeType":"YulFunctionCall","src":"63527:23:26"}],"functionName":{"name":"leftAlign_t_bytes2","nodeType":"YulIdentifier","src":"63508:18:26"},"nodeType":"YulFunctionCall","src":"63508:43:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"63496:6:26"},"nodeType":"YulFunctionCall","src":"63496:56:26"},"nodeType":"YulExpressionStatement","src":"63496:56:26"}]},"name":"abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63474:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"63481:3:26","type":""}],"src":"63405:153:26"},{"body":{"nodeType":"YulBlock","src":"63611:32:26","statements":[{"nodeType":"YulAssignment","src":"63621:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"63632:5:26"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"63621:7:26"}]}]},"name":"leftAlign_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63593:5:26","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"63603:7:26","type":""}],"src":"63564:79:26"},{"body":{"nodeType":"YulBlock","src":"63732:74:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"63749:3:26"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"63792:5:26"}],"functionName":{"name":"cleanup_t_bytes20","nodeType":"YulIdentifier","src":"63774:17:26"},"nodeType":"YulFunctionCall","src":"63774:24:26"}],"functionName":{"name":"leftAlign_t_bytes20","nodeType":"YulIdentifier","src":"63754:19:26"},"nodeType":"YulFunctionCall","src":"63754:45:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"63742:6:26"},"nodeType":"YulFunctionCall","src":"63742:58:26"},"nodeType":"YulExpressionStatement","src":"63742:58:26"}]},"name":"abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63720:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"63727:3:26","type":""}],"src":"63649:157:26"},{"body":{"nodeType":"YulBlock","src":"63982:363:26","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"64055:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"64064:3:26"}],"functionName":{"name":"abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"63993:61:26"},"nodeType":"YulFunctionCall","src":"63993:75:26"},"nodeType":"YulExpressionStatement","src":"63993:75:26"},{"nodeType":"YulAssignment","src":"64077:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64088:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"64093:2:26","type":"","value":"10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64084:3:26"},"nodeType":"YulFunctionCall","src":"64084:12:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"64077:3:26"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"64166:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"64175:3:26"}],"functionName":{"name":"abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"64106:59:26"},"nodeType":"YulFunctionCall","src":"64106:73:26"},"nodeType":"YulExpressionStatement","src":"64106:73:26"},{"nodeType":"YulAssignment","src":"64188:18:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64199:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"64204:1:26","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64195:3:26"},"nodeType":"YulFunctionCall","src":"64195:11:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"64188:3:26"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"64278:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"64287:3:26"}],"functionName":{"name":"abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"64216:61:26"},"nodeType":"YulFunctionCall","src":"64216:75:26"},"nodeType":"YulExpressionStatement","src":"64216:75:26"},{"nodeType":"YulAssignment","src":"64300:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64311:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"64316:2:26","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64307:3:26"},"nodeType":"YulFunctionCall","src":"64307:12:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"64300:3:26"}]},{"nodeType":"YulAssignment","src":"64329:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"64336:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"64329:3:26"}]}]},"name":"abi_encode_tuple_packed_t_bytes10_t_bytes2_t_bytes20__to_t_bytes10_t_bytes2_t_bytes20__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"63945:3:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"63951:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"63959:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"63967:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"63978:3:26","type":""}],"src":"63812:533:26"},{"body":{"nodeType":"YulBlock","src":"64406:99:26","statements":[{"nodeType":"YulVariableDeclaration","src":"64417:42:26","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"64454:3:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"64448:5:26"},"nodeType":"YulFunctionCall","src":"64448:10:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"64430:17:26"},"nodeType":"YulFunctionCall","src":"64430:29:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"64421:5:26","type":""}]},{"nodeType":"YulAssignment","src":"64469:29:26","value":{"name":"value","nodeType":"YulIdentifier","src":"64493:5:26"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"64469:11:26"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"64386:3:26","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"64394:11:26","type":""}],"src":"64351:154:26"},{"body":{"nodeType":"YulBlock","src":"64601:504:26","statements":[{"nodeType":"YulVariableDeclaration","src":"64612:52:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"64658:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"64626:31:26"},"nodeType":"YulFunctionCall","src":"64626:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"64616:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"64673:21:26","value":{"name":"array","nodeType":"YulIdentifier","src":"64689:5:26"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"64677:8:26","type":""}]},{"nodeType":"YulAssignment","src":"64704:52:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"64750:5:26"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"64716:33:26"},"nodeType":"YulFunctionCall","src":"64716:40:26"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"64704:8:26"}]},{"nodeType":"YulAssignment","src":"64766:44:26","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"64801:8:26"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"64775:25:26"},"nodeType":"YulFunctionCall","src":"64775:35:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"64766:5:26"}]},{"body":{"nodeType":"YulBlock","src":"64838:260:26","statements":[{"nodeType":"YulAssignment","src":"64852:236:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"64882:5:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"64949:1:26","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"64956:2:26","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"64960:6:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"64952:3:26"},"nodeType":"YulFunctionCall","src":"64952:15:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"64945:3:26"},"nodeType":"YulFunctionCall","src":"64945:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"64990:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"64905:18:26"},"nodeType":"YulFunctionCall","src":"64905:169:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"64861:3:26"},"nodeType":"YulFunctionCall","src":"64861:227:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"64852:5:26"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"64826:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"64834:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"64823:2:26"},"nodeType":"YulFunctionCall","src":"64823:14:26"},"nodeType":"YulIf","src":"64820:278:26"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"64585:5:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64595:5:26","type":""}],"src":"64511:594:26"},{"body":{"nodeType":"YulBlock","src":"65265:288:26","statements":[{"nodeType":"YulAssignment","src":"65275:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"65287:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"65298:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65283:3:26"},"nodeType":"YulFunctionCall","src":"65283:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"65275:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"65355:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"65368:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"65379:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65364:3:26"},"nodeType":"YulFunctionCall","src":"65364:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"65311:43:26"},"nodeType":"YulFunctionCall","src":"65311:71:26"},"nodeType":"YulExpressionStatement","src":"65311:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"65436:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"65449:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"65460:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65445:3:26"},"nodeType":"YulFunctionCall","src":"65445:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"65392:43:26"},"nodeType":"YulFunctionCall","src":"65392:72:26"},"nodeType":"YulExpressionStatement","src":"65392:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"65518:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"65531:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"65542:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65527:3:26"},"nodeType":"YulFunctionCall","src":"65527:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"65474:43:26"},"nodeType":"YulFunctionCall","src":"65474:72:26"},"nodeType":"YulExpressionStatement","src":"65474:72:26"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"65221:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"65233:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"65241:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"65249:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"65260:4:26","type":""}],"src":"65111:442:26"},{"body":{"nodeType":"YulBlock","src":"65725:351:26","statements":[{"nodeType":"YulAssignment","src":"65735:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"65747:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"65758:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65743:3:26"},"nodeType":"YulFunctionCall","src":"65743:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"65735:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"65815:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"65828:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"65839:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65824:3:26"},"nodeType":"YulFunctionCall","src":"65824:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"65771:43:26"},"nodeType":"YulFunctionCall","src":"65771:71:26"},"nodeType":"YulExpressionStatement","src":"65771:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"65890:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"65903:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"65914:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65899:3:26"},"nodeType":"YulFunctionCall","src":"65899:18:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"65852:37:26"},"nodeType":"YulFunctionCall","src":"65852:66:26"},"nodeType":"YulExpressionStatement","src":"65852:66:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"65939:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"65950:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65935:3:26"},"nodeType":"YulFunctionCall","src":"65935:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"65959:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"65965:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"65955:3:26"},"nodeType":"YulFunctionCall","src":"65955:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"65928:6:26"},"nodeType":"YulFunctionCall","src":"65928:48:26"},"nodeType":"YulExpressionStatement","src":"65928:48:26"},{"nodeType":"YulAssignment","src":"65985:84:26","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"66055:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"66064:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"65993:61:26"},"nodeType":"YulFunctionCall","src":"65993:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"65985:4:26"}]}]},"name":"abi_encode_tuple_t_uint256_t_bool_t_bytes_memory_ptr__to_t_uint256_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"65681:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"65693:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"65701:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"65709:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"65720:4:26","type":""}],"src":"65559:517:26"},{"body":{"nodeType":"YulBlock","src":"66147:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"66164:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"66187:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"66169:17:26"},"nodeType":"YulFunctionCall","src":"66169:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"66157:6:26"},"nodeType":"YulFunctionCall","src":"66157:37:26"},"nodeType":"YulExpressionStatement","src":"66157:37:26"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"66135:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"66142:3:26","type":""}],"src":"66082:118:26"},{"body":{"nodeType":"YulBlock","src":"66350:275:26","statements":[{"nodeType":"YulAssignment","src":"66360:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"66372:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"66383:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66368:3:26"},"nodeType":"YulFunctionCall","src":"66368:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"66360:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"66440:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"66453:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"66464:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66449:3:26"},"nodeType":"YulFunctionCall","src":"66449:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"66396:43:26"},"nodeType":"YulFunctionCall","src":"66396:71:26"},"nodeType":"YulExpressionStatement","src":"66396:71:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"66488:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"66499:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66484:3:26"},"nodeType":"YulFunctionCall","src":"66484:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"66508:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"66514:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"66504:3:26"},"nodeType":"YulFunctionCall","src":"66504:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"66477:6:26"},"nodeType":"YulFunctionCall","src":"66477:48:26"},"nodeType":"YulExpressionStatement","src":"66477:48:26"},{"nodeType":"YulAssignment","src":"66534:84:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"66604:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"66613:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"66542:61:26"},"nodeType":"YulFunctionCall","src":"66542:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"66534:4:26"}]}]},"name":"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"66314:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"66326:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"66334:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"66345:4:26","type":""}],"src":"66206:419:26"},{"body":{"nodeType":"YulBlock","src":"66725:338:26","statements":[{"nodeType":"YulAssignment","src":"66735:74:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"66801:6:26"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"66760:40:26"},"nodeType":"YulFunctionCall","src":"66760:48:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"66744:15:26"},"nodeType":"YulFunctionCall","src":"66744:65:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"66735:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"66825:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"66832:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"66818:6:26"},"nodeType":"YulFunctionCall","src":"66818:21:26"},"nodeType":"YulExpressionStatement","src":"66818:21:26"},{"nodeType":"YulVariableDeclaration","src":"66848:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"66863:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"66870:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66859:3:26"},"nodeType":"YulFunctionCall","src":"66859:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"66852:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"66913:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"66915:77:26"},"nodeType":"YulFunctionCall","src":"66915:79:26"},"nodeType":"YulExpressionStatement","src":"66915:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"66894:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"66899:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66890:3:26"},"nodeType":"YulFunctionCall","src":"66890:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"66908:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"66887:2:26"},"nodeType":"YulFunctionCall","src":"66887:25:26"},"nodeType":"YulIf","src":"66884:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"67040:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"67045:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"67050:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"67005:34:26"},"nodeType":"YulFunctionCall","src":"67005:52:26"},"nodeType":"YulExpressionStatement","src":"67005:52:26"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"66698:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"66703:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"66711:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"66719:5:26","type":""}],"src":"66631:432:26"},{"body":{"nodeType":"YulBlock","src":"67154:281:26","statements":[{"body":{"nodeType":"YulBlock","src":"67203:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"67205:77:26"},"nodeType":"YulFunctionCall","src":"67205:79:26"},"nodeType":"YulExpressionStatement","src":"67205:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"67182:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"67190:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"67178:3:26"},"nodeType":"YulFunctionCall","src":"67178:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"67197:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"67174:3:26"},"nodeType":"YulFunctionCall","src":"67174:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"67167:6:26"},"nodeType":"YulFunctionCall","src":"67167:35:26"},"nodeType":"YulIf","src":"67164:122:26"},{"nodeType":"YulVariableDeclaration","src":"67295:27:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"67315:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67309:5:26"},"nodeType":"YulFunctionCall","src":"67309:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"67299:6:26","type":""}]},{"nodeType":"YulAssignment","src":"67331:98:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"67402:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"67410:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"67398:3:26"},"nodeType":"YulFunctionCall","src":"67398:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"67417:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"67425:3:26"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"67340:57:26"},"nodeType":"YulFunctionCall","src":"67340:89:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"67331:5:26"}]}]},"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"67132:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"67140:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"67148:5:26","type":""}],"src":"67082:353:26"},{"body":{"nodeType":"YulBlock","src":"67527:436:26","statements":[{"body":{"nodeType":"YulBlock","src":"67573:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"67575:77:26"},"nodeType":"YulFunctionCall","src":"67575:79:26"},"nodeType":"YulExpressionStatement","src":"67575:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"67548:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"67557:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"67544:3:26"},"nodeType":"YulFunctionCall","src":"67544:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"67569:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"67540:3:26"},"nodeType":"YulFunctionCall","src":"67540:32:26"},"nodeType":"YulIf","src":"67537:119:26"},{"nodeType":"YulBlock","src":"67666:290:26","statements":[{"nodeType":"YulVariableDeclaration","src":"67681:38:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"67705:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"67716:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"67701:3:26"},"nodeType":"YulFunctionCall","src":"67701:17:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67695:5:26"},"nodeType":"YulFunctionCall","src":"67695:24:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"67685:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"67766:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"67768:77:26"},"nodeType":"YulFunctionCall","src":"67768:79:26"},"nodeType":"YulExpressionStatement","src":"67768:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"67738:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"67746:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"67735:2:26"},"nodeType":"YulFunctionCall","src":"67735:30:26"},"nodeType":"YulIf","src":"67732:117:26"},{"nodeType":"YulAssignment","src":"67863:83:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"67918:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"67929:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"67914:3:26"},"nodeType":"YulFunctionCall","src":"67914:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"67938:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"67873:40:26"},"nodeType":"YulFunctionCall","src":"67873:73:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"67863:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"67497:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"67508:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"67520:6:26","type":""}],"src":"67441:522:26"},{"body":{"nodeType":"YulBlock","src":"67997:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"68014:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"68017:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"68007:6:26"},"nodeType":"YulFunctionCall","src":"68007:88:26"},"nodeType":"YulExpressionStatement","src":"68007:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"68111:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"68114:4:26","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"68104:6:26"},"nodeType":"YulFunctionCall","src":"68104:15:26"},"nodeType":"YulExpressionStatement","src":"68104:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"68135:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"68138:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"68128:6:26"},"nodeType":"YulFunctionCall","src":"68128:15:26"},"nodeType":"YulExpressionStatement","src":"68128:15:26"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"67969:180:26"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0000000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c__to_t_bytes_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value0, value1,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct SimpleAMA.Question -> struct SimpleAMA.Question\n    function abi_encode_t_struct$_Question_$4220_memory_ptr_to_t_struct$_Question_$4220_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // sender\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // questionText\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // answerText\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // answered\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Question_$4220_memory_ptr_to_t_struct$_Question_$4220_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_Question_$4220_memory_ptr_to_t_struct$_Question_$4220_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct SimpleAMA.Question[] -> struct SimpleAMA.Question[]\n    function abi_encode_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_Question_$4220_memory_ptr_to_t_struct$_Question_$4220_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Question_$4220_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_bool_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // bool[]\n    function abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bool_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bool(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bool[]\n    function abi_decode_t_array$_t_bool_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // bytes[]\n    function abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_bytes_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bool_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_bool_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_boolt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_bool__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes[] -> bytes[]\n    function abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_boolt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // bytes32[]\n    function abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bytes32(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address_t_uint256__to_t_bytes_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_ff075107381d702750af5e734cb03ff5255767cbecd0d4c2fe55faaadb5b2448(memPtr) {\n\n        mstore(add(memPtr, 0), \"You need a token to submit a que\")\n\n        mstore(add(memPtr, 32), \"stion\")\n\n    }\n\n    function abi_encode_t_stringliteral_ff075107381d702750af5e734cb03ff5255767cbecd0d4c2fe55faaadb5b2448_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_ff075107381d702750af5e734cb03ff5255767cbecd0d4c2fe55faaadb5b2448(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ff075107381d702750af5e734cb03ff5255767cbecd0d4c2fe55faaadb5b2448__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ff075107381d702750af5e734cb03ff5255767cbecd0d4c2fe55faaadb5b2448_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1_t_bytes_memory_ptr__to_t_address_t_uint8_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function store_literal_in_memory_feffb919f33f741fb31a502394ba298782f4310d28ba5450a753fb62b6059085(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the profile owner can answe\")\n\n        mstore(add(memPtr, 32), \"r questions\")\n\n    }\n\n    function abi_encode_t_stringliteral_feffb919f33f741fb31a502394ba298782f4310d28ba5450a753fb62b6059085_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_feffb919f33f741fb31a502394ba298782f4310d28ba5450a753fb62b6059085(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_feffb919f33f741fb31a502394ba298782f4310d28ba5450a753fb62b6059085__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_feffb919f33f741fb31a502394ba298782f4310d28ba5450a753fb62b6059085_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7012ed5ec9b5652af45260c130745cf693bfe45361b071a180578cecce6252c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid question ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_7012ed5ec9b5652af45260c130745cf693bfe45361b071a180578cecce6252c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_7012ed5ec9b5652af45260c130745cf693bfe45361b071a180578cecce6252c4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7012ed5ec9b5652af45260c130745cf693bfe45361b071a180578cecce6252c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7012ed5ec9b5652af45260c130745cf693bfe45361b071a180578cecce6252c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_4eb56e33b190c911f9a62dafbc06b9f3d9c8ebfa91addfd5c4ed064caf80fb28(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already claimed a free token\")\n\n    }\n\n    function abi_encode_t_stringliteral_4eb56e33b190c911f9a62dafbc06b9f3d9c8ebfa91addfd5c4ed064caf80fb28_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_4eb56e33b190c911f9a62dafbc06b9f3d9c8ebfa91addfd5c4ed064caf80fb28(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4eb56e33b190c911f9a62dafbc06b9f3d9c8ebfa91addfd5c4ed064caf80fb28__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4eb56e33b190c911f9a62dafbc06b9f3d9c8ebfa91addfd5c4ed064caf80fb28_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_bytes20(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000)\n    }\n\n    function read_from_memoryt_bytes20(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes20(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes20(dataArea)\n\n        if lt(length, 20) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(20, length)),\n                    0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n                )\n            )\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function clean_up_bytearray_end_slots_t_bytes_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_bytes_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_bytes_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes10(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff00000000000000000000000000000000000000000000)\n    }\n\n    function leftAlign_t_bytes10(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes10(cleanup_t_bytes10(value)))\n    }\n\n    function cleanup_t_bytes2(value) -> cleaned {\n        cleaned := and(value, 0xffff000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function leftAlign_t_bytes2(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes2(cleanup_t_bytes2(value)))\n    }\n\n    function leftAlign_t_bytes20(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes20(cleanup_t_bytes20(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes10_t_bytes2_t_bytes20__to_t_bytes10_t_bytes2_t_bytes20__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 10)\n\n        abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 2)\n\n        abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_bytes_memory_ptr__to_t_uint256_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101d15760003560e01c8063715018a6116100f75780639790242111610095578063b7b064a811610064578063b7b064a814610760578063d72fc29a1461078b578063dedff9c6146107c8578063f2fde38b146108055761024b565b806397902421146106d9578063ac0f05f6146106f5578063adcea55a14610720578063b49506fd146107375761024b565b806378381670116100d1578063783816701461062c5780637f23690c14610655578063821dc5d1146106715780638da5cb5b146106ae5761024b565b8063715018a6146105af57806373a6f6a6146105c6578063760d9bba146106035761024b565b806330d0dc371161016f57806354f6127f1161013e57806354f6127f146104bb57806365aeaa95146104f85780636963d4381461053557806370a08231146105725761024b565b806330d0dc37146103fe578063313ce5671461042757806331b1b97814610452578063447e52a0146104925761024b565b806318160ddd116101ab57806318160ddd146103565780632af9338e146103815780632bc1da82146103ac5780632d7667c9146103d55761024b565b806301ffc9a7146102b3578063099ee6f2146102f05780630f86c618146103195761024b565b3661024b5760003403610219576040517fe5099ee3000000000000000000000000000000000000000000000000000000008152600401610210906132cb565b60405180910390fd5b6040517f388f5adc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600036606060046000369050101561029c5782826040517fe5099ee3000000000000000000000000000000000000000000000000000000008152600401610293929190613338565b60405180910390fd5b6102a6838361082e565b9050915050805190602001f35b3480156102bf57600080fd5b506102da60048036038101906102d591906133c8565b6109ac565b6040516102e79190613410565b60405180910390f35b3480156102fc57600080fd5b5061031760048036038101906103129190613551565b610a1d565b005b34801561032557600080fd5b50610340600480360381019061033b91906135f8565b610bc7565b60405161034d9190613410565b60405180910390f35b34801561036257600080fd5b5061036b610c69565b604051610378919061363e565b60405180910390f35b34801561038d57600080fd5b50610396610c73565b6040516103a39190613822565b60405180910390f35b3480156103b857600080fd5b506103d360048036038101906103ce9190613911565b610ed7565b005b3480156103e157600080fd5b506103fc60048036038101906103f79190613cdb565b610f82565b005b34801561040a57600080fd5b5061042560048036038101906104209190613de2565b611096565b005b34801561043357600080fd5b5061043c611193565b6040516104499190613e81565b60405180910390f35b34801561045e57600080fd5b5061047960048036038101906104749190613e9c565b6111b8565b6040516104899493929190613f22565b60405180910390f35b34801561049e57600080fd5b506104b960048036038101906104b49190613f75565b611325565b005b3480156104c757600080fd5b506104e260048036038101906104dd9190614007565b611445565b6040516104ef9190614078565b60405180910390f35b34801561050457600080fd5b5061051f600480360381019061051a919061409a565b611457565b60405161052c919061363e565b60405180910390f35b34801561054157600080fd5b5061055c60048036038101906105579190614135565b611559565b604051610569919061428e565b60405180910390f35b34801561057e57600080fd5b50610599600480360381019061059491906135f8565b6116d5565b6040516105a6919061363e565b60405180910390f35b3480156105bb57600080fd5b506105c461171e565b005b3480156105d257600080fd5b506105ed60048036038101906105e891906135f8565b611732565b6040516105fa9190613410565b60405180910390f35b34801561060f57600080fd5b5061062a600480360381019061062591906142b0565b611752565b005b34801561063857600080fd5b50610653600480360381019061064e9190614347565b6117a5565b005b61066f600480360381019061066a91906143ca565b6118eb565b005b34801561067d57600080fd5b50610698600480360381019061069391906135f8565b61193b565b6040516106a5919061363e565b60405180910390f35b3480156106ba57600080fd5b506106c361194d565b6040516106d09190614426565b60405180910390f35b6106f360048036038101906106ee9190614504565b611976565b005b34801561070157600080fd5b5061070a6119c6565b6040516107179190614426565b60405180910390f35b34801561072c57600080fd5b506107356119ec565b005b34801561074357600080fd5b5061075e60048036038101906107599190613911565b611b1d565b005b34801561076c57600080fd5b50610775611b63565b604051610782919061363e565b60405180910390f35b34801561079757600080fd5b506107b260048036038101906107ad91906135f8565b611b69565b6040516107bf919061462b565b60405180910390f35b3480156107d457600080fd5b506107ef60048036038101906107ea919061464d565b611bb9565b6040516107fc919061428e565b60405180910390f35b34801561081157600080fd5b5061082c600480360381019061082791906135f8565b611c6a565b005b6060600061085f6000357fffffffff0000000000000000000000000000000000000000000000000000000016611ced565b509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108f7576000357fffffffff00000000000000000000000000000000000000000000000000000000166040517fbb370b2b0000000000000000000000000000000000000000000000000000000081526004016108ee91906146a5565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1634878733346040516020016109299493929190614759565b60405160208183030381529060405260405161094591906147c5565b60006040518083038185875af1925050503d8060008114610982576040519150601f19603f3d011682016040523d82523d6000602084013e610987565b606091505b5091509150811561099d578093505050506109a6565b80518060208301fd5b92915050565b600063c52d600860e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a065750610a0582611da7565b5b80610a165750610a1582611e08565b5b9050919050565b670de0b6b3a7640000610a2f336116d5565b1015610a70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a679061484e565b60405180910390fd5b60086000815480929190610a839061489d565b919050555060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020016040518060200160405280600081525081526020016000151581525060096000600854815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081610b429190614af1565b506040820151816002019081610b589190614af1565b5060608201518160030160006101000a81548160ff021916908315150217905550905050610bc433670de0b6b3a76400006040518060400160405280601f81526020017f4275726e20746f6b656e20746f207375626d69742061207175657374696f6e00815250611e6f565b50565b600080600190505b6008548111610c5e578273ffffffffffffffffffffffffffffffffffffffff166009600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c4b576001915050610c64565b8080610c569061489d565b915050610bcf565b50600090505b919050565b6000600354905090565b6060600060085467ffffffffffffffff811115610c9357610c92613435565b5b604051908082528060200260200182016040528015610ccc57816020015b610cb961324e565b815260200190600190039081610cb15790505b5090506000600190505b6008548111610ecf57600960008281526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610d6390614914565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8f90614914565b8015610ddc5780601f10610db157610100808354040283529160200191610ddc565b820191906000526020600020905b815481529060010190602001808311610dbf57829003601f168201915b50505050508152602001600282018054610df590614914565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2190614914565b8015610e6e5780601f10610e4357610100808354040283529160200191610e6e565b820191906000526020600020905b815481529060010190602001808311610e5157829003601f168201915b505050505081526020016003820160009054906101000a900460ff16151515158152505082600183610ea09190614bc3565b81518110610eb157610eb0614bf7565b5b60200260200101819052508080610ec79061489d565b915050610cd6565b508091505090565b6000610ee38433611457565b905060008103610f2a57836040517fcba6e977000000000000000000000000000000000000000000000000000000008152600401610f219190614426565b60405180910390fd5b60008382610f389190614c26565b9050610f48338683600187611f3f565b6000338285604051602001610f5f93929190614c5a565b6040516020818303038152906040529050610f7a8682612212565b505050505050565b600085519050845181141580610f99575083518114155b80610fa5575082518114155b80610fb1575081518114155b15610fe8576040517f263eee8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561108d5761108287828151811061100957611008614bf7565b5b602002602001015187838151811061102457611023614bf7565b5b602002602001015187848151811061103f5761103e614bf7565b5b602002602001015187858151811061105a57611059614bf7565b5b602002602001015187868151811061107557611074614bf7565b5b6020026020010151611752565b806001019050610feb565b50505050505050565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156110fe57508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15611144573383856040517f1a525b3200000000000000000000000000000000000000000000000000000000815260040161113b93929190614c98565b60405180910390fd5b611152838560008585611f3f565b811561118d5760008360008360405160200161117093929190614d0a565b604051602081830303815290604052905061118b8582612212565b505b50505050565b6000600260009054906101000a900460ff166111b05760126111b3565b60005b905090565b60096020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461120190614914565b80601f016020809104026020016040519081016040528092919081815260200182805461122d90614914565b801561127a5780601f1061124f5761010080835404028352916020019161127a565b820191906000526020600020905b81548152906001019060200180831161125d57829003601f168201915b50505050509080600201805461128f90614914565b80601f01602080910402602001604051908101604052809291908181526020018280546112bb90614914565b80156113085780601f106112dd57610100808354040283529160200191611308565b820191906000526020600020905b8154815290600101906020018083116112eb57829003601f168201915b5050505050908060030160009054906101000a900460ff16905084565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ac90614dba565b60405180910390fd5b6008548211156113fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f190614e26565b60405180910390fd5b6000600960008481526020019081526020016000209050818160020190816114229190614af1565b5060018160030160006101000a81548160ff021916908315150217905550505050565b606061145082612244565b9050919050565b60008273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114d357600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050611553565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b92915050565b60608282905067ffffffffffffffff81111561157857611577613435565b5b6040519080825280602002602001820160405280156115ab57816020015b60608152602001906001900390816115965790505b50905060005b838390508110156116ce576000803073ffffffffffffffffffffffffffffffffffffffff168686858181106115e9576115e8614bf7565b5b90506020028101906115fb9190614e55565b604051611609929190614eb8565b600060405180830381855af49150503d8060008114611644576040519150601f19603f3d011682016040523d82523d6000602084013e611649565b606091505b5091509150816116a25760008151146116655780518082602001fd5b826040517fb774c284000000000000000000000000000000000000000000000000000000008152600401611699919061363e565b60405180910390fd5b808484815181106116b6576116b5614bf7565b5b602002602001018190525082600101925050506115b1565b5092915050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6117266122e9565b6117306000612367565b565b600a6020528060005260406000206000915054906101000a900460ff1681565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117915761179033868561242b565b5b61179e8585858585612530565b5050505050565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801561180d57508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15611853573383856040517f98ce294500000000000000000000000000000000000000000000000000000000815260040161184a93929190614c98565b60405180910390fd5b600061185f8585611457565b90508281101561189b576040517f0ef76c3500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083820390506118b0858783600187611f3f565b60008582856040516020016118c793929190614c5a565b60405160208183030381529060405290506118e28782612212565b50505050505050565b6118f36122e9565b6000341461192d576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611937828261263e565b5050565b6000611946826116d5565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61197e6122e9565b600034146119b8576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6119c282826127af565b5050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611a79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7090614f1d565b60405180910390fd5b6001600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611b1b33670de0b6b3a764000060016040518060400160405280601b81526020017f4672656520746f6b656e20666f7220414d41207175657374696f6e000000000081525061287f565b565b611b2b338484600185611f3f565b6000338383604051602001611b4293929190614c5a565b6040516020818303038152906040529050611b5d8482612212565b50505050565b60085481565b6060611bb2600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061294e565b9050919050565b6060815167ffffffffffffffff811115611bd657611bd5613435565b5b604051908082528060200260200182016040528015611c0957816020015b6060815260200190600190039081611bf45790505b50905060005b8251811015611c6457611c3b838281518110611c2e57611c2d614bf7565b5b6020026020010151612244565b828281518110611c4e57611c4d614bf7565b5b6020026020010181905250806001019050611c0f565b50919050565b611c726122e9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611ce1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cd890614faf565b60405180910390fd5b611cea81612367565b50565b6000806000611d2869cee78b4094da8601109660b01b857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191661296f565b90506000611d3582612244565b90506014815114158015611d4b57506000815114155b15611d8d57806040517f42bfe79f000000000000000000000000000000000000000000000000000000008152600401611d849190614078565b60405180910390fd5b80611d9790615020565b60601c6001935093505050915091565b600063a918fa6b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611e015750611e00826129af565b5b9050919050565b600080611e1b6301ffc9a760e01b611ced565b509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611e5c576000915050611e6a565b611e668184612a10565b9150505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ed5576040517fd2d5ec3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ee483600084600085612acf565b611ef383600084600085612ad6565b611f0283600084600085612d1b565b6000338460008585604051602001611f1e959493929190615087565b6040516020818303038152906040529050611f398482612d22565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611fa5576040517f6355e76600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361200a576040517fdab7504700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008314612150576120e484600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612d5490919063ffffffff16565b50828573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167ff772a43bfdf4729b196e3fb54a818b91a2ca6c49d10b2e16278752f9f515c25d846040516121439190614078565b60405180910390a461220b565b6121a184600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612d8490919063ffffffff16565b508115158573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f0ebf5762d8855cbe012d2ca42fb33a81175e17c8a8751f8859931ba453bd4167846040516122029190614078565b60405180910390a45b5050505050565b612240827f386072cc5a58e61263b434c722725f21031cd06e7c552cfaa06db5de8a320dbc60001b83612db4565b5050565b606060016000838152602001908152602001600020805461226490614914565b80601f016020809104026020016040519081016040528092919081815260200182805461229090614914565b80156122dd5780601f106122b2576101008083540402835291602001916122dd565b820191906000526020600020905b8154815290600101906020018083116122c057829003601f168201915b50505050509050919050565b6122f1612e73565b73ffffffffffffffffffffffffffffffffffffffff1661230f61194d565b73ffffffffffffffffffffffffffffffffffffffff1614612365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161235c9061512d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008114806124ba57508082115b1561250257828185846040517ff3a6b6910000000000000000000000000000000000000000000000000000000081526004016124f9949392919061514d565b60405180910390fd5b61252a838584846125139190614bc3565b600060405180602001604052806000815250611f3f565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806125975750600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b156125ce576040517fd2d5ec3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6125db8585858585612acf565b6125e88585858585612ad6565b6125f58585858585612d1b565b60003386868685604051602001612610959493929190615087565b604051602081830303815290604052905061262b8682612d22565b612636858483612e7b565b505050505050565b7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b820361269a576040517f85c169bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b82036126f6576040517f76755b3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb360001b8203612752576040517f4ef6d7fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060016000848152602001908152602001600020908161277291906151ed565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516127a39190614078565b60405180910390a25050565b80518251146127ea576040517f3bcc897900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000825103612825576040517f97da5f9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b825181101561287a5761286f83828151811061284757612846614bf7565b5b602002602001015183838151811061286257612861614bf7565b5b602002602001015161263e565b806001019050612828565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036128e5576040517fd2d5ec3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6128f3600085858585612acf565b612901600085858585612ad6565b61290f600085858585612d1b565b600033600086868560405160200161292b959493929190615087565b6040516020818303038152906040529050612947858483612e7b565b5050505050565b6060600061295e83600001612fe1565b905060608190508092505050919050565b60008083600060f01b8460405160200161298b9392919061537a565b6040516020818303038152906040529050806129a6906153cc565b91505092915050565b600063629aa69460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612a095750612a088261303d565b5b9050919050565b6000806301ffc9a760e01b83604051602401612a2c91906146a5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d91506000519050828015612ab7575060208210155b8015612ac35750600081115b94505050505092915050565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603612b28578260036000828254612b1c9190614c26565b92505081905550612bfd565b6000600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015612bb5578086856040517f08d47949000000000000000000000000000000000000000000000000000000008152600401612bac93929190615433565b60405180910390fd5b838103600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603612c465782600360008282540392505081905550612c94565b82600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f3997e418d2cef0b3b0e907b1e39605c3f7d32dbd061e82ea5b4a770d46a160a6868686604051612d0c9392919061546a565b60405180910390a45050505050565b5050505050565b612d50827f429ac7a06903dbc9c13dfcb3c9d11df8194581fa047c96d7a4171fc7402958ea60001b83612db4565b5050565b6000612d7c836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6130a7565b905092915050565b6000612dac836000018373ffffffffffffffffffffffffffffffffffffffff1660001b613117565b905092915050565b612de4636bb56a1460e01b8473ffffffffffffffffffffffffffffffffffffffff16612a1090919063ffffffff16565b15612e6e578273ffffffffffffffffffffffffffffffffffffffff16636bb56a1483836040518363ffffffff1660e01b8152600401612e249291906154b7565b6000604051808303816000875af1158015612e43573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190612e6c9190615557565b505b505050565b600033905090565b612e8c83636bb56a1460e01b612a10565b15612f3d578273ffffffffffffffffffffffffffffffffffffffff16636bb56a147f20804611b3e2ea21c480dc465142210acf4a2485947541770ec1fb87dee4a55c60001b836040518363ffffffff1660e01b8152600401612eef9291906154b7565b6000604051808303816000875af1158015612f0e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190612f379190615557565b50612fdc565b81612fdb5760008373ffffffffffffffffffffffffffffffffffffffff163b14612f9e57826040517fa608fbb6000000000000000000000000000000000000000000000000000000008152600401612f959190614426565b60405180910390fd5b826040517f26c247f4000000000000000000000000000000000000000000000000000000008152600401612fd29190614426565b60405180910390fd5b5b505050565b60608160000180548060200260200160405190810160405280929190818152602001828054801561303157602002820191906000526020600020905b81548152602001906001019080831161301d575b50505050509050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006130b3838361322b565b61310c578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050613111565b600090505b92915050565b6000808360010160008481526020019081526020016000205490506000811461321f5760006001826131499190614bc3565b90506000600186600001805490506131619190614bc3565b90508181146131d057600086600001828154811061318257613181614bf7565b5b90600052602060002001549050808760000184815481106131a6576131a5614bf7565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806131e4576131e36155a0565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050613225565b60009150505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000151581525090565b600082825260208201905092915050565b60008082015250565b60006132b560048361328e565b91506132c08261329f565b602082019050919050565b600060208201905081810360008301526132e4816132a8565b9050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000613317838561328e565b93506133248385846132eb565b61332d836132fa565b840190509392505050565b6000602082019050818103600083015261335381848661330b565b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6133a581613370565b81146133b057600080fd5b50565b6000813590506133c28161339c565b92915050565b6000602082840312156133de576133dd613366565b5b60006133ec848285016133b3565b91505092915050565b60008115159050919050565b61340a816133f5565b82525050565b60006020820190506134256000830184613401565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61346d826132fa565b810181811067ffffffffffffffff8211171561348c5761348b613435565b5b80604052505050565b600061349f61335c565b90506134ab8282613464565b919050565b600067ffffffffffffffff8211156134cb576134ca613435565b5b6134d4826132fa565b9050602081019050919050565b60006134f46134ef846134b0565b613495565b9050828152602081018484840111156135105761350f613430565b5b61351b8482856132eb565b509392505050565b600082601f8301126135385761353761342b565b5b81356135488482602086016134e1565b91505092915050565b60006020828403121561356757613566613366565b5b600082013567ffffffffffffffff8111156135855761358461336b565b5b61359184828501613523565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006135c58261359a565b9050919050565b6135d5816135ba565b81146135e057600080fd5b50565b6000813590506135f2816135cc565b92915050565b60006020828403121561360e5761360d613366565b5b600061361c848285016135e3565b91505092915050565b6000819050919050565b61363881613625565b82525050565b6000602082019050613653600083018461362f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61368e816135ba565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156136ce5780820151818401526020810190506136b3565b60008484015250505050565b60006136e582613694565b6136ef818561369f565b93506136ff8185602086016136b0565b613708816132fa565b840191505092915050565b61371c816133f5565b82525050565b600060808301600083015161373a6000860182613685565b506020830151848203602086015261375282826136da565b9150506040830151848203604086015261376c82826136da565b91505060608301516137816060860182613713565b508091505092915050565b60006137988383613722565b905092915050565b6000602082019050919050565b60006137b882613659565b6137c28185613664565b9350836020820285016137d485613675565b8060005b8581101561381057848403895281516137f1858261378c565b94506137fc836137a0565b925060208a019950506001810190506137d8565b50829750879550505050505092915050565b6000602082019050818103600083015261383c81846137ad565b905092915050565b61384d81613625565b811461385857600080fd5b50565b60008135905061386a81613844565b92915050565b600067ffffffffffffffff82111561388b5761388a613435565b5b613894826132fa565b9050602081019050919050565b60006138b46138af84613870565b613495565b9050828152602081018484840111156138d0576138cf613430565b5b6138db8482856132eb565b509392505050565b600082601f8301126138f8576138f761342b565b5b81356139088482602086016138a1565b91505092915050565b60008060006060848603121561392a57613929613366565b5b6000613938868287016135e3565b93505060206139498682870161385b565b925050604084013567ffffffffffffffff81111561396a5761396961336b565b5b613976868287016138e3565b9150509250925092565b600067ffffffffffffffff82111561399b5761399a613435565b5b602082029050602081019050919050565b600080fd5b60006139c46139bf84613980565b613495565b905080838252602082019050602084028301858111156139e7576139e66139ac565b5b835b81811015613a1057806139fc88826135e3565b8452602084019350506020810190506139e9565b5050509392505050565b600082601f830112613a2f57613a2e61342b565b5b8135613a3f8482602086016139b1565b91505092915050565b600067ffffffffffffffff821115613a6357613a62613435565b5b602082029050602081019050919050565b6000613a87613a8284613a48565b613495565b90508083825260208201905060208402830185811115613aaa57613aa96139ac565b5b835b81811015613ad35780613abf888261385b565b845260208401935050602081019050613aac565b5050509392505050565b600082601f830112613af257613af161342b565b5b8135613b02848260208601613a74565b91505092915050565b600067ffffffffffffffff821115613b2657613b25613435565b5b602082029050602081019050919050565b613b40816133f5565b8114613b4b57600080fd5b50565b600081359050613b5d81613b37565b92915050565b6000613b76613b7184613b0b565b613495565b90508083825260208201905060208402830185811115613b9957613b986139ac565b5b835b81811015613bc25780613bae8882613b4e565b845260208401935050602081019050613b9b565b5050509392505050565b600082601f830112613be157613be061342b565b5b8135613bf1848260208601613b63565b91505092915050565b600067ffffffffffffffff821115613c1557613c14613435565b5b602082029050602081019050919050565b6000613c39613c3484613bfa565b613495565b90508083825260208201905060208402830185811115613c5c57613c5b6139ac565b5b835b81811015613ca357803567ffffffffffffffff811115613c8157613c8061342b565b5b808601613c8e89826138e3565b85526020850194505050602081019050613c5e565b5050509392505050565b600082601f830112613cc257613cc161342b565b5b8135613cd2848260208601613c26565b91505092915050565b600080600080600060a08688031215613cf757613cf6613366565b5b600086013567ffffffffffffffff811115613d1557613d1461336b565b5b613d2188828901613a1a565b955050602086013567ffffffffffffffff811115613d4257613d4161336b565b5b613d4e88828901613a1a565b945050604086013567ffffffffffffffff811115613d6f57613d6e61336b565b5b613d7b88828901613add565b935050606086013567ffffffffffffffff811115613d9c57613d9b61336b565b5b613da888828901613bcc565b925050608086013567ffffffffffffffff811115613dc957613dc861336b565b5b613dd588828901613cad565b9150509295509295909350565b60008060008060808587031215613dfc57613dfb613366565b5b6000613e0a878288016135e3565b9450506020613e1b878288016135e3565b9350506040613e2c87828801613b4e565b925050606085013567ffffffffffffffff811115613e4d57613e4c61336b565b5b613e59878288016138e3565b91505092959194509250565b600060ff82169050919050565b613e7b81613e65565b82525050565b6000602082019050613e966000830184613e72565b92915050565b600060208284031215613eb257613eb1613366565b5b6000613ec08482850161385b565b91505092915050565b613ed2816135ba565b82525050565b600082825260208201905092915050565b6000613ef482613694565b613efe8185613ed8565b9350613f0e8185602086016136b0565b613f17816132fa565b840191505092915050565b6000608082019050613f376000830187613ec9565b8181036020830152613f498186613ee9565b90508181036040830152613f5d8185613ee9565b9050613f6c6060830184613401565b95945050505050565b60008060408385031215613f8c57613f8b613366565b5b6000613f9a8582860161385b565b925050602083013567ffffffffffffffff811115613fbb57613fba61336b565b5b613fc785828601613523565b9150509250929050565b6000819050919050565b613fe481613fd1565b8114613fef57600080fd5b50565b60008135905061400181613fdb565b92915050565b60006020828403121561401d5761401c613366565b5b600061402b84828501613ff2565b91505092915050565b600081519050919050565b600061404a82614034565b614054818561328e565b93506140648185602086016136b0565b61406d816132fa565b840191505092915050565b60006020820190508181036000830152614092818461403f565b905092915050565b600080604083850312156140b1576140b0613366565b5b60006140bf858286016135e3565b92505060206140d0858286016135e3565b9150509250929050565b600080fd5b60008083601f8401126140f5576140f461342b565b5b8235905067ffffffffffffffff811115614112576141116140da565b5b60208301915083602082028301111561412e5761412d6139ac565b5b9250929050565b6000806020838503121561414c5761414b613366565b5b600083013567ffffffffffffffff81111561416a5761416961336b565b5b614176858286016140df565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006141ca82614034565b6141d481856141ae565b93506141e48185602086016136b0565b6141ed816132fa565b840191505092915050565b600061420483836141bf565b905092915050565b6000602082019050919050565b600061422482614182565b61422e818561418d565b9350836020820285016142408561419e565b8060005b8581101561427c578484038952815161425d85826141f8565b94506142688361420c565b925060208a01995050600181019050614244565b50829750879550505050505092915050565b600060208201905081810360008301526142a88184614219565b905092915050565b600080600080600060a086880312156142cc576142cb613366565b5b60006142da888289016135e3565b95505060206142eb888289016135e3565b94505060406142fc8882890161385b565b935050606061430d88828901613b4e565b925050608086013567ffffffffffffffff81111561432e5761432d61336b565b5b61433a888289016138e3565b9150509295509295909350565b6000806000806080858703121561436157614360613366565b5b600061436f878288016135e3565b9450506020614380878288016135e3565b93505060406143918782880161385b565b925050606085013567ffffffffffffffff8111156143b2576143b161336b565b5b6143be878288016138e3565b91505092959194509250565b600080604083850312156143e1576143e0613366565b5b60006143ef85828601613ff2565b925050602083013567ffffffffffffffff8111156144105761440f61336b565b5b61441c858286016138e3565b9150509250929050565b600060208201905061443b6000830184613ec9565b92915050565b600067ffffffffffffffff82111561445c5761445b613435565b5b602082029050602081019050919050565b600061448061447b84614441565b613495565b905080838252602082019050602084028301858111156144a3576144a26139ac565b5b835b818110156144cc57806144b88882613ff2565b8452602084019350506020810190506144a5565b5050509392505050565b600082601f8301126144eb576144ea61342b565b5b81356144fb84826020860161446d565b91505092915050565b6000806040838503121561451b5761451a613366565b5b600083013567ffffffffffffffff8111156145395761453861336b565b5b614545858286016144d6565b925050602083013567ffffffffffffffff8111156145665761456561336b565b5b61457285828601613cad565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006145b48383613685565b60208301905092915050565b6000602082019050919050565b60006145d88261457c565b6145e28185614587565b93506145ed83614598565b8060005b8381101561461e57815161460588826145a8565b9750614610836145c0565b9250506001810190506145f1565b5085935050505092915050565b6000602082019050818103600083015261464581846145cd565b905092915050565b60006020828403121561466357614662613366565b5b600082013567ffffffffffffffff8111156146815761468061336b565b5b61468d848285016144d6565b91505092915050565b61469f81613370565b82525050565b60006020820190506146ba6000830184614696565b92915050565b600081905092915050565b60006146d783856146c0565b93506146e48385846132eb565b82840190509392505050565b60008160601b9050919050565b6000614708826146f0565b9050919050565b600061471a826146fd565b9050919050565b61473261472d826135ba565b61470f565b82525050565b6000819050919050565b61475361474e82613625565b614738565b82525050565b60006147668286886146cb565b91506147728285614721565b6014820191506147828284614742565b60208201915081905095945050505050565b600061479f82614034565b6147a981856146c0565b93506147b98185602086016136b0565b80840191505092915050565b60006147d18284614794565b915081905092915050565b7f596f75206e656564206120746f6b656e20746f207375626d697420612071756560008201527f7374696f6e000000000000000000000000000000000000000000000000000000602082015250565b6000614838602583613ed8565b9150614843826147dc565b604082019050919050565b600060208201905081810360008301526148678161482b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006148a882613625565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036148da576148d961486e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061492c57607f821691505b60208210810361493f5761493e6148e5565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026149a77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261496a565b6149b1868361496a565b95508019841693508086168417925050509392505050565b6000819050919050565b60006149ee6149e96149e484613625565b6149c9565b613625565b9050919050565b6000819050919050565b614a08836149d3565b614a1c614a14826149f5565b848454614977565b825550505050565b600090565b614a31614a24565b614a3c8184846149ff565b505050565b5b81811015614a6057614a55600082614a29565b600181019050614a42565b5050565b601f821115614aa557614a7681614945565b614a7f8461495a565b81016020851015614a8e578190505b614aa2614a9a8561495a565b830182614a41565b50505b505050565b600082821c905092915050565b6000614ac860001984600802614aaa565b1980831691505092915050565b6000614ae18383614ab7565b9150826002028217905092915050565b614afa82613694565b67ffffffffffffffff811115614b1357614b12613435565b5b614b1d8254614914565b614b28828285614a64565b600060209050601f831160018114614b5b5760008415614b49578287015190505b614b538582614ad5565b865550614bbb565b601f198416614b6986614945565b60005b82811015614b9157848901518255600182019150602085019450602081019050614b6c565b86831015614bae5784890151614baa601f891682614ab7565b8355505b6001600288020188555050505b505050505050565b6000614bce82613625565b9150614bd983613625565b9250828203905081811115614bf157614bf061486e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000614c3182613625565b9150614c3c83613625565b9250828201905080821115614c5457614c5361486e565b5b92915050565b6000606082019050614c6f6000830186613ec9565b614c7c602083018561362f565b8181036040830152614c8e818461403f565b9050949350505050565b6000606082019050614cad6000830186613ec9565b614cba6020830185613ec9565b614cc76040830184613ec9565b949350505050565b6000819050919050565b6000614cf4614cef614cea84614ccf565b6149c9565b613e65565b9050919050565b614d0481614cd9565b82525050565b6000606082019050614d1f6000830186613ec9565b614d2c6020830185614cfb565b8181036040830152614d3e818461403f565b9050949350505050565b7f4f6e6c79207468652070726f66696c65206f776e65722063616e20616e73776560008201527f72207175657374696f6e73000000000000000000000000000000000000000000602082015250565b6000614da4602b83613ed8565b9150614daf82614d48565b604082019050919050565b60006020820190508181036000830152614dd381614d97565b9050919050565b7f496e76616c6964207175657374696f6e20494400000000000000000000000000600082015250565b6000614e10601383613ed8565b9150614e1b82614dda565b602082019050919050565b60006020820190508181036000830152614e3f81614e03565b9050919050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112614e7257614e71614e46565b5b80840192508235915067ffffffffffffffff821115614e9457614e93614e4b565b5b602083019250600182023603831315614eb057614eaf614e50565b5b509250929050565b6000614ec58284866146cb565b91508190509392505050565b7f416c726561647920636c61696d65642061206672656520746f6b656e00000000600082015250565b6000614f07601c83613ed8565b9150614f1282614ed1565b602082019050919050565b60006020820190508181036000830152614f3681614efa565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000614f99602683613ed8565b9150614fa482614f3d565b604082019050919050565b60006020820190508181036000830152614fc881614f8c565b9050919050565b6000819050602082019050919050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b60006150178251614fdf565b80915050919050565b600061502b82614034565b8261503584614fcf565b90506150408161500b565b925060148210156150805761507b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360140360080261496a565b831692505b5050919050565b600060a08201905061509c6000830188613ec9565b6150a96020830187613ec9565b6150b66040830186613ec9565b6150c3606083018561362f565b81810360808301526150d5818461403f565b90509695505050505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000615117602083613ed8565b9150615122826150e1565b602082019050919050565b600060208201905081810360008301526151468161510a565b9050919050565b60006080820190506151626000830187613ec9565b61516f602083018661362f565b61517c6040830185613ec9565b615189606083018461362f565b95945050505050565b60008190508160005260206000209050919050565b601f8211156151e8576151b981615192565b6151c28461495a565b810160208510156151d1578190505b6151e56151dd8561495a565b830182614a41565b50505b505050565b6151f682614034565b67ffffffffffffffff81111561520f5761520e613435565b5b6152198254614914565b6152248282856151a7565b600060209050601f8311600181146152575760008415615245578287015190505b61524f8582614ad5565b8655506152b7565b601f19841661526586615192565b60005b8281101561528d57848901518255600182019150602085019450602081019050615268565b868310156152aa57848901516152a6601f891682614ab7565b8355505b6001600288020188555050505b505050505050565b60007fffffffffffffffffffff0000000000000000000000000000000000000000000082169050919050565b6000819050919050565b615306615301826152bf565b6152eb565b82525050565b60007fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b61535361534e8261530c565b615338565b82525050565b6000819050919050565b61537461536f82614fdf565b615359565b82525050565b600061538682866152f5565b600a820191506153968285615342565b6002820191506153a68284615363565b601482019150819050949350505050565b60006153c38251613fd1565b80915050919050565b60006153d782614034565b826153e184614fcf565b90506153ec816153b7565b9250602082101561542c576154277fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261496a565b831692505b5050919050565b6000606082019050615448600083018661362f565b6154556020830185613ec9565b615462604083018461362f565b949350505050565b600060608201905061547f600083018661362f565b61548c6020830185613401565b818103604083015261549e818461403f565b9050949350505050565b6154b181613fd1565b82525050565b60006040820190506154cc60008301856154a8565b81810360208301526154de818461403f565b90509392505050565b60006154fa6154f584613870565b613495565b90508281526020810184848401111561551657615515613430565b5b6155218482856136b0565b509392505050565b600082601f83011261553e5761553d61342b565b5b815161554e8482602086016154e7565b91505092915050565b60006020828403121561556d5761556c613366565b5b600082015167ffffffffffffffff81111561558b5761558a61336b565b5b61559784828501615529565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220248342bc74c31b7a9eb0d14d2dbc91defe5354a7b4cb2ea010d1c085bb9b0c1964736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0x97902421 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB7B064A8 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB7B064A8 EQ PUSH2 0x760 JUMPI DUP1 PUSH4 0xD72FC29A EQ PUSH2 0x78B JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x7C8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x805 JUMPI PUSH2 0x24B JUMP JUMPDEST DUP1 PUSH4 0x97902421 EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0xAC0F05F6 EQ PUSH2 0x6F5 JUMPI DUP1 PUSH4 0xADCEA55A EQ PUSH2 0x720 JUMPI DUP1 PUSH4 0xB49506FD EQ PUSH2 0x737 JUMPI PUSH2 0x24B JUMP JUMPDEST DUP1 PUSH4 0x78381670 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x78381670 EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0x821DC5D1 EQ PUSH2 0x671 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6AE JUMPI PUSH2 0x24B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0x73A6F6A6 EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0x760D9BBA EQ PUSH2 0x603 JUMPI PUSH2 0x24B JUMP JUMPDEST DUP1 PUSH4 0x30D0DC37 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x54F6127F GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x65AEAA95 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x6963D438 EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x572 JUMPI PUSH2 0x24B JUMP JUMPDEST DUP1 PUSH4 0x30D0DC37 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0x31B1B978 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x447E52A0 EQ PUSH2 0x492 JUMPI PUSH2 0x24B JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x2AF9338E EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x2BC1DA82 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x2D7667C9 EQ PUSH2 0x3D5 JUMPI PUSH2 0x24B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x99EE6F2 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xF86C618 EQ PUSH2 0x319 JUMPI PUSH2 0x24B JUMP JUMPDEST CALLDATASIZE PUSH2 0x24B JUMPI PUSH1 0x0 CALLVALUE SUB PUSH2 0x219 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE5099EE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x210 SWAP1 PUSH2 0x32CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x388F5ADC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO PUSH2 0x29C JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE5099EE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP3 SWAP2 SWAP1 PUSH2 0x3338 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A6 DUP4 DUP4 PUSH2 0x82E JUMP JUMPDEST SWAP1 POP SWAP2 POP POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x33C8 JUMP JUMPDEST PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x3410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x3551 JUMP JUMPDEST PUSH2 0xA1D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x3410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36B PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x396 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x3822 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x3911 JUMP JUMPDEST PUSH2 0xED7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x3CDB JUMP JUMPDEST PUSH2 0xF82 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x425 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x3DE2 JUMP JUMPDEST PUSH2 0x1096 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43C PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x3E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x3E9C JUMP JUMPDEST PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x489 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x3F75 JUMP JUMPDEST PUSH2 0x1325 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x4007 JUMP JUMPDEST PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x4078 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51A SWAP2 SWAP1 PUSH2 0x409A JUMP JUMPDEST PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x557 SWAP2 SWAP1 PUSH2 0x4135 JUMP JUMPDEST PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x569 SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x599 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C4 PUSH2 0x171E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0x3410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x625 SWAP2 SWAP1 PUSH2 0x42B0 JUMP JUMPDEST PUSH2 0x1752 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x653 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x64E SWAP2 SWAP1 PUSH2 0x4347 JUMP JUMPDEST PUSH2 0x17A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x66F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x43CA JUMP JUMPDEST PUSH2 0x18EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x698 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x693 SWAP2 SWAP1 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x193B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C3 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D0 SWAP2 SWAP1 PUSH2 0x4426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x4504 JUMP JUMPDEST PUSH2 0x1976 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70A PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x717 SWAP2 SWAP1 PUSH2 0x4426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x735 PUSH2 0x19EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x75E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x759 SWAP2 SWAP1 PUSH2 0x3911 JUMP JUMPDEST PUSH2 0x1B1D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x775 PUSH2 0x1B63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x782 SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x1B69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0x462B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7EA SWAP2 SWAP1 PUSH2 0x464D JUMP JUMPDEST PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x827 SWAP2 SWAP1 PUSH2 0x35F8 JUMP JUMPDEST PUSH2 0x1C6A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x85F PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1CED JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8F7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x40 MLOAD PUSH32 0xBB370B2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x46A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE DUP8 DUP8 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x929 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4759 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x945 SWAP2 SWAP1 PUSH2 0x47C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x987 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x99D JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x9A6 JUMP JUMPDEST DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xC52D6008 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA06 JUMPI POP PUSH2 0xA05 DUP3 PUSH2 0x1DA7 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xA16 JUMPI POP PUSH2 0xA15 DUP3 PUSH2 0x1E08 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0xA2F CALLER PUSH2 0x16D5 JUMP JUMPDEST LT ISZERO PUSH2 0xA70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA67 SWAP1 PUSH2 0x484E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA83 SWAP1 PUSH2 0x489D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x9 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xB42 SWAP2 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xB58 SWAP2 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0xBC4 CALLER PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4275726E20746F6B656E20746F207375626D69742061207175657374696F6E00 DUP2 MSTORE POP PUSH2 0x1E6F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 GT PUSH2 0xC5E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC4B JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xC64 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xC56 SWAP1 PUSH2 0x489D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBCF JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC93 JUMPI PUSH2 0xC92 PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCCC JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xCB9 PUSH2 0x324E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xCB1 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 GT PUSH2 0xECF JUMPI PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xD63 SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD8F SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDDC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDB1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDDC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDBF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xDF5 SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE21 SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE6E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE43 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE6E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE51 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP3 PUSH1 0x1 DUP4 PUSH2 0xEA0 SWAP2 SWAP1 PUSH2 0x4BC3 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xEB1 JUMPI PUSH2 0xEB0 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xEC7 SWAP1 PUSH2 0x489D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCD6 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE3 DUP5 CALLER PUSH2 0x1457 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0xF2A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xCBA6E97700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF21 SWAP2 SWAP1 PUSH2 0x4426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP3 PUSH2 0xF38 SWAP2 SWAP1 PUSH2 0x4C26 JUMP JUMPDEST SWAP1 POP PUSH2 0xF48 CALLER DUP7 DUP4 PUSH1 0x1 DUP8 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x0 CALLER DUP3 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF5F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0xF7A DUP7 DUP3 PUSH2 0x2212 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD SWAP1 POP DUP5 MLOAD DUP2 EQ ISZERO DUP1 PUSH2 0xF99 JUMPI POP DUP4 MLOAD DUP2 EQ ISZERO JUMPDEST DUP1 PUSH2 0xFA5 JUMPI POP DUP3 MLOAD DUP2 EQ ISZERO JUMPDEST DUP1 PUSH2 0xFB1 JUMPI POP DUP2 MLOAD DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xFE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x263EEE8D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x108D JUMPI PUSH2 0x1082 DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1009 JUMPI PUSH2 0x1008 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1024 JUMPI PUSH2 0x1023 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x103F JUMPI PUSH2 0x103E PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x105A JUMPI PUSH2 0x1059 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1075 JUMPI PUSH2 0x1074 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1752 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xFEB JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x10FE JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1144 JUMPI CALLER DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x1A525B3200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1152 DUP4 DUP6 PUSH1 0x0 DUP6 DUP6 PUSH2 0x1F3F JUMP JUMPDEST DUP2 ISZERO PUSH2 0x118D JUMPI PUSH1 0x0 DUP4 PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1170 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4D0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x118B DUP6 DUP3 PUSH2 0x2212 JUMP JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11B0 JUMPI PUSH1 0x12 PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1201 SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x122D SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x127A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x124F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x127A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x125D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x128F SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12BB SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1308 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1308 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AC SWAP1 PUSH2 0x4DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP3 GT ISZERO PUSH2 0x13FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F1 SWAP1 PUSH2 0x4E26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1422 SWAP2 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1450 DUP3 PUSH2 0x2244 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14D3 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1553 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1578 JUMPI PUSH2 0x1577 PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15AB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1596 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x16CE JUMPI PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x15E9 JUMPI PUSH2 0x15E8 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x15FB SWAP2 SWAP1 PUSH2 0x4E55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1609 SWAP3 SWAP2 SWAP1 PUSH2 0x4EB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1644 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x16A2 JUMPI PUSH1 0x0 DUP2 MLOAD EQ PUSH2 0x1665 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH32 0xB774C28400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1699 SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x16B6 JUMPI PUSH2 0x16B5 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0x15B1 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1726 PUSH2 0x22E9 JUMP JUMPDEST PUSH2 0x1730 PUSH1 0x0 PUSH2 0x2367 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1791 JUMPI PUSH2 0x1790 CALLER DUP7 DUP6 PUSH2 0x242B JUMP JUMPDEST JUMPDEST PUSH2 0x179E DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2530 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x180D JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1853 JUMPI CALLER DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x98CE294500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x185F DUP6 DUP6 PUSH2 0x1457 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x189B JUMPI PUSH1 0x40 MLOAD PUSH32 0xEF76C3500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP3 SUB SWAP1 POP PUSH2 0x18B0 DUP6 DUP8 DUP4 PUSH1 0x1 DUP8 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x18E2 DUP8 DUP3 PUSH2 0x2212 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18F3 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x192D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1937 DUP3 DUP3 PUSH2 0x263E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1946 DUP3 PUSH2 0x16D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x197E PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x19B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19C2 DUP3 DUP3 PUSH2 0x27AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A70 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1B1B CALLER PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4672656520746F6B656E20666F7220414D41207175657374696F6E0000000000 DUP2 MSTORE POP PUSH2 0x287F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1B2B CALLER DUP5 DUP5 PUSH1 0x1 DUP6 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x0 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B42 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1B5D DUP5 DUP3 PUSH2 0x2212 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1BB2 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x294E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BD6 JUMPI PUSH2 0x1BD5 PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C09 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1BF4 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1C64 JUMPI PUSH2 0x1C3B DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C2E JUMPI PUSH2 0x1C2D PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2244 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C4E JUMPI PUSH2 0x1C4D PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1C0F JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C72 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD8 SWAP1 PUSH2 0x4FAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CEA DUP2 PUSH2 0x2367 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1D28 PUSH10 0xCEE78B4094DA86011096 PUSH1 0xB0 SHL DUP6 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH2 0x296F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D35 DUP3 PUSH2 0x2244 JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1D4B JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x1D8D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x42BFE79F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D84 SWAP2 SWAP1 PUSH2 0x4078 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1D97 SWAP1 PUSH2 0x5020 JUMP JUMPDEST PUSH1 0x60 SHR PUSH1 0x1 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xA918FA6B PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1E01 JUMPI POP PUSH2 0x1E00 DUP3 PUSH2 0x29AF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E1B PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x1CED JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E5C JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1E6A JUMP JUMPDEST PUSH2 0x1E66 DUP2 DUP5 PUSH2 0x2A10 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ED5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD2D5EC3000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EE4 DUP4 PUSH1 0x0 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2ACF JUMP JUMPDEST PUSH2 0x1EF3 DUP4 PUSH1 0x0 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2AD6 JUMP JUMPDEST PUSH2 0x1F02 DUP4 PUSH1 0x0 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2D1B JUMP JUMPDEST PUSH1 0x0 CALLER DUP5 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F1E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5087 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1F39 DUP5 DUP3 PUSH2 0x2D22 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6355E76600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x200A JUMPI PUSH1 0x40 MLOAD PUSH32 0xDAB7504700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 EQ PUSH2 0x2150 JUMPI PUSH2 0x20E4 DUP5 PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2D54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF772A43BFDF4729B196E3FB54A818B91A2CA6C49D10B2E16278752F9F515C25D DUP5 PUSH1 0x40 MLOAD PUSH2 0x2143 SWAP2 SWAP1 PUSH2 0x4078 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x21A1 DUP5 PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2D84 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP2 ISZERO ISZERO DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEBF5762D8855CBE012D2CA42FB33A81175E17C8A8751F8859931BA453BD4167 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2202 SWAP2 SWAP1 PUSH2 0x4078 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2240 DUP3 PUSH32 0x386072CC5A58E61263B434C722725F21031CD06E7C552CFAA06DB5DE8A320DBC PUSH1 0x0 SHL DUP4 PUSH2 0x2DB4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x2264 SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2290 SWAP1 PUSH2 0x4914 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x22B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x22DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22F1 PUSH2 0x2E73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x230F PUSH2 0x194D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2365 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235C SWAP1 PUSH2 0x512D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x24BA JUMPI POP DUP1 DUP3 GT JUMPDEST ISZERO PUSH2 0x2502 JUMPI DUP3 DUP2 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH32 0xF3A6B69100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24F9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x514D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x252A DUP4 DUP6 DUP5 DUP5 PUSH2 0x2513 SWAP2 SWAP1 PUSH2 0x4BC3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1F3F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2597 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x25CE JUMPI PUSH1 0x40 MLOAD PUSH32 0xD2D5EC3000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25DB DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2ACF JUMP JUMPDEST PUSH2 0x25E8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2AD6 JUMP JUMPDEST PUSH2 0x25F5 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2D1B JUMP JUMPDEST PUSH1 0x0 CALLER DUP7 DUP7 DUP7 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2610 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5087 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x262B DUP7 DUP3 PUSH2 0x2D22 JUMP JUMPDEST PUSH2 0x2636 DUP6 DUP5 DUP4 PUSH2 0x2E7B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0xDEBA1E292F8BA88238E10AB3C7F88BD4BE4FAC56CAD5194B6ECCEAF653468AF1 PUSH1 0x0 SHL DUP3 SUB PUSH2 0x269A JUMPI PUSH1 0x40 MLOAD PUSH32 0x85C169BD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 PUSH1 0x0 SHL DUP3 SUB PUSH2 0x26F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x76755B3800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 PUSH1 0x0 SHL DUP3 SUB PUSH2 0x2752 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4EF6D7FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x2772 SWAP2 SWAP1 PUSH2 0x51ED JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x27A3 SWAP2 SWAP1 PUSH2 0x4078 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x27EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x3BCC897900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD SUB PUSH2 0x2825 JUMPI PUSH1 0x40 MLOAD PUSH32 0x97DA5F9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x287A JUMPI PUSH2 0x286F DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2847 JUMPI PUSH2 0x2846 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2862 JUMPI PUSH2 0x2861 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x263E JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2828 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x28E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD2D5EC3000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28F3 PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2ACF JUMP JUMPDEST PUSH2 0x2901 PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2AD6 JUMP JUMPDEST PUSH2 0x290F PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2D1B JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 DUP7 DUP7 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x292B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5087 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x2947 DUP6 DUP5 DUP4 PUSH2 0x2E7B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x295E DUP4 PUSH1 0x0 ADD PUSH2 0x2FE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 PUSH1 0xF0 SHL DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x298B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x537A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x29A6 SWAP1 PUSH2 0x53CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x629AA694 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2A09 JUMPI POP PUSH2 0x2A08 DUP3 PUSH2 0x303D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A2C SWAP2 SWAP1 PUSH2 0x46A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP6 MLOAD PUSH1 0x20 DUP8 ADD DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x2AB7 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2AC3 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B28 JUMPI DUP3 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2B1C SWAP2 SWAP1 PUSH2 0x4C26 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2BFD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2BB5 JUMPI DUP1 DUP7 DUP6 PUSH1 0x40 MLOAD PUSH32 0x8D4794900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BAC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP2 SUB PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2C46 JUMPI DUP3 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2C94 JUMP JUMPDEST DUP3 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3997E418D2CEF0B3B0E907B1E39605C3F7D32DBD061E82EA5B4A770D46A160A6 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x2D0C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x546A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2D50 DUP3 PUSH32 0x429AC7A06903DBC9C13DFCB3C9D11DF8194581FA047C96D7A4171FC7402958EA PUSH1 0x0 SHL DUP4 PUSH2 0x2DB4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D7C DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x30A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DAC DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x3117 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DE4 PUSH4 0x6BB56A14 PUSH1 0xE0 SHL DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A10 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x2E6E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E24 SWAP3 SWAP2 SWAP1 PUSH2 0x54B7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E6C SWAP2 SWAP1 PUSH2 0x5557 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2E8C DUP4 PUSH4 0x6BB56A14 PUSH1 0xE0 SHL PUSH2 0x2A10 JUMP JUMPDEST ISZERO PUSH2 0x2F3D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 PUSH32 0x20804611B3E2EA21C480DC465142210ACF4A2485947541770EC1FB87DEE4A55C PUSH1 0x0 SHL DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EEF SWAP3 SWAP2 SWAP1 PUSH2 0x54B7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F0E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F37 SWAP2 SWAP1 PUSH2 0x5557 JUMP JUMPDEST POP PUSH2 0x2FDC JUMP JUMPDEST DUP2 PUSH2 0x2FDB JUMPI PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x2F9E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA608FBB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F95 SWAP2 SWAP1 PUSH2 0x4426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH32 0x26C247F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD2 SWAP2 SWAP1 PUSH2 0x4426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x3031 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x301D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30B3 DUP4 DUP4 PUSH2 0x322B JUMP JUMPDEST PUSH2 0x310C JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x3111 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x321F JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x3149 SWAP2 SWAP1 PUSH2 0x4BC3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x3161 SWAP2 SWAP1 PUSH2 0x4BC3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x31D0 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3182 JUMPI PUSH2 0x3181 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x31A6 JUMPI PUSH2 0x31A5 PUSH2 0x4BF7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x31E4 JUMPI PUSH2 0x31E3 PUSH2 0x55A0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3225 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B5 PUSH1 0x4 DUP4 PUSH2 0x328E JUMP JUMPDEST SWAP2 POP PUSH2 0x32C0 DUP3 PUSH2 0x329F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32E4 DUP2 PUSH2 0x32A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3317 DUP4 DUP6 PUSH2 0x328E JUMP JUMPDEST SWAP4 POP PUSH2 0x3324 DUP4 DUP6 DUP5 PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x332D DUP4 PUSH2 0x32FA JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3353 DUP2 DUP5 DUP7 PUSH2 0x330B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33A5 DUP2 PUSH2 0x3370 JUMP JUMPDEST DUP2 EQ PUSH2 0x33B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33C2 DUP2 PUSH2 0x339C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33DE JUMPI PUSH2 0x33DD PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33EC DUP5 DUP3 DUP6 ADD PUSH2 0x33B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x340A DUP2 PUSH2 0x33F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3425 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3401 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x346D DUP3 PUSH2 0x32FA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x348C JUMPI PUSH2 0x348B PUSH2 0x3435 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x349F PUSH2 0x335C JUMP JUMPDEST SWAP1 POP PUSH2 0x34AB DUP3 DUP3 PUSH2 0x3464 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x34CB JUMPI PUSH2 0x34CA PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH2 0x34D4 DUP3 PUSH2 0x32FA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34F4 PUSH2 0x34EF DUP5 PUSH2 0x34B0 JUMP JUMPDEST PUSH2 0x3495 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3510 JUMPI PUSH2 0x350F PUSH2 0x3430 JUMP JUMPDEST JUMPDEST PUSH2 0x351B DUP5 DUP3 DUP6 PUSH2 0x32EB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3538 JUMPI PUSH2 0x3537 PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3548 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x34E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3567 JUMPI PUSH2 0x3566 PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3585 JUMPI PUSH2 0x3584 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3591 DUP5 DUP3 DUP6 ADD PUSH2 0x3523 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C5 DUP3 PUSH2 0x359A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35D5 DUP2 PUSH2 0x35BA JUMP JUMPDEST DUP2 EQ PUSH2 0x35E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x35F2 DUP2 PUSH2 0x35CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x360E JUMPI PUSH2 0x360D PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x361C DUP5 DUP3 DUP6 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3638 DUP2 PUSH2 0x3625 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3653 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x362F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x368E DUP2 PUSH2 0x35BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x36CE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36E5 DUP3 PUSH2 0x3694 JUMP JUMPDEST PUSH2 0x36EF DUP2 DUP6 PUSH2 0x369F JUMP JUMPDEST SWAP4 POP PUSH2 0x36FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36B0 JUMP JUMPDEST PUSH2 0x3708 DUP2 PUSH2 0x32FA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x371C DUP2 PUSH2 0x33F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x373A PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x3685 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x3752 DUP3 DUP3 PUSH2 0x36DA JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x376C DUP3 DUP3 PUSH2 0x36DA JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x3781 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x3713 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3798 DUP4 DUP4 PUSH2 0x3722 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37B8 DUP3 PUSH2 0x3659 JUMP JUMPDEST PUSH2 0x37C2 DUP2 DUP6 PUSH2 0x3664 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x37D4 DUP6 PUSH2 0x3675 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3810 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x37F1 DUP6 DUP3 PUSH2 0x378C JUMP JUMPDEST SWAP5 POP PUSH2 0x37FC DUP4 PUSH2 0x37A0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x37D8 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x383C DUP2 DUP5 PUSH2 0x37AD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x384D DUP2 PUSH2 0x3625 JUMP JUMPDEST DUP2 EQ PUSH2 0x3858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x386A DUP2 PUSH2 0x3844 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x388B JUMPI PUSH2 0x388A PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH2 0x3894 DUP3 PUSH2 0x32FA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38B4 PUSH2 0x38AF DUP5 PUSH2 0x3870 JUMP JUMPDEST PUSH2 0x3495 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x38D0 JUMPI PUSH2 0x38CF PUSH2 0x3430 JUMP JUMPDEST JUMPDEST PUSH2 0x38DB DUP5 DUP3 DUP6 PUSH2 0x32EB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x38F8 JUMPI PUSH2 0x38F7 PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3908 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x38A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x392A JUMPI PUSH2 0x3929 PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3938 DUP7 DUP3 DUP8 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3949 DUP7 DUP3 DUP8 ADD PUSH2 0x385B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x396A JUMPI PUSH2 0x3969 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3976 DUP7 DUP3 DUP8 ADD PUSH2 0x38E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x399B JUMPI PUSH2 0x399A PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x39C4 PUSH2 0x39BF DUP5 PUSH2 0x3980 JUMP JUMPDEST PUSH2 0x3495 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x39E7 JUMPI PUSH2 0x39E6 PUSH2 0x39AC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A10 JUMPI DUP1 PUSH2 0x39FC DUP9 DUP3 PUSH2 0x35E3 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E9 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A2F JUMPI PUSH2 0x3A2E PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A3F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x39B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3A63 JUMPI PUSH2 0x3A62 PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A87 PUSH2 0x3A82 DUP5 PUSH2 0x3A48 JUMP JUMPDEST PUSH2 0x3495 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3AAA JUMPI PUSH2 0x3AA9 PUSH2 0x39AC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3AD3 JUMPI DUP1 PUSH2 0x3ABF DUP9 DUP3 PUSH2 0x385B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3AAC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3AF2 JUMPI PUSH2 0x3AF1 PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3B02 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3A74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3B26 JUMPI PUSH2 0x3B25 PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B40 DUP2 PUSH2 0x33F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3B5D DUP2 PUSH2 0x3B37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B76 PUSH2 0x3B71 DUP5 PUSH2 0x3B0B JUMP JUMPDEST PUSH2 0x3495 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3B99 JUMPI PUSH2 0x3B98 PUSH2 0x39AC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3BC2 JUMPI DUP1 PUSH2 0x3BAE DUP9 DUP3 PUSH2 0x3B4E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3B9B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3BE1 JUMPI PUSH2 0x3BE0 PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3BF1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3B63 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3C15 JUMPI PUSH2 0x3C14 PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C39 PUSH2 0x3C34 DUP5 PUSH2 0x3BFA JUMP JUMPDEST PUSH2 0x3495 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3C5C JUMPI PUSH2 0x3C5B PUSH2 0x39AC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3CA3 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C81 JUMPI PUSH2 0x3C80 PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x3C8E DUP10 DUP3 PUSH2 0x38E3 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3C5E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3CC2 JUMPI PUSH2 0x3CC1 PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3CD2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3C26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3CF7 JUMPI PUSH2 0x3CF6 PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D15 JUMPI PUSH2 0x3D14 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3D21 DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D42 JUMPI PUSH2 0x3D41 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3D4E DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D6F JUMPI PUSH2 0x3D6E PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3D7B DUP9 DUP3 DUP10 ADD PUSH2 0x3ADD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D9C JUMPI PUSH2 0x3D9B PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3DA8 DUP9 DUP3 DUP10 ADD PUSH2 0x3BCC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DC9 JUMPI PUSH2 0x3DC8 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3DD5 DUP9 DUP3 DUP10 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3DFC JUMPI PUSH2 0x3DFB PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E0A DUP8 DUP3 DUP9 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3E1B DUP8 DUP3 DUP9 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3E2C DUP8 DUP3 DUP9 ADD PUSH2 0x3B4E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E4D JUMPI PUSH2 0x3E4C PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3E59 DUP8 DUP3 DUP9 ADD PUSH2 0x38E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E7B DUP2 PUSH2 0x3E65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E96 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EB2 JUMPI PUSH2 0x3EB1 PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EC0 DUP5 DUP3 DUP6 ADD PUSH2 0x385B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3ED2 DUP2 PUSH2 0x35BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EF4 DUP3 PUSH2 0x3694 JUMP JUMPDEST PUSH2 0x3EFE DUP2 DUP6 PUSH2 0x3ED8 JUMP JUMPDEST SWAP4 POP PUSH2 0x3F0E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36B0 JUMP JUMPDEST PUSH2 0x3F17 DUP2 PUSH2 0x32FA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3F37 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3EC9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3F49 DUP2 DUP7 PUSH2 0x3EE9 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3F5D DUP2 DUP6 PUSH2 0x3EE9 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F6C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3401 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F8C JUMPI PUSH2 0x3F8B PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F9A DUP6 DUP3 DUP7 ADD PUSH2 0x385B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FBB JUMPI PUSH2 0x3FBA PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x3FC7 DUP6 DUP3 DUP7 ADD PUSH2 0x3523 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FE4 DUP2 PUSH2 0x3FD1 JUMP JUMPDEST DUP2 EQ PUSH2 0x3FEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4001 DUP2 PUSH2 0x3FDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x401D JUMPI PUSH2 0x401C PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x402B DUP5 DUP3 DUP6 ADD PUSH2 0x3FF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404A DUP3 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x4054 DUP2 DUP6 PUSH2 0x328E JUMP JUMPDEST SWAP4 POP PUSH2 0x4064 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36B0 JUMP JUMPDEST PUSH2 0x406D DUP2 PUSH2 0x32FA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4092 DUP2 DUP5 PUSH2 0x403F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x40B1 JUMPI PUSH2 0x40B0 PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x40BF DUP6 DUP3 DUP7 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x40D0 DUP6 DUP3 DUP7 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x40F5 JUMPI PUSH2 0x40F4 PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4112 JUMPI PUSH2 0x4111 PUSH2 0x40DA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x412E JUMPI PUSH2 0x412D PUSH2 0x39AC JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x414C JUMPI PUSH2 0x414B PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x416A JUMPI PUSH2 0x4169 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x4176 DUP6 DUP3 DUP7 ADD PUSH2 0x40DF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41CA DUP3 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x41D4 DUP2 DUP6 PUSH2 0x41AE JUMP JUMPDEST SWAP4 POP PUSH2 0x41E4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36B0 JUMP JUMPDEST PUSH2 0x41ED DUP2 PUSH2 0x32FA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4204 DUP4 DUP4 PUSH2 0x41BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4224 DUP3 PUSH2 0x4182 JUMP JUMPDEST PUSH2 0x422E DUP2 DUP6 PUSH2 0x418D JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x4240 DUP6 PUSH2 0x419E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x427C JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x425D DUP6 DUP3 PUSH2 0x41F8 JUMP JUMPDEST SWAP5 POP PUSH2 0x4268 DUP4 PUSH2 0x420C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4244 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42A8 DUP2 DUP5 PUSH2 0x4219 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x42CC JUMPI PUSH2 0x42CB PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42DA DUP9 DUP3 DUP10 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x42EB DUP9 DUP3 DUP10 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x42FC DUP9 DUP3 DUP10 ADD PUSH2 0x385B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x430D DUP9 DUP3 DUP10 ADD PUSH2 0x3B4E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x432E JUMPI PUSH2 0x432D PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x433A DUP9 DUP3 DUP10 ADD PUSH2 0x38E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4361 JUMPI PUSH2 0x4360 PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x436F DUP8 DUP3 DUP9 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4380 DUP8 DUP3 DUP9 ADD PUSH2 0x35E3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4391 DUP8 DUP3 DUP9 ADD PUSH2 0x385B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43B2 JUMPI PUSH2 0x43B1 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x43BE DUP8 DUP3 DUP9 ADD PUSH2 0x38E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43E1 JUMPI PUSH2 0x43E0 PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43EF DUP6 DUP3 DUP7 ADD PUSH2 0x3FF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4410 JUMPI PUSH2 0x440F PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x441C DUP6 DUP3 DUP7 ADD PUSH2 0x38E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x443B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3EC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x445C JUMPI PUSH2 0x445B PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4480 PUSH2 0x447B DUP5 PUSH2 0x4441 JUMP JUMPDEST PUSH2 0x3495 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x44A3 JUMPI PUSH2 0x44A2 PUSH2 0x39AC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x44CC JUMPI DUP1 PUSH2 0x44B8 DUP9 DUP3 PUSH2 0x3FF2 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x44A5 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x44EB JUMPI PUSH2 0x44EA PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x44FB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x446D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x451B JUMPI PUSH2 0x451A PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4539 JUMPI PUSH2 0x4538 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x4545 DUP6 DUP3 DUP7 ADD PUSH2 0x44D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4566 JUMPI PUSH2 0x4565 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x4572 DUP6 DUP3 DUP7 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45B4 DUP4 DUP4 PUSH2 0x3685 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45D8 DUP3 PUSH2 0x457C JUMP JUMPDEST PUSH2 0x45E2 DUP2 DUP6 PUSH2 0x4587 JUMP JUMPDEST SWAP4 POP PUSH2 0x45ED DUP4 PUSH2 0x4598 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x461E JUMPI DUP2 MLOAD PUSH2 0x4605 DUP9 DUP3 PUSH2 0x45A8 JUMP JUMPDEST SWAP8 POP PUSH2 0x4610 DUP4 PUSH2 0x45C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x45F1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4645 DUP2 DUP5 PUSH2 0x45CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4663 JUMPI PUSH2 0x4662 PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4681 JUMPI PUSH2 0x4680 PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x468D DUP5 DUP3 DUP6 ADD PUSH2 0x44D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x469F DUP2 PUSH2 0x3370 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46D7 DUP4 DUP6 PUSH2 0x46C0 JUMP JUMPDEST SWAP4 POP PUSH2 0x46E4 DUP4 DUP6 DUP5 PUSH2 0x32EB JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4708 DUP3 PUSH2 0x46F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x471A DUP3 PUSH2 0x46FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4732 PUSH2 0x472D DUP3 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x470F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4753 PUSH2 0x474E DUP3 PUSH2 0x3625 JUMP JUMPDEST PUSH2 0x4738 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4766 DUP3 DUP7 DUP9 PUSH2 0x46CB JUMP JUMPDEST SWAP2 POP PUSH2 0x4772 DUP3 DUP6 PUSH2 0x4721 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4782 DUP3 DUP5 PUSH2 0x4742 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479F DUP3 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x47A9 DUP2 DUP6 PUSH2 0x46C0 JUMP JUMPDEST SWAP4 POP PUSH2 0x47B9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36B0 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47D1 DUP3 DUP5 PUSH2 0x4794 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206E656564206120746F6B656E20746F207375626D6974206120717565 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4838 PUSH1 0x25 DUP4 PUSH2 0x3ED8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4843 DUP3 PUSH2 0x47DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4867 DUP2 PUSH2 0x482B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x48A8 DUP3 PUSH2 0x3625 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x48DA JUMPI PUSH2 0x48D9 PUSH2 0x486E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x492C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x493F JUMPI PUSH2 0x493E PUSH2 0x48E5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x49A7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x496A JUMP JUMPDEST PUSH2 0x49B1 DUP7 DUP4 PUSH2 0x496A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49EE PUSH2 0x49E9 PUSH2 0x49E4 DUP5 PUSH2 0x3625 JUMP JUMPDEST PUSH2 0x49C9 JUMP JUMPDEST PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A08 DUP4 PUSH2 0x49D3 JUMP JUMPDEST PUSH2 0x4A1C PUSH2 0x4A14 DUP3 PUSH2 0x49F5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4977 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4A31 PUSH2 0x4A24 JUMP JUMPDEST PUSH2 0x4A3C DUP2 DUP5 DUP5 PUSH2 0x49FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4A60 JUMPI PUSH2 0x4A55 PUSH1 0x0 DUP3 PUSH2 0x4A29 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4A42 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4AA5 JUMPI PUSH2 0x4A76 DUP2 PUSH2 0x4945 JUMP JUMPDEST PUSH2 0x4A7F DUP5 PUSH2 0x495A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4A8E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4AA2 PUSH2 0x4A9A DUP6 PUSH2 0x495A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4A41 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AC8 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4AAA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AE1 DUP4 DUP4 PUSH2 0x4AB7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4AFA DUP3 PUSH2 0x3694 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B13 JUMPI PUSH2 0x4B12 PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH2 0x4B1D DUP3 SLOAD PUSH2 0x4914 JUMP JUMPDEST PUSH2 0x4B28 DUP3 DUP3 DUP6 PUSH2 0x4A64 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4B5B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4B49 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4B53 DUP6 DUP3 PUSH2 0x4AD5 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4BBB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4B69 DUP7 PUSH2 0x4945 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4B91 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4B6C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4BAE JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4BAA PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4AB7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BCE DUP3 PUSH2 0x3625 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BD9 DUP4 PUSH2 0x3625 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4BF1 JUMPI PUSH2 0x4BF0 PUSH2 0x486E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4C31 DUP3 PUSH2 0x3625 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C3C DUP4 PUSH2 0x3625 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4C54 JUMPI PUSH2 0x4C53 PUSH2 0x486E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4C6F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x4C7C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x362F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4C8E DUP2 DUP5 PUSH2 0x403F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4CAD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x4CBA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x4CC7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3EC9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CF4 PUSH2 0x4CEF PUSH2 0x4CEA DUP5 PUSH2 0x4CCF JUMP JUMPDEST PUSH2 0x49C9 JUMP JUMPDEST PUSH2 0x3E65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D04 DUP2 PUSH2 0x4CD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4D1F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x4D2C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4CFB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4D3E DUP2 DUP5 PUSH2 0x403F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79207468652070726F66696C65206F776E65722063616E20616E737765 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207175657374696F6E73000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA4 PUSH1 0x2B DUP4 PUSH2 0x3ED8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DAF DUP3 PUSH2 0x4D48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DD3 DUP2 PUSH2 0x4D97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207175657374696F6E20494400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E10 PUSH1 0x13 DUP4 PUSH2 0x3ED8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E1B DUP3 PUSH2 0x4DDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4E3F DUP2 PUSH2 0x4E03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x4E72 JUMPI PUSH2 0x4E71 PUSH2 0x4E46 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4E94 JUMPI PUSH2 0x4E93 PUSH2 0x4E4B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x4EB0 JUMPI PUSH2 0x4EAF PUSH2 0x4E50 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC5 DUP3 DUP5 DUP7 PUSH2 0x46CB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416C726561647920636C61696D65642061206672656520746F6B656E00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F07 PUSH1 0x1C DUP4 PUSH2 0x3ED8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F12 DUP3 PUSH2 0x4ED1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F36 DUP2 PUSH2 0x4EFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F99 PUSH1 0x26 DUP4 PUSH2 0x3ED8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FA4 DUP3 PUSH2 0x4F3D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FC8 DUP2 PUSH2 0x4F8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5017 DUP3 MLOAD PUSH2 0x4FDF JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x502B DUP3 PUSH2 0x4034 JUMP JUMPDEST DUP3 PUSH2 0x5035 DUP5 PUSH2 0x4FCF JUMP JUMPDEST SWAP1 POP PUSH2 0x5040 DUP2 PUSH2 0x500B JUMP JUMPDEST SWAP3 POP PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x5080 JUMPI PUSH2 0x507B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x14 SUB PUSH1 0x8 MUL PUSH2 0x496A JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x509C PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x50A9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x50B6 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x50C3 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x362F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x50D5 DUP2 DUP5 PUSH2 0x403F JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5117 PUSH1 0x20 DUP4 PUSH2 0x3ED8 JUMP JUMPDEST SWAP2 POP PUSH2 0x5122 DUP3 PUSH2 0x50E1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5146 DUP2 PUSH2 0x510A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5162 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x516F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x362F JUMP JUMPDEST PUSH2 0x517C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x5189 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x362F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x51E8 JUMPI PUSH2 0x51B9 DUP2 PUSH2 0x5192 JUMP JUMPDEST PUSH2 0x51C2 DUP5 PUSH2 0x495A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x51D1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x51E5 PUSH2 0x51DD DUP6 PUSH2 0x495A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4A41 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x51F6 DUP3 PUSH2 0x4034 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x520F JUMPI PUSH2 0x520E PUSH2 0x3435 JUMP JUMPDEST JUMPDEST PUSH2 0x5219 DUP3 SLOAD PUSH2 0x4914 JUMP JUMPDEST PUSH2 0x5224 DUP3 DUP3 DUP6 PUSH2 0x51A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5257 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5245 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x524F DUP6 DUP3 PUSH2 0x4AD5 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x52B7 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5265 DUP7 PUSH2 0x5192 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x528D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5268 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x52AA JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x52A6 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4AB7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5306 PUSH2 0x5301 DUP3 PUSH2 0x52BF JUMP JUMPDEST PUSH2 0x52EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFF000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5353 PUSH2 0x534E DUP3 PUSH2 0x530C JUMP JUMPDEST PUSH2 0x5338 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5374 PUSH2 0x536F DUP3 PUSH2 0x4FDF JUMP JUMPDEST PUSH2 0x5359 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5386 DUP3 DUP7 PUSH2 0x52F5 JUMP JUMPDEST PUSH1 0xA DUP3 ADD SWAP2 POP PUSH2 0x5396 DUP3 DUP6 PUSH2 0x5342 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP2 POP PUSH2 0x53A6 DUP3 DUP5 PUSH2 0x5363 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53C3 DUP3 MLOAD PUSH2 0x3FD1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53D7 DUP3 PUSH2 0x4034 JUMP JUMPDEST DUP3 PUSH2 0x53E1 DUP5 PUSH2 0x4FCF JUMP JUMPDEST SWAP1 POP PUSH2 0x53EC DUP2 PUSH2 0x53B7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x542C JUMPI PUSH2 0x5427 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x496A JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5448 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x362F JUMP JUMPDEST PUSH2 0x5455 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x5462 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x362F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x547F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x362F JUMP JUMPDEST PUSH2 0x548C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3401 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x549E DUP2 DUP5 PUSH2 0x403F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x54B1 DUP2 PUSH2 0x3FD1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x54CC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x54A8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x54DE DUP2 DUP5 PUSH2 0x403F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54FA PUSH2 0x54F5 DUP5 PUSH2 0x3870 JUMP JUMPDEST PUSH2 0x3495 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5516 JUMPI PUSH2 0x5515 PUSH2 0x3430 JUMP JUMPDEST JUMPDEST PUSH2 0x5521 DUP5 DUP3 DUP6 PUSH2 0x36B0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x553E JUMPI PUSH2 0x553D PUSH2 0x342B JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x554E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x54E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x556D JUMPI PUSH2 0x556C PUSH2 0x3366 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x558B JUMPI PUSH2 0x558A PUSH2 0x336B JUMP JUMPDEST JUMPDEST PUSH2 0x5597 DUP5 DUP3 DUP6 ADD PUSH2 0x5529 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 DUP4 TIMESTAMP 0xBC PUSH21 0xC31B7A9EB0D14D2DBC91DEFE5354A7B4CB2EA010D1 0xC0 DUP6 0xBB SWAP12 0xC NOT PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"122:2554:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5847:1:17;5834:9;:14;5830:90;;5871:38;;;;;;;;;;:::i;:::-;;;;;;;;5830:90;5937:34;;;;;;;;;;;;;;122:2554:25;;;5348:12:17;5394:1;5376:8;;:15;;:19;5372:90;;;5442:8;;5418:33;;;;;;;;;;;;:::i;:::-;;;;;;;;5372:90;5478:34;5503:8;;5478:24;:34::i;:::-;5471:41;;5266:253;;;122:2554:25;;;;;;9103:331:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;985:446:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2276:257;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9691:109:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1934:293:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13850:762:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;16373:779;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12375:801;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9519:113;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;368:45:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1484:444;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1815:151:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13235:328:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10257:1081;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9891:155;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:19;;;;;;;;;;;;;:::i;:::-;;419:48:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15895:419:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14671:1130;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3076:232:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2568:106:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3963:341:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;299:27:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;666:244;;;;;;;;;;;;;:::i;:::-;;11810:506:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;332:30:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13622:169:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2016:458:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6906:1041:17;7014:12;7082:17;7105:37;7134:7;;;;7105:28;:37::i;:::-;7081:61;;;7223:1;7202:23;;:9;:23;;;7198:92;;7282:7;;;;7246:44;;;;;;;;;;;:::i;:::-;;;;;;;;7198:92;7302:12;7316:19;7339:9;:14;;7361:9;7402:8;;7412:10;7424:9;7385:49;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7339:105;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7301:143;;;;7459:7;7455:486;;;7489:6;7482:13;;;;;;;7455:486;7853:6;7847:13;7901:15;7896:2;7888:6;7884:15;7877:40;6906:1041;;;;;:::o;9103:331::-;9228:4;128:10:16;9278:17:17;;9263:32;;;:11;:32;;;;:84;;;;9311:36;9335:11;9311:23;:36::i;:::-;9263:84;:164;;;;9363:64;9415:11;9363:51;:64::i;:::-;9263:164;9244:183;;9103:331;;;:::o;985:446:25:-;1101:12;1076:21;1086:10;1076:9;:21::i;:::-;:37;;1055:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;1187:15;;:17;;;;;;;;;:::i;:::-;;;;;;1243:104;;;;;;;;1265:10;1243:104;;;;;;1289:13;1243:104;;;;;;;;;;;;;;;;;;;;1332:5;1243:104;;;;;1214:9;:26;1224:15;;1214:26;;;;;;;;;;;:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1358:66;1364:10;1376:12;1358:66;;;;;;;;;;;;;;;;;:5;:66::i;:::-;985:446;:::o;2276:257::-;2341:4;2362:9;2374:1;2362:13;;2357:148;2382:15;;2377:1;:20;2357:148;;2445:4;2422:27;;:9;:12;2432:1;2422:12;;;;;;;;;;;:19;;;;;;;;;;;;:27;;;2418:77;;2476:4;2469:11;;;;;2418:77;2399:3;;;;;:::i;:::-;;;;2357:148;;;;2521:5;2514:12;;2276:257;;;;:::o;9691:109:17:-;9752:7;9778:15;;9771:22;;9691:109;:::o;1934:293:25:-;1982:17;2011:30;2059:15;;2044:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2011:64;;2090:9;2102:1;2090:13;;2085:106;2110:15;;2105:1;:20;2085:106;;2168:9;:12;2178:1;2168:12;;;;;;;;;;;2146:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;2163:1;2159;:5;;;;:::i;:::-;2146:19;;;;;;;;:::i;:::-;;;;;;;:34;;;;2127:3;;;;;:::i;:::-;;;;2085:106;;;;2208:12;2201:19;;;1934:293;:::o;13850:762:17:-;14019:20;14042:41;14062:8;14072:10;14042:19;:41::i;:::-;14019:64;;14113:1;14097:12;:17;14093:94;;14178:8;14135:52;;;;;;;;;;;:::i;:::-;;;;;;;;14093:94;14198:20;14236:11;14221:12;:26;;;;:::i;:::-;14198:49;;14258:153;14287:10;14311:8;14333:12;14359:4;14377:24;14258:15;:153::i;:::-;14422:21;14470:10;14494:12;14520:24;14446:108;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14422:132;;14565:40;14586:8;14596;14565:20;:40::i;:::-;14009:603;;;13850:762;;;:::o;16373:779::-;16587:18;16608:4;:11;16587:32;;16660:2;:9;16646:10;:23;;:66;;;;16699:6;:13;16685:10;:27;;16646:66;:108;;;;16742:5;:12;16728:10;:26;;16646:108;:149;;;;16784:4;:11;16770:10;:25;;16646:149;16629:235;;;16827:26;;;;;;;;;;;;;;16629:235;16879:9;16874:272;16894:10;16890:1;:14;16874:272;;;17021:54;17030:4;17035:1;17030:7;;;;;;;;:::i;:::-;;;;;;;;17039:2;17042:1;17039:5;;;;;;;;:::i;:::-;;;;;;;;17046:6;17053:1;17046:9;;;;;;;;:::i;:::-;;;;;;;;17057:5;17063:1;17057:8;;;;;;;;:::i;:::-;;;;;;;;17067:4;17072:1;17067:7;;;;;;;;:::i;:::-;;;;;;;;17021:8;:54::i;:::-;17118:3;;;;;16874:272;;;;16577:575;16373:779;;;;;:::o;12375:801::-;12579:10;12565:24;;:10;:24;;;;:50;;;;;12607:8;12593:22;;:10;:22;;;;12565:50;12561:215;;;12687:10;12715;12743:8;12638:127;;;;;;;;;;;;;:::i;:::-;;;;;;;;12561:215;12786:144;12815:10;12839:8;12861:1;12876:6;12896:24;12786:15;:144::i;:::-;12945:6;12941:229;;;12967:21;13019:10;13047:1;13066:24;12991:113;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12967:137;;13119:40;13140:8;13150;13119:20;:40::i;:::-;12953:217;12941:229;12375:801;;;;:::o;9519:113::-;9577:5;9601:15;;;;;;;;;;;:24;;9623:2;9601:24;;;9619:1;9601:24;9594:31;;9519:113;:::o;368:45:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1484:444::-;1630:12;;;;;;;;;;;1616:26;;:10;:26;;;1595:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:15;;1729:11;:30;;1721:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1794:25;1822:9;:22;1832:11;1822:22;;;;;;;;;;;1794:50;;1876:11;1854:8;:19;;:33;;;;;;:::i;:::-;;1917:4;1897:8;:17;;;:24;;;;;;;;;;;;;;;;;;1585:343;1484:444;;:::o;1815:151:0:-;1901:22;1942:17;1951:7;1942:8;:17::i;:::-;1935:24;;1815:151;;;:::o;13235:328:17:-;13362:7;13399:8;13385:22;;:10;:22;;;13381:176;;13430:19;:31;13450:10;13430:31;;;;;;;;;;;;;;;;13423:38;;;;13381:176;13499:25;:37;13525:10;13499:37;;;;;;;;;;;;;;;:47;13537:8;13499:47;;;;;;;;;;;;;;;;13492:54;;13235:328;;;;;:::o;10257:1081::-;10347:22;10403:4;;:11;;10391:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10381:34;;10430:9;10425:907;10445:4;;:11;;10441:1;:15;10425:907;;;10475:12;10489:19;10520:4;10512:26;;10556:4;;10561:1;10556:7;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;10512:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10474:103;;;;10597:7;10592:636;;10715:1;10698:6;:13;:18;10694:520;;11013:6;11007:13;11069:15;11060:6;11056:2;11052:15;11045:40;10694:520;11192:1;11160:35;;;;;;;;;;;:::i;:::-;;;;;;;;10592:636;11255:6;11242:7;11250:1;11242:10;;;;;;;;:::i;:::-;;;;;;;:19;;;;11304:3;;;;;10460:872;;10425:907;;;;10257:1081;;;;:::o;9891:155::-;9982:7;10008:19;:31;10028:10;10008:31;;;;;;;;;;;;;;;;10001:38;;9891:155;;;:::o;1824:101:19:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;419:48:25:-;;;;;;;;;;;;;;;;;;;;;;:::o;15895:419:17:-;16084:4;16070:18;;:10;:18;;;16066:191;;16104:142;16148:10;16188:4;16225:6;16104:15;:142::i;:::-;16066:191;16267:40;16277:4;16283:2;16287:6;16295:5;16302:4;16267:9;:40::i;:::-;15895:419;;;;;:::o;14671:1130::-;14891:10;14877:24;;:10;:24;;;;:50;;;;;14919:8;14905:22;;:10;:22;;;;14877:50;14873:218;;;15002:10;15030;15058:8;14950:130;;;;;;;;;;;;;:::i;:::-;;;;;;;;14873:218;15101:24;15128:41;15148:8;15158:10;15128:19;:41::i;:::-;15101:68;;15202:16;15183;:35;15179:106;;;15241:33;;;;;;;;;;;;;;15179:106;15295:20;15383:16;15364;:35;15349:50;;15413:177;15446:10;15474:8;15500:12;15530:4;15552:24;15413:15;:177::i;:::-;15611:21;15659:10;15683:12;15709:24;15635:108;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15611:132;;15754:40;15775:8;15785;15754:20;:40::i;:::-;14863:938;;;14671:1130;;;;:::o;3076:232:0:-;1094:13:19;:11;:13::i;:::-;3225:1:0::1;3212:9;:14;3208:55;;3235:28;;;;;;;;;;;;;;3208:55;3273:28;3282:7;3291:9;3273:8;:28::i;:::-;3076:232:::0;;:::o;2568:106:25:-;2626:7;2652:15;2662:4;2652:9;:15::i;:::-;2645:22;;2568:106;;;:::o;1201:85:19:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;3963:341:0:-;1094:13:19;:11;:13::i;:::-;4214:1:0::1;4201:9;:14;4197:55;;4224:28;;;;;;;;;;;;;;4197:55;4262:35;4276:8;4286:10;4262:13;:35::i;:::-;3963:341:::0;;:::o;299:27:25:-;;;;;;;;;;;;;:::o;666:244::-;718:16;:28;735:10;718:28;;;;;;;;;;;;;;;;;;;;;;;;;717:29;709:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;821:4;790:16;:28;807:10;790:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;835:68;841:10;853:12;867:4;835:68;;;;;;;;;;;;;;;;;:5;:68::i;:::-;666:244::o;11810:506:17:-;11974:147;12003:10;12027:8;12049:6;12069:4;12087:24;11974:15;:147::i;:::-;12132:21;12180:10;12204:6;12224:24;12156:102;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12132:126;;12269:40;12290:8;12300;12269:20;:40::i;:::-;11964:352;11810:506;;;:::o;332:30:25:-;;;;:::o;13622:169:17:-;13718:16;13753:31;:10;:22;13764:10;13753:22;;;;;;;;;;;;;;;:29;:31::i;:::-;13746:38;;13622:169;;;:::o;2016:458:0:-;2117:25;2179:8;:15;2167:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:41;;2211:9;2206:234;2230:8;:15;2226:1;:19;2206:234;;;2279:21;2288:8;2297:1;2288:11;;;;;;;;:::i;:::-;;;;;;;;2279:8;:21::i;:::-;2263:10;2274:1;2263:13;;;;;;;;:::i;:::-;;;;;;;:37;;;;2412:3;;;;;2206:234;;;;2016:458;;;:::o;2074:198:19:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;8329:717:17:-;8446:7;8455:4;8551:30;8584:105;433:22:8;8626:23:17;;8663:16;8584:105;;;:28;:105::i;:::-;8551:138;;8778:29;8810:32;8819:22;8810:8;:32::i;:::-;8778:64;;8883:2;8856:16;:23;:29;;:61;;;;;8916:1;8889:16;:23;:28;;8856:61;8852:127;;;8962:16;8938:41;;;;;;;;;;;:::i;:::-;;;;;;;;8852:127;9014:16;9006:25;;;:::i;:::-;8998:34;;9034:4;8990:49;;;;;;8329:717;;;:::o;998:237:10:-;1097:4;182:10:8;1147:29:10;;1132:44;;;:11;:44;;;;:96;;;;1192:36;1216:11;1192:23;:36::i;:::-;1132:96;1113:115;;998:237;;;:::o;1658:457::-;1768:4;1785:23;1814:85;1856:33;;;1814:28;:85::i;:::-;1784:115;;;1940:1;1913:29;;:15;:29;;;1909:47;;1951:5;1944:12;;;;;1909:47;1986:122;2050:15;2083:11;1986:46;:122::i;:::-;1967:141;;;1658:457;;;;:::o;22318:613:17:-;22459:1;22443:18;;:4;:18;;;22439:87;;22484:31;;;;;;;;;;;;;;22439:87;22536:59;22557:4;22571:1;22575:6;22583:5;22590:4;22536:20;:59::i;:::-;22606:46;22614:4;22628:1;22632:6;22640:5;22647:4;22606:7;:46::i;:::-;22663:58;22683:4;22697:1;22701:6;22709:5;22716:4;22663:19;:58::i;:::-;22732:21;22780:10;22804:4;22830:1;22846:6;22866:4;22756:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;22732:148;;22890:34;22909:4;22915:8;22890:18;:34::i;:::-;22429:502;22318:613;;;:::o;18376:998::-;18609:1;18589:22;;:8;:22;;;18585:96;;18634:36;;;;;;;;;;;;;;18585:96;18707:10;18695:22;;:8;:22;;;18691:92;;18740:32;;;;;;;;;;;;;;18691:92;18843:9;18793:25;:37;18819:10;18793:37;;;;;;;;;;;;;;;:47;18831:8;18793:47;;;;;;;;;;;;;;;:59;;;;18880:1;18867:9;:14;18863:505;;18897:36;18924:8;18897:10;:22;18908:10;18897:22;;;;;;;;;;;;;;;:26;;:36;;;;:::i;:::-;;19052:9;19024:10;18952:165;;18998:8;18952:165;;;19079:24;18952:165;;;;;;:::i;:::-;;;;;;;;18863:505;;;19148:39;19178:8;19148:10;:22;19159:10;19148:22;;;;;;;;;;;;;;;:29;;:39;;;;:::i;:::-;;19293:8;19206:151;;19265:10;19206:151;;19239:8;19206:151;;;19319:24;19206:151;;;;;;:::i;:::-;;;;;;;;18863:505;18376:998;;;;;:::o;30438:254::-;30558:127;30605:8;1015:66:16;30627:26:17;;30667:8;30558:33;:127::i;:::-;30438:254;;:::o;4799:143:0:-;4879:22;4920:6;:15;4927:7;4920:15;;;;;;;;;;;4913:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4799:143;;;:::o;1359:130:19:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;23794:751:17:-;23937:24;23964:25;:37;23990:10;23964:37;;;;;;;;;;;;;;;:69;24015:8;23964:69;;;;;;;;;;;;;;;;23937:96;;24068:1;24048:16;:21;:57;;;;24089:16;24073:13;:32;24048:57;24044:261;;;24179:10;24207:16;24241:8;24267:13;24128:166;;;;;;;;;;;;;;:::i;:::-;;;;;;;;24044:261;24315:223;24357:10;24391:8;24443:13;24424:16;:32;;;;:::i;:::-;24480:5;24315:223;;;;;;;;;;;;:15;:223::i;:::-;23927:618;23794:751;;;:::o;25953:627::-;26138:1;26122:18;;:4;:18;;;:38;;;;26158:1;26144:16;;:2;:16;;;26122:38;26118:107;;;26183:31;;;;;;;;;;;;;;26118:107;26235:51;26256:4;26262:2;26266:6;26274:5;26281:4;26235:20;:51::i;:::-;26297:38;26305:4;26311:2;26315:6;26323:5;26330:4;26297:7;:38::i;:::-;26346:50;26366:4;26372:2;26376:6;26384:5;26391:4;26346:19;:50::i;:::-;26407:21;26442:10;26454:4;26460:2;26464:6;26472:4;26431:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;26407:70;;26488:34;26507:4;26513:8;26488:18;:34::i;:::-;26532:41;26553:2;26557:5;26564:8;26532:20;:41::i;:::-;26108:472;25953:627;;;;;:::o;1935:533:13:-;633:66:12;2067:20:13;;2056:7;:31;2052:410;;2110:26;;;;;;;;;;;;;;2052:410;776:66:12;2168:22:13;;2157:7;:33;2153:309;;2213:28;;;;;;;;;;;;;;2153:309;915:66:12;2273:20:13;;2262:7;:31;2258:204;;2316:26;;;;;;;;;;;;;;2258:204;2391:9;2373:6;:15;2380:7;2373:15;;;;;;;;;;;:27;;;;;;:::i;:::-;;2432:7;2420:31;2441:9;2420:31;;;;;;:::i;:::-;;;;;;;;1935:533;;:::o;6326:589:0:-;6475:10;:17;6456:8;:15;:36;6452:112;;6515:38;;;;;;;;;;;;;;6452:112;6597:1;6578:8;:15;:20;6574:92;;6621:34;;;;;;;;;;;;;;6574:92;6681:9;6676:233;6700:8;:15;6696:1;:19;6676:233;;;6733:36;6742:8;6751:1;6742:11;;;;;;;;:::i;:::-;;;;;;;;6755:10;6766:1;6755:13;;;;;;;;:::i;:::-;;;;;;;;6733:8;:36::i;:::-;6881:3;;;;;6676:233;;;;6326:589;;:::o;20231:628:17:-;20388:1;20374:16;;:2;:16;;;20370:85;;20413:31;;;;;;;;;;;;;;20370:85;20465:57;20494:1;20498:2;20502:6;20510:5;20517:4;20465:20;:57::i;:::-;20533:44;20549:1;20553:2;20557:6;20565:5;20572:4;20533:7;:44::i;:::-;20588:56;20616:1;20620:2;20624:6;20632:5;20639:4;20588:19;:56::i;:::-;20655:21;20703:10;20735:1;20751:2;20767:6;20787:4;20679:122;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20655:146;;20811:41;20832:2;20836:5;20843:8;20811:20;:41::i;:::-;20360:499;20231:628;;;;:::o;10259:300:24:-;10322:16;10350:22;10375:19;10383:3;:10;;10375:7;:19::i;:::-;10350:44;;10404:23;10514:5;10504:15;;10546:6;10539:13;;;;10259:300;;;:::o;5197::11:-;5311:7;5330:25;5384:9;5414:1;5407:9;;5430:12;5358:94;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5330:122;;5477:12;5469:21;;;:::i;:::-;5462:28;;;5197:300;;;;:::o;6963:228:0:-;7062:4;178:10:1;7112:20:0;;7097:35;;;:11;:35;;;;:87;;;;7148:36;7172:11;7148:23;:36::i;:::-;7097:87;7078:106;;6963:228;;;:::o;4421:647:22:-;4523:4;4563:26;4615:34;;;4651:11;4592:71;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4563:100;;4705:12;4727:18;4755:19;4899:4;4893;4877:13;4871:20;4864:4;4849:13;4845:24;4836:7;4829:5;4818:86;4807:97;;4931:16;4917:30;;4981:4;4975:11;4960:26;;5013:7;:29;;;;;5038:4;5024:10;:18;;5013:29;:48;;;;;5060:1;5046:11;:15;5013:48;5006:55;;;;;;4421:647;;;;:::o;28835:213:17:-;;;;;;:::o;26907:1384::-;27090:1;27074:18;;:4;:18;;;27070:570;;27229:6;27210:15;;:25;;;;;;;:::i;:::-;;;;;;;;27070:570;;;27266:19;27288;:25;27308:4;27288:25;;;;;;;;;;;;;;;;27266:47;;27346:6;27332:11;:20;27328:117;;;27404:11;27417:4;27423:6;27379:51;;;;;;;;;;;;;:::i;:::-;;;;;;;;27328:117;27609:6;27595:11;:20;27567:19;:25;27587:4;27567:25;;;;;;;;;;;;;;;:48;;;;27252:388;27070:570;27668:1;27654:16;;:2;:16;;;27650:443;;27838:6;27819:15;;:25;;;;;;;;;;;27650:443;;;28062:6;28035:19;:23;28055:2;28035:23;;;;;;;;;;;;;;;;:33;;;;;;;;;;;27650:443;28193:2;28108:176;;28171:4;28108:176;;28141:10;28108:176;;;28217:6;28244:5;28269:4;28108:176;;;;;;;;:::i;:::-;;;;;;;;26907:1384;;;;;:::o;29602:212::-;;;;;;:::o;31298:243::-;31412:122;31459:4;686:66:16;31477:25:17;;31516:8;31412:33;:122::i;:::-;31298:243;;:::o;8305:150:24:-;8375:4;8398:50;8403:3;:10;;8439:5;8423:23;;8415:32;;8398:4;:50::i;:::-;8391:57;;8305:150;;;;:::o;8623:156::-;8696:4;8719:53;8727:3;:10;;8763:5;8747:23;;8739:32;;8719:7;:53::i;:::-;8712:60;;8623:156;;;;:::o;1352:361:7:-;1514:100;128:10:6;1583:17:7;;1514:18;:51;;;;:100;;;;:::i;:::-;1497:210;;;1645:18;1639:43;;;1683:6;1691:4;1639:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1497:210;1352:361;;;:::o;655:96:20:-;708:7;734:10;727:17;;655:96;:::o;32437:615:17:-;32588:115;32652:2;128:10:6;32672:17:17;;32588:46;:115::i;:::-;32571:475;;;32734:2;32728:27;;;852:66:16;32756:28:17;;32786:8;32728:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;32571:475;;;32817:5;32812:234;;32860:1;32842:2;:14;;;:19;32838:198;;32940:2;32888:55;;;;;;;;;;;:::i;:::-;;;;;;;;32838:198;33018:2;32989:32;;;;;;;;;;;:::i;:::-;;;;;;;;32812:234;32571:475;32437:615;;;:::o;5570:109:24:-;5626:16;5661:3;:11;;5654:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5570:109;;;:::o;829:155:21:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;2214:404:24:-;2277:4;2298:21;2308:3;2313:5;2298:9;:21::i;:::-;2293:319;;2335:3;:11;;2352:5;2335:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2515:3;:11;;:18;;;;2493:3;:12;;:19;2506:5;2493:19;;;;;;;;;;;:40;;;;2554:4;2547:11;;;;2293:319;2596:5;2589:12;;2214:404;;;;;:::o;2786:1388::-;2852:4;2968:18;2989:3;:12;;:19;3002:5;2989:19;;;;;;;;;;;;2968:40;;3037:1;3023:10;:15;3019:1149;;3392:21;3429:1;3416:10;:14;;;;:::i;:::-;3392:38;;3444:17;3485:1;3464:3;:11;;:18;;;;:22;;;;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3831:10;3805:3;:12;;:23;3818:9;3805:23;;;;;;;;;;;:36;;;;3533:366;3501:398;3977:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;2786:1388;;;;;:::o;4255:127::-;4328:4;4374:1;4351:3;:12;;:19;4364:5;4351:19;;;;;;;;;;;;:24;;4344:31;;4255:127;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:168:26:-;90:11;124:6;119:3;112:19;164:4;159:3;155:14;140:29;;7:168;;;;:::o;181:214::-;321:66;317:1;309:6;305:14;298:90;181:214;:::o;401:363::-;542:3;563:65;626:1;621:3;563:65;:::i;:::-;556:72;;637:93;726:3;637:93;:::i;:::-;755:2;750:3;746:12;739:19;;401:363;;;:::o;770:417::-;935:4;973:2;962:9;958:18;950:26;;1022:9;1016:4;1012:20;1008:1;997:9;993:17;986:47;1050:130;1175:4;1050:130;:::i;:::-;1042:138;;770:417;;;:::o;1193:146::-;1290:6;1285:3;1280;1267:30;1331:1;1322:6;1317:3;1313:16;1306:27;1193:146;;;:::o;1345:102::-;1386:6;1437:2;1433:7;1428:2;1421:5;1417:14;1413:28;1403:38;;1345:102;;;:::o;1475:314::-;1571:3;1592:70;1655:6;1650:3;1592:70;:::i;:::-;1585:77;;1672:56;1721:6;1716:3;1709:5;1672:56;:::i;:::-;1753:29;1775:6;1753:29;:::i;:::-;1748:3;1744:39;1737:46;;1475:314;;;;;:::o;1795:329::-;1916:4;1954:2;1943:9;1939:18;1931:26;;2003:9;1997:4;1993:20;1989:1;1978:9;1974:17;1967:47;2031:86;2112:4;2103:6;2095;2031:86;:::i;:::-;2023:94;;1795:329;;;;;:::o;2130:75::-;2163:6;2196:2;2190:9;2180:19;;2130:75;:::o;2211:117::-;2320:1;2317;2310:12;2334:117;2443:1;2440;2433:12;2457:149;2493:7;2533:66;2526:5;2522:78;2511:89;;2457:149;;;:::o;2612:120::-;2684:23;2701:5;2684:23;:::i;:::-;2677:5;2674:34;2664:62;;2722:1;2719;2712:12;2664:62;2612:120;:::o;2738:137::-;2783:5;2821:6;2808:20;2799:29;;2837:32;2863:5;2837:32;:::i;:::-;2738:137;;;;:::o;2881:327::-;2939:6;2988:2;2976:9;2967:7;2963:23;2959:32;2956:119;;;2994:79;;:::i;:::-;2956:119;3114:1;3139:52;3183:7;3174:6;3163:9;3159:22;3139:52;:::i;:::-;3129:62;;3085:116;2881:327;;;;:::o;3214:90::-;3248:7;3291:5;3284:13;3277:21;3266:32;;3214:90;;;:::o;3310:109::-;3391:21;3406:5;3391:21;:::i;:::-;3386:3;3379:34;3310:109;;:::o;3425:210::-;3512:4;3550:2;3539:9;3535:18;3527:26;;3563:65;3625:1;3614:9;3610:17;3601:6;3563:65;:::i;:::-;3425:210;;;;:::o;3641:117::-;3750:1;3747;3740:12;3764:117;3873:1;3870;3863:12;3887:180;3935:77;3932:1;3925:88;4032:4;4029:1;4022:15;4056:4;4053:1;4046:15;4073:281;4156:27;4178:4;4156:27;:::i;:::-;4148:6;4144:40;4286:6;4274:10;4271:22;4250:18;4238:10;4235:34;4232:62;4229:88;;;4297:18;;:::i;:::-;4229:88;4337:10;4333:2;4326:22;4116:238;4073:281;;:::o;4360:129::-;4394:6;4421:20;;:::i;:::-;4411:30;;4450:33;4478:4;4470:6;4450:33;:::i;:::-;4360:129;;;:::o;4495:308::-;4557:4;4647:18;4639:6;4636:30;4633:56;;;4669:18;;:::i;:::-;4633:56;4707:29;4729:6;4707:29;:::i;:::-;4699:37;;4791:4;4785;4781:15;4773:23;;4495:308;;;:::o;4809:425::-;4887:5;4912:66;4928:49;4970:6;4928:49;:::i;:::-;4912:66;:::i;:::-;4903:75;;5001:6;4994:5;4987:21;5039:4;5032:5;5028:16;5077:3;5068:6;5063:3;5059:16;5056:25;5053:112;;;5084:79;;:::i;:::-;5053:112;5174:54;5221:6;5216:3;5211;5174:54;:::i;:::-;4893:341;4809:425;;;;;:::o;5254:340::-;5310:5;5359:3;5352:4;5344:6;5340:17;5336:27;5326:122;;5367:79;;:::i;:::-;5326:122;5484:6;5471:20;5509:79;5584:3;5576:6;5569:4;5561:6;5557:17;5509:79;:::i;:::-;5500:88;;5316:278;5254:340;;;;:::o;5600:509::-;5669:6;5718:2;5706:9;5697:7;5693:23;5689:32;5686:119;;;5724:79;;:::i;:::-;5686:119;5872:1;5861:9;5857:17;5844:31;5902:18;5894:6;5891:30;5888:117;;;5924:79;;:::i;:::-;5888:117;6029:63;6084:7;6075:6;6064:9;6060:22;6029:63;:::i;:::-;6019:73;;5815:287;5600:509;;;;:::o;6115:126::-;6152:7;6192:42;6185:5;6181:54;6170:65;;6115:126;;;:::o;6247:96::-;6284:7;6313:24;6331:5;6313:24;:::i;:::-;6302:35;;6247:96;;;:::o;6349:122::-;6422:24;6440:5;6422:24;:::i;:::-;6415:5;6412:35;6402:63;;6461:1;6458;6451:12;6402:63;6349:122;:::o;6477:139::-;6523:5;6561:6;6548:20;6539:29;;6577:33;6604:5;6577:33;:::i;:::-;6477:139;;;;:::o;6622:329::-;6681:6;6730:2;6718:9;6709:7;6705:23;6701:32;6698:119;;;6736:79;;:::i;:::-;6698:119;6856:1;6881:53;6926:7;6917:6;6906:9;6902:22;6881:53;:::i;:::-;6871:63;;6827:117;6622:329;;;;:::o;6957:77::-;6994:7;7023:5;7012:16;;6957:77;;;:::o;7040:118::-;7127:24;7145:5;7127:24;:::i;:::-;7122:3;7115:37;7040:118;;:::o;7164:222::-;7257:4;7295:2;7284:9;7280:18;7272:26;;7308:71;7376:1;7365:9;7361:17;7352:6;7308:71;:::i;:::-;7164:222;;;;:::o;7392:140::-;7485:6;7519:5;7513:12;7503:22;;7392:140;;;:::o;7538:210::-;7663:11;7697:6;7692:3;7685:19;7737:4;7732:3;7728:14;7713:29;;7538:210;;;;:::o;7754:158::-;7847:4;7870:3;7862:11;;7900:4;7895:3;7891:14;7883:22;;7754:158;;;:::o;7918:108::-;7995:24;8013:5;7995:24;:::i;:::-;7990:3;7983:37;7918:108;;:::o;8032:99::-;8084:6;8118:5;8112:12;8102:22;;8032:99;;;:::o;8137:159::-;8211:11;8245:6;8240:3;8233:19;8285:4;8280:3;8276:14;8261:29;;8137:159;;;;:::o;8302:246::-;8383:1;8393:113;8407:6;8404:1;8401:13;8393:113;;;8492:1;8487:3;8483:11;8477:18;8473:1;8468:3;8464:11;8457:39;8429:2;8426:1;8422:10;8417:15;;8393:113;;;8540:1;8531:6;8526:3;8522:16;8515:27;8364:184;8302:246;;;:::o;8554:357::-;8632:3;8660:39;8693:5;8660:39;:::i;:::-;8715:61;8769:6;8764:3;8715:61;:::i;:::-;8708:68;;8785:65;8843:6;8838:3;8831:4;8824:5;8820:16;8785:65;:::i;:::-;8875:29;8897:6;8875:29;:::i;:::-;8870:3;8866:39;8859:46;;8636:275;8554:357;;;;:::o;8917:99::-;8988:21;9003:5;8988:21;:::i;:::-;8983:3;8976:34;8917:99;;:::o;9084:1031::-;9195:3;9231:4;9226:3;9222:14;9320:4;9313:5;9309:16;9303:23;9339:63;9396:4;9391:3;9387:14;9373:12;9339:63;:::i;:::-;9246:166;9502:4;9495:5;9491:16;9485:23;9555:3;9549:4;9545:14;9538:4;9533:3;9529:14;9522:38;9581:73;9649:4;9635:12;9581:73;:::i;:::-;9573:81;;9422:243;9753:4;9746:5;9742:16;9736:23;9806:3;9800:4;9796:14;9789:4;9784:3;9780:14;9773:38;9832:73;9900:4;9886:12;9832:73;:::i;:::-;9824:81;;9675:241;10002:4;9995:5;9991:16;9985:23;10021:57;10072:4;10067:3;10063:14;10049:12;10021:57;:::i;:::-;9926:162;10105:4;10098:11;;9200:915;9084:1031;;;;:::o;10121:260::-;10242:10;10277:98;10371:3;10363:6;10277:98;:::i;:::-;10263:112;;10121:260;;;;:::o;10387:139::-;10483:4;10515;10510:3;10506:14;10498:22;;10387:139;;;:::o;10598:1119::-;10769:3;10798:80;10872:5;10798:80;:::i;:::-;10894:112;10999:6;10994:3;10894:112;:::i;:::-;10887:119;;11032:3;11077:4;11069:6;11065:17;11060:3;11056:27;11107:82;11183:5;11107:82;:::i;:::-;11212:7;11243:1;11228:444;11253:6;11250:1;11247:13;11228:444;;;11324:9;11318:4;11314:20;11309:3;11302:33;11375:6;11369:13;11403:116;11514:4;11499:13;11403:116;:::i;:::-;11395:124;;11542:86;11621:6;11542:86;:::i;:::-;11532:96;;11657:4;11652:3;11648:14;11641:21;;11288:384;11275:1;11272;11268:9;11263:14;;11228:444;;;11232:14;11688:4;11681:11;;11708:3;11701:10;;10774:943;;;;;10598:1119;;;;:::o;11723:477::-;11918:4;11956:2;11945:9;11941:18;11933:26;;12005:9;11999:4;11995:20;11991:1;11980:9;11976:17;11969:47;12033:160;12188:4;12179:6;12033:160;:::i;:::-;12025:168;;11723:477;;;;:::o;12206:122::-;12279:24;12297:5;12279:24;:::i;:::-;12272:5;12269:35;12259:63;;12318:1;12315;12308:12;12259:63;12206:122;:::o;12334:139::-;12380:5;12418:6;12405:20;12396:29;;12434:33;12461:5;12434:33;:::i;:::-;12334:139;;;;:::o;12479:307::-;12540:4;12630:18;12622:6;12619:30;12616:56;;;12652:18;;:::i;:::-;12616:56;12690:29;12712:6;12690:29;:::i;:::-;12682:37;;12774:4;12768;12764:15;12756:23;;12479:307;;;:::o;12792:423::-;12869:5;12894:65;12910:48;12951:6;12910:48;:::i;:::-;12894:65;:::i;:::-;12885:74;;12982:6;12975:5;12968:21;13020:4;13013:5;13009:16;13058:3;13049:6;13044:3;13040:16;13037:25;13034:112;;;13065:79;;:::i;:::-;13034:112;13155:54;13202:6;13197:3;13192;13155:54;:::i;:::-;12875:340;12792:423;;;;;:::o;13234:338::-;13289:5;13338:3;13331:4;13323:6;13319:17;13315:27;13305:122;;13346:79;;:::i;:::-;13305:122;13463:6;13450:20;13488:78;13562:3;13554:6;13547:4;13539:6;13535:17;13488:78;:::i;:::-;13479:87;;13295:277;13234:338;;;;:::o;13578:797::-;13664:6;13672;13680;13729:2;13717:9;13708:7;13704:23;13700:32;13697:119;;;13735:79;;:::i;:::-;13697:119;13855:1;13880:53;13925:7;13916:6;13905:9;13901:22;13880:53;:::i;:::-;13870:63;;13826:117;13982:2;14008:53;14053:7;14044:6;14033:9;14029:22;14008:53;:::i;:::-;13998:63;;13953:118;14138:2;14127:9;14123:18;14110:32;14169:18;14161:6;14158:30;14155:117;;;14191:79;;:::i;:::-;14155:117;14296:62;14350:7;14341:6;14330:9;14326:22;14296:62;:::i;:::-;14286:72;;14081:287;13578:797;;;;;:::o;14381:311::-;14458:4;14548:18;14540:6;14537:30;14534:56;;;14570:18;;:::i;:::-;14534:56;14620:4;14612:6;14608:17;14600:25;;14680:4;14674;14670:15;14662:23;;14381:311;;;:::o;14698:117::-;14807:1;14804;14797:12;14838:710;14934:5;14959:81;14975:64;15032:6;14975:64;:::i;:::-;14959:81;:::i;:::-;14950:90;;15060:5;15089:6;15082:5;15075:21;15123:4;15116:5;15112:16;15105:23;;15176:4;15168:6;15164:17;15156:6;15152:30;15205:3;15197:6;15194:15;15191:122;;;15224:79;;:::i;:::-;15191:122;15339:6;15322:220;15356:6;15351:3;15348:15;15322:220;;;15431:3;15460:37;15493:3;15481:10;15460:37;:::i;:::-;15455:3;15448:50;15527:4;15522:3;15518:14;15511:21;;15398:144;15382:4;15377:3;15373:14;15366:21;;15322:220;;;15326:21;14940:608;;14838:710;;;;;:::o;15571:370::-;15642:5;15691:3;15684:4;15676:6;15672:17;15668:27;15658:122;;15699:79;;:::i;:::-;15658:122;15816:6;15803:20;15841:94;15931:3;15923:6;15916:4;15908:6;15904:17;15841:94;:::i;:::-;15832:103;;15648:293;15571:370;;;;:::o;15947:311::-;16024:4;16114:18;16106:6;16103:30;16100:56;;;16136:18;;:::i;:::-;16100:56;16186:4;16178:6;16174:17;16166:25;;16246:4;16240;16236:15;16228:23;;15947:311;;;:::o;16281:710::-;16377:5;16402:81;16418:64;16475:6;16418:64;:::i;:::-;16402:81;:::i;:::-;16393:90;;16503:5;16532:6;16525:5;16518:21;16566:4;16559:5;16555:16;16548:23;;16619:4;16611:6;16607:17;16599:6;16595:30;16648:3;16640:6;16637:15;16634:122;;;16667:79;;:::i;:::-;16634:122;16782:6;16765:220;16799:6;16794:3;16791:15;16765:220;;;16874:3;16903:37;16936:3;16924:10;16903:37;:::i;:::-;16898:3;16891:50;16970:4;16965:3;16961:14;16954:21;;16841:144;16825:4;16820:3;16816:14;16809:21;;16765:220;;;16769:21;16383:608;;16281:710;;;;;:::o;17014:370::-;17085:5;17134:3;17127:4;17119:6;17115:17;17111:27;17101:122;;17142:79;;:::i;:::-;17101:122;17259:6;17246:20;17284:94;17374:3;17366:6;17359:4;17351:6;17347:17;17284:94;:::i;:::-;17275:103;;17091:293;17014:370;;;;:::o;17390:308::-;17464:4;17554:18;17546:6;17543:30;17540:56;;;17576:18;;:::i;:::-;17540:56;17626:4;17618:6;17614:17;17606:25;;17686:4;17680;17676:15;17668:23;;17390:308;;;:::o;17704:116::-;17774:21;17789:5;17774:21;:::i;:::-;17767:5;17764:32;17754:60;;17810:1;17807;17800:12;17754:60;17704:116;:::o;17826:133::-;17869:5;17907:6;17894:20;17885:29;;17923:30;17947:5;17923:30;:::i;:::-;17826:133;;;;:::o;17979:701::-;18072:5;18097:78;18113:61;18167:6;18113:61;:::i;:::-;18097:78;:::i;:::-;18088:87;;18195:5;18224:6;18217:5;18210:21;18258:4;18251:5;18247:16;18240:23;;18311:4;18303:6;18299:17;18291:6;18287:30;18340:3;18332:6;18329:15;18326:122;;;18359:79;;:::i;:::-;18326:122;18474:6;18457:217;18491:6;18486:3;18483:15;18457:217;;;18566:3;18595:34;18625:3;18613:10;18595:34;:::i;:::-;18590:3;18583:47;18659:4;18654:3;18650:14;18643:21;;18533:141;18517:4;18512:3;18508:14;18501:21;;18457:217;;;18461:21;18078:602;;17979:701;;;;;:::o;18700:364::-;18768:5;18817:3;18810:4;18802:6;18798:17;18794:27;18784:122;;18825:79;;:::i;:::-;18784:122;18942:6;18929:20;18967:91;19054:3;19046:6;19039:4;19031:6;19027:17;18967:91;:::i;:::-;18958:100;;18774:290;18700:364;;;;:::o;19070:320::-;19156:4;19246:18;19238:6;19235:30;19232:56;;;19268:18;;:::i;:::-;19232:56;19318:4;19310:6;19306:17;19298:25;;19378:4;19372;19368:15;19360:23;;19070:320;;;:::o;19411:942::-;19516:5;19541:90;19557:73;19623:6;19557:73;:::i;:::-;19541:90;:::i;:::-;19532:99;;19651:5;19680:6;19673:5;19666:21;19714:4;19707:5;19703:16;19696:23;;19767:4;19759:6;19755:17;19747:6;19743:30;19796:3;19788:6;19785:15;19782:122;;;19815:79;;:::i;:::-;19782:122;19930:6;19913:434;19947:6;19942:3;19939:15;19913:434;;;20036:3;20023:17;20072:18;20059:11;20056:35;20053:122;;;20094:79;;:::i;:::-;20053:122;20218:11;20210:6;20206:24;20256:46;20298:3;20286:10;20256:46;:::i;:::-;20251:3;20244:59;20332:4;20327:3;20323:14;20316:21;;19989:358;;19973:4;19968:3;19964:14;19957:21;;19913:434;;;19917:21;19522:831;;19411:942;;;;;:::o;20374:388::-;20454:5;20503:3;20496:4;20488:6;20484:17;20480:27;20470:122;;20511:79;;:::i;:::-;20470:122;20628:6;20615:20;20653:103;20752:3;20744:6;20737:4;20729:6;20725:17;20653:103;:::i;:::-;20644:112;;20460:302;20374:388;;;;:::o;20768:1973::-;20994:6;21002;21010;21018;21026;21075:3;21063:9;21054:7;21050:23;21046:33;21043:120;;;21082:79;;:::i;:::-;21043:120;21230:1;21219:9;21215:17;21202:31;21260:18;21252:6;21249:30;21246:117;;;21282:79;;:::i;:::-;21246:117;21387:78;21457:7;21448:6;21437:9;21433:22;21387:78;:::i;:::-;21377:88;;21173:302;21542:2;21531:9;21527:18;21514:32;21573:18;21565:6;21562:30;21559:117;;;21595:79;;:::i;:::-;21559:117;21700:78;21770:7;21761:6;21750:9;21746:22;21700:78;:::i;:::-;21690:88;;21485:303;21855:2;21844:9;21840:18;21827:32;21886:18;21878:6;21875:30;21872:117;;;21908:79;;:::i;:::-;21872:117;22013:78;22083:7;22074:6;22063:9;22059:22;22013:78;:::i;:::-;22003:88;;21798:303;22168:2;22157:9;22153:18;22140:32;22199:18;22191:6;22188:30;22185:117;;;22221:79;;:::i;:::-;22185:117;22326:75;22393:7;22384:6;22373:9;22369:22;22326:75;:::i;:::-;22316:85;;22111:300;22478:3;22467:9;22463:19;22450:33;22510:18;22502:6;22499:30;22496:117;;;22532:79;;:::i;:::-;22496:117;22637:87;22716:7;22707:6;22696:9;22692:22;22637:87;:::i;:::-;22627:97;;22421:313;20768:1973;;;;;;;;:::o;22747:937::-;22839:6;22847;22855;22863;22912:3;22900:9;22891:7;22887:23;22883:33;22880:120;;;22919:79;;:::i;:::-;22880:120;23039:1;23064:53;23109:7;23100:6;23089:9;23085:22;23064:53;:::i;:::-;23054:63;;23010:117;23166:2;23192:53;23237:7;23228:6;23217:9;23213:22;23192:53;:::i;:::-;23182:63;;23137:118;23294:2;23320:50;23362:7;23353:6;23342:9;23338:22;23320:50;:::i;:::-;23310:60;;23265:115;23447:2;23436:9;23432:18;23419:32;23478:18;23470:6;23467:30;23464:117;;;23500:79;;:::i;:::-;23464:117;23605:62;23659:7;23650:6;23639:9;23635:22;23605:62;:::i;:::-;23595:72;;23390:287;22747:937;;;;;;;:::o;23690:86::-;23725:7;23765:4;23758:5;23754:16;23743:27;;23690:86;;;:::o;23782:112::-;23865:22;23881:5;23865:22;:::i;:::-;23860:3;23853:35;23782:112;;:::o;23900:214::-;23989:4;24027:2;24016:9;24012:18;24004:26;;24040:67;24104:1;24093:9;24089:17;24080:6;24040:67;:::i;:::-;23900:214;;;;:::o;24120:329::-;24179:6;24228:2;24216:9;24207:7;24203:23;24199:32;24196:119;;;24234:79;;:::i;:::-;24196:119;24354:1;24379:53;24424:7;24415:6;24404:9;24400:22;24379:53;:::i;:::-;24369:63;;24325:117;24120:329;;;;:::o;24455:118::-;24542:24;24560:5;24542:24;:::i;:::-;24537:3;24530:37;24455:118;;:::o;24579:169::-;24663:11;24697:6;24692:3;24685:19;24737:4;24732:3;24728:14;24713:29;;24579:169;;;;:::o;24754:377::-;24842:3;24870:39;24903:5;24870:39;:::i;:::-;24925:71;24989:6;24984:3;24925:71;:::i;:::-;24918:78;;25005:65;25063:6;25058:3;25051:4;25044:5;25040:16;25005:65;:::i;:::-;25095:29;25117:6;25095:29;:::i;:::-;25090:3;25086:39;25079:46;;24846:285;24754:377;;;;:::o;25137:723::-;25348:4;25386:3;25375:9;25371:19;25363:27;;25400:71;25468:1;25457:9;25453:17;25444:6;25400:71;:::i;:::-;25518:9;25512:4;25508:20;25503:2;25492:9;25488:18;25481:48;25546:78;25619:4;25610:6;25546:78;:::i;:::-;25538:86;;25671:9;25665:4;25661:20;25656:2;25645:9;25641:18;25634:48;25699:78;25772:4;25763:6;25699:78;:::i;:::-;25691:86;;25787:66;25849:2;25838:9;25834:18;25825:6;25787:66;:::i;:::-;25137:723;;;;;;;:::o;25866:654::-;25944:6;25952;26001:2;25989:9;25980:7;25976:23;25972:32;25969:119;;;26007:79;;:::i;:::-;25969:119;26127:1;26152:53;26197:7;26188:6;26177:9;26173:22;26152:53;:::i;:::-;26142:63;;26098:117;26282:2;26271:9;26267:18;26254:32;26313:18;26305:6;26302:30;26299:117;;;26335:79;;:::i;:::-;26299:117;26440:63;26495:7;26486:6;26475:9;26471:22;26440:63;:::i;:::-;26430:73;;26225:288;25866:654;;;;;:::o;26526:77::-;26563:7;26592:5;26581:16;;26526:77;;;:::o;26609:122::-;26682:24;26700:5;26682:24;:::i;:::-;26675:5;26672:35;26662:63;;26721:1;26718;26711:12;26662:63;26609:122;:::o;26737:139::-;26783:5;26821:6;26808:20;26799:29;;26837:33;26864:5;26837:33;:::i;:::-;26737:139;;;;:::o;26882:329::-;26941:6;26990:2;26978:9;26969:7;26965:23;26961:32;26958:119;;;26996:79;;:::i;:::-;26958:119;27116:1;27141:53;27186:7;27177:6;27166:9;27162:22;27141:53;:::i;:::-;27131:63;;27087:117;26882:329;;;;:::o;27217:98::-;27268:6;27302:5;27296:12;27286:22;;27217:98;;;:::o;27321:373::-;27407:3;27435:38;27467:5;27435:38;:::i;:::-;27489:70;27552:6;27547:3;27489:70;:::i;:::-;27482:77;;27568:65;27626:6;27621:3;27614:4;27607:5;27603:16;27568:65;:::i;:::-;27658:29;27680:6;27658:29;:::i;:::-;27653:3;27649:39;27642:46;;27411:283;27321:373;;;;:::o;27700:309::-;27811:4;27849:2;27838:9;27834:18;27826:26;;27898:9;27892:4;27888:20;27884:1;27873:9;27869:17;27862:47;27926:76;27997:4;27988:6;27926:76;:::i;:::-;27918:84;;27700:309;;;;:::o;28015:474::-;28083:6;28091;28140:2;28128:9;28119:7;28115:23;28111:32;28108:119;;;28146:79;;:::i;:::-;28108:119;28266:1;28291:53;28336:7;28327:6;28316:9;28312:22;28291:53;:::i;:::-;28281:63;;28237:117;28393:2;28419:53;28464:7;28455:6;28444:9;28440:22;28419:53;:::i;:::-;28409:63;;28364:118;28015:474;;;;;:::o;28495:117::-;28604:1;28601;28594:12;28633:579;28717:8;28727:6;28777:3;28770:4;28762:6;28758:17;28754:27;28744:122;;28785:79;;:::i;:::-;28744:122;28898:6;28885:20;28875:30;;28928:18;28920:6;28917:30;28914:117;;;28950:79;;:::i;:::-;28914:117;29064:4;29056:6;29052:17;29040:29;;29118:3;29110:4;29102:6;29098:17;29088:8;29084:32;29081:41;29078:128;;;29125:79;;:::i;:::-;29078:128;28633:579;;;;;:::o;29218:581::-;29315:6;29323;29372:2;29360:9;29351:7;29347:23;29343:32;29340:119;;;29378:79;;:::i;:::-;29340:119;29526:1;29515:9;29511:17;29498:31;29556:18;29548:6;29545:30;29542:117;;;29578:79;;:::i;:::-;29542:117;29691:91;29774:7;29765:6;29754:9;29750:22;29691:91;:::i;:::-;29673:109;;;;29469:323;29218:581;;;;;:::o;29805:123::-;29881:6;29915:5;29909:12;29899:22;;29805:123;;;:::o;29934:193::-;30042:11;30076:6;30071:3;30064:19;30116:4;30111:3;30107:14;30092:29;;29934:193;;;;:::o;30133:141::-;30209:4;30232:3;30224:11;;30262:4;30257:3;30253:14;30245:22;;30133:141;;;:::o;30280:158::-;30353:11;30387:6;30382:3;30375:19;30427:4;30422:3;30418:14;30403:29;;30280:158;;;;:::o;30444:353::-;30520:3;30548:38;30580:5;30548:38;:::i;:::-;30602:60;30655:6;30650:3;30602:60;:::i;:::-;30595:67;;30671:65;30729:6;30724:3;30717:4;30710:5;30706:16;30671:65;:::i;:::-;30761:29;30783:6;30761:29;:::i;:::-;30756:3;30752:39;30745:46;;30524:273;30444:353;;;;:::o;30803:192::-;30890:10;30925:64;30985:3;30977:6;30925:64;:::i;:::-;30911:78;;30803:192;;;;:::o;31001:122::-;31080:4;31112;31107:3;31103:14;31095:22;;31001:122;;;:::o;31155:983::-;31292:3;31321:63;31378:5;31321:63;:::i;:::-;31400:95;31488:6;31483:3;31400:95;:::i;:::-;31393:102;;31521:3;31566:4;31558:6;31554:17;31549:3;31545:27;31596:65;31655:5;31596:65;:::i;:::-;31684:7;31715:1;31700:393;31725:6;31722:1;31719:13;31700:393;;;31796:9;31790:4;31786:20;31781:3;31774:33;31847:6;31841:13;31875:82;31952:4;31937:13;31875:82;:::i;:::-;31867:90;;31980:69;32042:6;31980:69;:::i;:::-;31970:79;;32078:4;32073:3;32069:14;32062:21;;31760:333;31747:1;31744;31740:9;31735:14;;31700:393;;;31704:14;32109:4;32102:11;;32129:3;32122:10;;31297:841;;;;;31155:983;;;;:::o;32144:409::-;32305:4;32343:2;32332:9;32328:18;32320:26;;32392:9;32386:4;32382:20;32378:1;32367:9;32363:17;32356:47;32420:126;32541:4;32532:6;32420:126;:::i;:::-;32412:134;;32144:409;;;;:::o;32559:1083::-;32660:6;32668;32676;32684;32692;32741:3;32729:9;32720:7;32716:23;32712:33;32709:120;;;32748:79;;:::i;:::-;32709:120;32868:1;32893:53;32938:7;32929:6;32918:9;32914:22;32893:53;:::i;:::-;32883:63;;32839:117;32995:2;33021:53;33066:7;33057:6;33046:9;33042:22;33021:53;:::i;:::-;33011:63;;32966:118;33123:2;33149:53;33194:7;33185:6;33174:9;33170:22;33149:53;:::i;:::-;33139:63;;33094:118;33251:2;33277:50;33319:7;33310:6;33299:9;33295:22;33277:50;:::i;:::-;33267:60;;33222:115;33404:3;33393:9;33389:19;33376:33;33436:18;33428:6;33425:30;33422:117;;;33458:79;;:::i;:::-;33422:117;33563:62;33617:7;33608:6;33597:9;33593:22;33563:62;:::i;:::-;33553:72;;33347:288;32559:1083;;;;;;;;:::o;33648:943::-;33743:6;33751;33759;33767;33816:3;33804:9;33795:7;33791:23;33787:33;33784:120;;;33823:79;;:::i;:::-;33784:120;33943:1;33968:53;34013:7;34004:6;33993:9;33989:22;33968:53;:::i;:::-;33958:63;;33914:117;34070:2;34096:53;34141:7;34132:6;34121:9;34117:22;34096:53;:::i;:::-;34086:63;;34041:118;34198:2;34224:53;34269:7;34260:6;34249:9;34245:22;34224:53;:::i;:::-;34214:63;;34169:118;34354:2;34343:9;34339:18;34326:32;34385:18;34377:6;34374:30;34371:117;;;34407:79;;:::i;:::-;34371:117;34512:62;34566:7;34557:6;34546:9;34542:22;34512:62;:::i;:::-;34502:72;;34297:287;33648:943;;;;;;;:::o;34597:652::-;34674:6;34682;34731:2;34719:9;34710:7;34706:23;34702:32;34699:119;;;34737:79;;:::i;:::-;34699:119;34857:1;34882:53;34927:7;34918:6;34907:9;34903:22;34882:53;:::i;:::-;34872:63;;34828:117;35012:2;35001:9;34997:18;34984:32;35043:18;35035:6;35032:30;35029:117;;;35065:79;;:::i;:::-;35029:117;35170:62;35224:7;35215:6;35204:9;35200:22;35170:62;:::i;:::-;35160:72;;34955:287;34597:652;;;;;:::o;35255:222::-;35348:4;35386:2;35375:9;35371:18;35363:26;;35399:71;35467:1;35456:9;35452:17;35443:6;35399:71;:::i;:::-;35255:222;;;;:::o;35483:311::-;35560:4;35650:18;35642:6;35639:30;35636:56;;;35672:18;;:::i;:::-;35636:56;35722:4;35714:6;35710:17;35702:25;;35782:4;35776;35772:15;35764:23;;35483:311;;;:::o;35817:710::-;35913:5;35938:81;35954:64;36011:6;35954:64;:::i;:::-;35938:81;:::i;:::-;35929:90;;36039:5;36068:6;36061:5;36054:21;36102:4;36095:5;36091:16;36084:23;;36155:4;36147:6;36143:17;36135:6;36131:30;36184:3;36176:6;36173:15;36170:122;;;36203:79;;:::i;:::-;36170:122;36318:6;36301:220;36335:6;36330:3;36327:15;36301:220;;;36410:3;36439:37;36472:3;36460:10;36439:37;:::i;:::-;36434:3;36427:50;36506:4;36501:3;36497:14;36490:21;;36377:144;36361:4;36356:3;36352:14;36345:21;;36301:220;;;36305:21;35919:608;;35817:710;;;;;:::o;36550:370::-;36621:5;36670:3;36663:4;36655:6;36651:17;36647:27;36637:122;;36678:79;;:::i;:::-;36637:122;36795:6;36782:20;36820:94;36910:3;36902:6;36895:4;36887:6;36883:17;36820:94;:::i;:::-;36811:103;;36627:293;36550:370;;;;:::o;36926:912::-;37053:6;37061;37110:2;37098:9;37089:7;37085:23;37081:32;37078:119;;;37116:79;;:::i;:::-;37078:119;37264:1;37253:9;37249:17;37236:31;37294:18;37286:6;37283:30;37280:117;;;37316:79;;:::i;:::-;37280:117;37421:78;37491:7;37482:6;37471:9;37467:22;37421:78;:::i;:::-;37411:88;;37207:302;37576:2;37565:9;37561:18;37548:32;37607:18;37599:6;37596:30;37593:117;;;37629:79;;:::i;:::-;37593:117;37734:87;37813:7;37804:6;37793:9;37789:22;37734:87;:::i;:::-;37724:97;;37519:312;36926:912;;;;;:::o;37844:114::-;37911:6;37945:5;37939:12;37929:22;;37844:114;;;:::o;37964:184::-;38063:11;38097:6;38092:3;38085:19;38137:4;38132:3;38128:14;38113:29;;37964:184;;;;:::o;38154:132::-;38221:4;38244:3;38236:11;;38274:4;38269:3;38265:14;38257:22;;38154:132;;;:::o;38292:179::-;38361:10;38382:46;38424:3;38416:6;38382:46;:::i;:::-;38460:4;38455:3;38451:14;38437:28;;38292:179;;;;:::o;38477:113::-;38547:4;38579;38574:3;38570:14;38562:22;;38477:113;;;:::o;38626:732::-;38745:3;38774:54;38822:5;38774:54;:::i;:::-;38844:86;38923:6;38918:3;38844:86;:::i;:::-;38837:93;;38954:56;39004:5;38954:56;:::i;:::-;39033:7;39064:1;39049:284;39074:6;39071:1;39068:13;39049:284;;;39150:6;39144:13;39177:63;39236:3;39221:13;39177:63;:::i;:::-;39170:70;;39263:60;39316:6;39263:60;:::i;:::-;39253:70;;39109:224;39096:1;39093;39089:9;39084:14;;39049:284;;;39053:14;39349:3;39342:10;;38750:608;;;38626:732;;;;:::o;39364:373::-;39507:4;39545:2;39534:9;39530:18;39522:26;;39594:9;39588:4;39584:20;39580:1;39569:9;39565:17;39558:47;39622:108;39725:4;39716:6;39622:108;:::i;:::-;39614:116;;39364:373;;;;:::o;39743:539::-;39827:6;39876:2;39864:9;39855:7;39851:23;39847:32;39844:119;;;39882:79;;:::i;:::-;39844:119;40030:1;40019:9;40015:17;40002:31;40060:18;40052:6;40049:30;40046:117;;;40082:79;;:::i;:::-;40046:117;40187:78;40257:7;40248:6;40237:9;40233:22;40187:78;:::i;:::-;40177:88;;39973:302;39743:539;;;;:::o;40288:115::-;40373:23;40390:5;40373:23;:::i;:::-;40368:3;40361:36;40288:115;;:::o;40409:218::-;40500:4;40538:2;40527:9;40523:18;40515:26;;40551:69;40617:1;40606:9;40602:17;40593:6;40551:69;:::i;:::-;40409:218;;;;:::o;40633:147::-;40734:11;40771:3;40756:18;;40633:147;;;;:::o;40808:327::-;40922:3;40943:88;41024:6;41019:3;40943:88;:::i;:::-;40936:95;;41041:56;41090:6;41085:3;41078:5;41041:56;:::i;:::-;41122:6;41117:3;41113:16;41106:23;;40808:327;;;;;:::o;41141:94::-;41174:8;41222:5;41218:2;41214:14;41193:35;;41141:94;;;:::o;41241:::-;41280:7;41309:20;41323:5;41309:20;:::i;:::-;41298:31;;41241:94;;;:::o;41341:100::-;41380:7;41409:26;41429:5;41409:26;:::i;:::-;41398:37;;41341:100;;;:::o;41447:157::-;41552:45;41572:24;41590:5;41572:24;:::i;:::-;41552:45;:::i;:::-;41547:3;41540:58;41447:157;;:::o;41610:79::-;41649:7;41678:5;41667:16;;41610:79;;;:::o;41695:157::-;41800:45;41820:24;41838:5;41820:24;:::i;:::-;41800:45;:::i;:::-;41795:3;41788:58;41695:157;;:::o;41858:573::-;42054:3;42076:103;42175:3;42166:6;42158;42076:103;:::i;:::-;42069:110;;42189:75;42260:3;42251:6;42189:75;:::i;:::-;42289:2;42284:3;42280:12;42273:19;;42302:75;42373:3;42364:6;42302:75;:::i;:::-;42402:2;42397:3;42393:12;42386:19;;42422:3;42415:10;;41858:573;;;;;;;:::o;42437:386::-;42541:3;42569:38;42601:5;42569:38;:::i;:::-;42623:88;42704:6;42699:3;42623:88;:::i;:::-;42616:95;;42720:65;42778:6;42773:3;42766:4;42759:5;42755:16;42720:65;:::i;:::-;42810:6;42805:3;42801:16;42794:23;;42545:278;42437:386;;;;:::o;42829:271::-;42959:3;42981:93;43070:3;43061:6;42981:93;:::i;:::-;42974:100;;43091:3;43084:10;;42829:271;;;;:::o;43106:224::-;43246:34;43242:1;43234:6;43230:14;43223:58;43315:7;43310:2;43302:6;43298:15;43291:32;43106:224;:::o;43336:366::-;43478:3;43499:67;43563:2;43558:3;43499:67;:::i;:::-;43492:74;;43575:93;43664:3;43575:93;:::i;:::-;43693:2;43688:3;43684:12;43677:19;;43336:366;;;:::o;43708:419::-;43874:4;43912:2;43901:9;43897:18;43889:26;;43961:9;43955:4;43951:20;43947:1;43936:9;43932:17;43925:47;43989:131;44115:4;43989:131;:::i;:::-;43981:139;;43708:419;;;:::o;44133:180::-;44181:77;44178:1;44171:88;44278:4;44275:1;44268:15;44302:4;44299:1;44292:15;44319:233;44358:3;44381:24;44399:5;44381:24;:::i;:::-;44372:33;;44427:66;44420:5;44417:77;44414:103;;44497:18;;:::i;:::-;44414:103;44544:1;44537:5;44533:13;44526:20;;44319:233;;;:::o;44558:180::-;44606:77;44603:1;44596:88;44703:4;44700:1;44693:15;44727:4;44724:1;44717:15;44744:320;44788:6;44825:1;44819:4;44815:12;44805:22;;44872:1;44866:4;44862:12;44893:18;44883:81;;44949:4;44941:6;44937:17;44927:27;;44883:81;45011:2;45003:6;45000:14;44980:18;44977:38;44974:84;;45030:18;;:::i;:::-;44974:84;44795:269;44744:320;;;:::o;45070:141::-;45119:4;45142:3;45134:11;;45165:3;45162:1;45155:14;45199:4;45196:1;45186:18;45178:26;;45070:141;;;:::o;45217:93::-;45254:6;45301:2;45296;45289:5;45285:14;45281:23;45271:33;;45217:93;;;:::o;45316:107::-;45360:8;45410:5;45404:4;45400:16;45379:37;;45316:107;;;;:::o;45429:393::-;45498:6;45548:1;45536:10;45532:18;45571:97;45601:66;45590:9;45571:97;:::i;:::-;45689:39;45719:8;45708:9;45689:39;:::i;:::-;45677:51;;45761:4;45757:9;45750:5;45746:21;45737:30;;45810:4;45800:8;45796:19;45789:5;45786:30;45776:40;;45505:317;;45429:393;;;;;:::o;45828:60::-;45856:3;45877:5;45870:12;;45828:60;;;:::o;45894:142::-;45944:9;45977:53;45995:34;46004:24;46022:5;46004:24;:::i;:::-;45995:34;:::i;:::-;45977:53;:::i;:::-;45964:66;;45894:142;;;:::o;46042:75::-;46085:3;46106:5;46099:12;;46042:75;;;:::o;46123:269::-;46233:39;46264:7;46233:39;:::i;:::-;46294:91;46343:41;46367:16;46343:41;:::i;:::-;46335:6;46328:4;46322:11;46294:91;:::i;:::-;46288:4;46281:105;46199:193;46123:269;;;:::o;46398:73::-;46443:3;46398:73;:::o;46477:189::-;46554:32;;:::i;:::-;46595:65;46653:6;46645;46639:4;46595:65;:::i;:::-;46530:136;46477:189;;:::o;46672:186::-;46732:120;46749:3;46742:5;46739:14;46732:120;;;46803:39;46840:1;46833:5;46803:39;:::i;:::-;46776:1;46769:5;46765:13;46756:22;;46732:120;;;46672:186;;:::o;46864:543::-;46965:2;46960:3;46957:11;46954:446;;;46999:38;47031:5;46999:38;:::i;:::-;47083:29;47101:10;47083:29;:::i;:::-;47073:8;47069:44;47266:2;47254:10;47251:18;47248:49;;;47287:8;47272:23;;47248:49;47310:80;47366:22;47384:3;47366:22;:::i;:::-;47356:8;47352:37;47339:11;47310:80;:::i;:::-;46969:431;;46954:446;46864:543;;;:::o;47413:117::-;47467:8;47517:5;47511:4;47507:16;47486:37;;47413:117;;;;:::o;47536:169::-;47580:6;47613:51;47661:1;47657:6;47649:5;47646:1;47642:13;47613:51;:::i;:::-;47609:56;47694:4;47688;47684:15;47674:25;;47587:118;47536:169;;;;:::o;47710:295::-;47786:4;47932:29;47957:3;47951:4;47932:29;:::i;:::-;47924:37;;47994:3;47991:1;47987:11;47981:4;47978:21;47970:29;;47710:295;;;;:::o;48010:1395::-;48127:37;48160:3;48127:37;:::i;:::-;48229:18;48221:6;48218:30;48215:56;;;48251:18;;:::i;:::-;48215:56;48295:38;48327:4;48321:11;48295:38;:::i;:::-;48380:67;48440:6;48432;48426:4;48380:67;:::i;:::-;48474:1;48498:4;48485:17;;48530:2;48522:6;48519:14;48547:1;48542:618;;;;49204:1;49221:6;49218:77;;;49270:9;49265:3;49261:19;49255:26;49246:35;;49218:77;49321:67;49381:6;49374:5;49321:67;:::i;:::-;49315:4;49308:81;49177:222;48512:887;;48542:618;48594:4;48590:9;48582:6;48578:22;48628:37;48660:4;48628:37;:::i;:::-;48687:1;48701:208;48715:7;48712:1;48709:14;48701:208;;;48794:9;48789:3;48785:19;48779:26;48771:6;48764:42;48845:1;48837:6;48833:14;48823:24;;48892:2;48881:9;48877:18;48864:31;;48738:4;48735:1;48731:12;48726:17;;48701:208;;;48937:6;48928:7;48925:19;48922:179;;;48995:9;48990:3;48986:19;48980:26;49038:48;49080:4;49072:6;49068:17;49057:9;49038:48;:::i;:::-;49030:6;49023:64;48945:156;48922:179;49147:1;49143;49135:6;49131:14;49127:22;49121:4;49114:36;48549:611;;;48512:887;;48102:1303;;;48010:1395;;:::o;49411:194::-;49451:4;49471:20;49489:1;49471:20;:::i;:::-;49466:25;;49505:20;49523:1;49505:20;:::i;:::-;49500:25;;49549:1;49546;49542:9;49534:17;;49573:1;49567:4;49564:11;49561:37;;;49578:18;;:::i;:::-;49561:37;49411:194;;;;:::o;49611:180::-;49659:77;49656:1;49649:88;49756:4;49753:1;49746:15;49780:4;49777:1;49770:15;49797:191;49837:3;49856:20;49874:1;49856:20;:::i;:::-;49851:25;;49890:20;49908:1;49890:20;:::i;:::-;49885:25;;49933:1;49930;49926:9;49919:16;;49954:3;49951:1;49948:10;49945:36;;;49961:18;;:::i;:::-;49945:36;49797:191;;;;:::o;49994:529::-;50161:4;50199:2;50188:9;50184:18;50176:26;;50212:71;50280:1;50269:9;50265:17;50256:6;50212:71;:::i;:::-;50293:72;50361:2;50350:9;50346:18;50337:6;50293:72;:::i;:::-;50412:9;50406:4;50402:20;50397:2;50386:9;50382:18;50375:48;50440:76;50511:4;50502:6;50440:76;:::i;:::-;50432:84;;49994:529;;;;;;:::o;50529:442::-;50678:4;50716:2;50705:9;50701:18;50693:26;;50729:71;50797:1;50786:9;50782:17;50773:6;50729:71;:::i;:::-;50810:72;50878:2;50867:9;50863:18;50854:6;50810:72;:::i;:::-;50892;50960:2;50949:9;50945:18;50936:6;50892:72;:::i;:::-;50529:442;;;;;;:::o;50977:85::-;51022:7;51051:5;51040:16;;50977:85;;;:::o;51068:154::-;51124:9;51157:59;51173:42;51182:32;51208:5;51182:32;:::i;:::-;51173:42;:::i;:::-;51157:59;:::i;:::-;51144:72;;51068:154;;;:::o;51228:143::-;51321:43;51358:5;51321:43;:::i;:::-;51316:3;51309:56;51228:143;;:::o;51377:541::-;51550:4;51588:2;51577:9;51573:18;51565:26;;51601:71;51669:1;51658:9;51654:17;51645:6;51601:71;:::i;:::-;51682:78;51756:2;51745:9;51741:18;51732:6;51682:78;:::i;:::-;51807:9;51801:4;51797:20;51792:2;51781:9;51777:18;51770:48;51835:76;51906:4;51897:6;51835:76;:::i;:::-;51827:84;;51377:541;;;;;;:::o;51924:230::-;52064:34;52060:1;52052:6;52048:14;52041:58;52133:13;52128:2;52120:6;52116:15;52109:38;51924:230;:::o;52160:366::-;52302:3;52323:67;52387:2;52382:3;52323:67;:::i;:::-;52316:74;;52399:93;52488:3;52399:93;:::i;:::-;52517:2;52512:3;52508:12;52501:19;;52160:366;;;:::o;52532:419::-;52698:4;52736:2;52725:9;52721:18;52713:26;;52785:9;52779:4;52775:20;52771:1;52760:9;52756:17;52749:47;52813:131;52939:4;52813:131;:::i;:::-;52805:139;;52532:419;;;:::o;52957:169::-;53097:21;53093:1;53085:6;53081:14;53074:45;52957:169;:::o;53132:366::-;53274:3;53295:67;53359:2;53354:3;53295:67;:::i;:::-;53288:74;;53371:93;53460:3;53371:93;:::i;:::-;53489:2;53484:3;53480:12;53473:19;;53132:366;;;:::o;53504:419::-;53670:4;53708:2;53697:9;53693:18;53685:26;;53757:9;53751:4;53747:20;53743:1;53732:9;53728:17;53721:47;53785:131;53911:4;53785:131;:::i;:::-;53777:139;;53504:419;;;:::o;53929:117::-;54038:1;54035;54028:12;54052:117;54161:1;54158;54151:12;54175:117;54284:1;54281;54274:12;54298:724;54375:4;54381:6;54437:11;54424:25;54537:1;54531:4;54527:12;54516:8;54500:14;54496:29;54492:48;54472:18;54468:73;54458:168;;54545:79;;:::i;:::-;54458:168;54657:18;54647:8;54643:33;54635:41;;54709:4;54696:18;54686:28;;54737:18;54729:6;54726:30;54723:117;;;54759:79;;:::i;:::-;54723:117;54867:2;54861:4;54857:13;54849:21;;54924:4;54916:6;54912:17;54896:14;54892:38;54886:4;54882:49;54879:136;;;54934:79;;:::i;:::-;54879:136;54388:634;54298:724;;;;;:::o;55028:291::-;55168:3;55190:103;55289:3;55280:6;55272;55190:103;:::i;:::-;55183:110;;55310:3;55303:10;;55028:291;;;;;:::o;55325:178::-;55465:30;55461:1;55453:6;55449:14;55442:54;55325:178;:::o;55509:366::-;55651:3;55672:67;55736:2;55731:3;55672:67;:::i;:::-;55665:74;;55748:93;55837:3;55748:93;:::i;:::-;55866:2;55861:3;55857:12;55850:19;;55509:366;;;:::o;55881:419::-;56047:4;56085:2;56074:9;56070:18;56062:26;;56134:9;56128:4;56124:20;56120:1;56109:9;56105:17;56098:47;56162:131;56288:4;56162:131;:::i;:::-;56154:139;;55881:419;;;:::o;56306:225::-;56446:34;56442:1;56434:6;56430:14;56423:58;56515:8;56510:2;56502:6;56498:15;56491:33;56306:225;:::o;56537:366::-;56679:3;56700:67;56764:2;56759:3;56700:67;:::i;:::-;56693:74;;56776:93;56865:3;56776:93;:::i;:::-;56894:2;56889:3;56885:12;56878:19;;56537:366;;;:::o;56909:419::-;57075:4;57113:2;57102:9;57098:18;57090:26;;57162:9;57156:4;57152:20;57148:1;57137:9;57133:17;57126:47;57190:131;57316:4;57190:131;:::i;:::-;57182:139;;56909:419;;;:::o;57334:116::-;57385:4;57408:3;57400:11;;57438:4;57433:3;57429:14;57421:22;;57334:116;;;:::o;57456:150::-;57493:7;57533:66;57526:5;57522:78;57511:89;;57456:150;;;:::o;57612:154::-;57655:11;57691:29;57715:3;57709:10;57691:29;:::i;:::-;57754:5;57730:29;;57667:99;57612:154;;;:::o;57772:594::-;57856:5;57887:38;57919:5;57887:38;:::i;:::-;57950:5;57977:40;58011:5;57977:40;:::i;:::-;57965:52;;58036:35;58062:8;58036:35;:::i;:::-;58027:44;;58095:2;58087:6;58084:14;58081:278;;;58166:169;58251:66;58221:6;58217:2;58213:15;58210:1;58206:23;58166:169;:::i;:::-;58143:5;58122:227;58113:236;;58081:278;57862:504;;57772:594;;;:::o;58372:751::-;58595:4;58633:3;58622:9;58618:19;58610:27;;58647:71;58715:1;58704:9;58700:17;58691:6;58647:71;:::i;:::-;58728:72;58796:2;58785:9;58781:18;58772:6;58728:72;:::i;:::-;58810;58878:2;58867:9;58863:18;58854:6;58810:72;:::i;:::-;58892;58960:2;58949:9;58945:18;58936:6;58892:72;:::i;:::-;59012:9;59006:4;59002:20;58996:3;58985:9;58981:19;58974:49;59040:76;59111:4;59102:6;59040:76;:::i;:::-;59032:84;;58372:751;;;;;;;;:::o;59129:182::-;59269:34;59265:1;59257:6;59253:14;59246:58;59129:182;:::o;59317:366::-;59459:3;59480:67;59544:2;59539:3;59480:67;:::i;:::-;59473:74;;59556:93;59645:3;59556:93;:::i;:::-;59674:2;59669:3;59665:12;59658:19;;59317:366;;;:::o;59689:419::-;59855:4;59893:2;59882:9;59878:18;59870:26;;59942:9;59936:4;59932:20;59928:1;59917:9;59913:17;59906:47;59970:131;60096:4;59970:131;:::i;:::-;59962:139;;59689:419;;;:::o;60114:553::-;60291:4;60329:3;60318:9;60314:19;60306:27;;60343:71;60411:1;60400:9;60396:17;60387:6;60343:71;:::i;:::-;60424:72;60492:2;60481:9;60477:18;60468:6;60424:72;:::i;:::-;60506;60574:2;60563:9;60559:18;60550:6;60506:72;:::i;:::-;60588;60656:2;60645:9;60641:18;60632:6;60588:72;:::i;:::-;60114:553;;;;;;;:::o;60673:140::-;60721:4;60744:3;60736:11;;60767:3;60764:1;60757:14;60801:4;60798:1;60788:18;60780:26;;60673:140;;;:::o;60819:541::-;60919:2;60914:3;60911:11;60908:445;;;60953:37;60984:5;60953:37;:::i;:::-;61036:29;61054:10;61036:29;:::i;:::-;61026:8;61022:44;61219:2;61207:10;61204:18;61201:49;;;61240:8;61225:23;;61201:49;61263:80;61319:22;61337:3;61319:22;:::i;:::-;61309:8;61305:37;61292:11;61263:80;:::i;:::-;60923:430;;60908:445;60819:541;;;:::o;61366:1390::-;61481:36;61513:3;61481:36;:::i;:::-;61582:18;61574:6;61571:30;61568:56;;;61604:18;;:::i;:::-;61568:56;61648:38;61680:4;61674:11;61648:38;:::i;:::-;61733:66;61792:6;61784;61778:4;61733:66;:::i;:::-;61826:1;61850:4;61837:17;;61882:2;61874:6;61871:14;61899:1;61894:617;;;;62555:1;62572:6;62569:77;;;62621:9;62616:3;62612:19;62606:26;62597:35;;62569:77;62672:67;62732:6;62725:5;62672:67;:::i;:::-;62666:4;62659:81;62528:222;61864:886;;61894:617;61946:4;61942:9;61934:6;61930:22;61980:36;62011:4;61980:36;:::i;:::-;62038:1;62052:208;62066:7;62063:1;62060:14;62052:208;;;62145:9;62140:3;62136:19;62130:26;62122:6;62115:42;62196:1;62188:6;62184:14;62174:24;;62243:2;62232:9;62228:18;62215:31;;62089:4;62086:1;62082:12;62077:17;;62052:208;;;62288:6;62279:7;62276:19;62273:179;;;62346:9;62341:3;62337:19;62331:26;62389:48;62431:4;62423:6;62419:17;62408:9;62389:48;:::i;:::-;62381:6;62374:64;62296:156;62273:179;62498:1;62494;62486:6;62482:14;62478:22;62472:4;62465:36;61901:610;;;61864:886;;61456:1300;;;61366:1390;;:::o;62762:150::-;62799:7;62839:66;62832:5;62828:78;62817:89;;62762:150;;;:::o;62918:79::-;62957:7;62986:5;62975:16;;62918:79;;;:::o;63003:157::-;63108:45;63128:24;63146:5;63128:24;:::i;:::-;63108:45;:::i;:::-;63103:3;63096:58;63003:157;;:::o;63166:149::-;63202:7;63242:66;63235:5;63231:78;63220:89;;63166:149;;;:::o;63321:78::-;63359:7;63388:5;63377:16;;63321:78;;;:::o;63405:153::-;63508:43;63527:23;63544:5;63527:23;:::i;:::-;63508:43;:::i;:::-;63503:3;63496:56;63405:153;;:::o;63564:79::-;63603:7;63632:5;63621:16;;63564:79;;;:::o;63649:157::-;63754:45;63774:24;63792:5;63774:24;:::i;:::-;63754:45;:::i;:::-;63749:3;63742:58;63649:157;;:::o;63812:533::-;63978:3;63993:75;64064:3;64055:6;63993:75;:::i;:::-;64093:2;64088:3;64084:12;64077:19;;64106:73;64175:3;64166:6;64106:73;:::i;:::-;64204:1;64199:3;64195:11;64188:18;;64216:75;64287:3;64278:6;64216:75;:::i;:::-;64316:2;64311:3;64307:12;64300:19;;64336:3;64329:10;;63812:533;;;;;;:::o;64351:154::-;64394:11;64430:29;64454:3;64448:10;64430:29;:::i;:::-;64493:5;64469:29;;64406:99;64351:154;;;:::o;64511:594::-;64595:5;64626:38;64658:5;64626:38;:::i;:::-;64689:5;64716:40;64750:5;64716:40;:::i;:::-;64704:52;;64775:35;64801:8;64775:35;:::i;:::-;64766:44;;64834:2;64826:6;64823:14;64820:278;;;64905:169;64990:66;64960:6;64956:2;64952:15;64949:1;64945:23;64905:169;:::i;:::-;64882:5;64861:227;64852:236;;64820:278;64601:504;;64511:594;;;:::o;65111:442::-;65260:4;65298:2;65287:9;65283:18;65275:26;;65311:71;65379:1;65368:9;65364:17;65355:6;65311:71;:::i;:::-;65392:72;65460:2;65449:9;65445:18;65436:6;65392:72;:::i;:::-;65474;65542:2;65531:9;65527:18;65518:6;65474:72;:::i;:::-;65111:442;;;;;;:::o;65559:517::-;65720:4;65758:2;65747:9;65743:18;65735:26;;65771:71;65839:1;65828:9;65824:17;65815:6;65771:71;:::i;:::-;65852:66;65914:2;65903:9;65899:18;65890:6;65852:66;:::i;:::-;65965:9;65959:4;65955:20;65950:2;65939:9;65935:18;65928:48;65993:76;66064:4;66055:6;65993:76;:::i;:::-;65985:84;;65559:517;;;;;;:::o;66082:118::-;66169:24;66187:5;66169:24;:::i;:::-;66164:3;66157:37;66082:118;;:::o;66206:419::-;66345:4;66383:2;66372:9;66368:18;66360:26;;66396:71;66464:1;66453:9;66449:17;66440:6;66396:71;:::i;:::-;66514:9;66508:4;66504:20;66499:2;66488:9;66484:18;66477:48;66542:76;66613:4;66604:6;66542:76;:::i;:::-;66534:84;;66206:419;;;;;:::o;66631:432::-;66719:5;66744:65;66760:48;66801:6;66760:48;:::i;:::-;66744:65;:::i;:::-;66735:74;;66832:6;66825:5;66818:21;66870:4;66863:5;66859:16;66908:3;66899:6;66894:3;66890:16;66887:25;66884:112;;;66915:79;;:::i;:::-;66884:112;67005:52;67050:6;67045:3;67040;67005:52;:::i;:::-;66725:338;66631:432;;;;;:::o;67082:353::-;67148:5;67197:3;67190:4;67182:6;67178:17;67174:27;67164:122;;67205:79;;:::i;:::-;67164:122;67315:6;67309:13;67340:89;67425:3;67417:6;67410:4;67402:6;67398:17;67340:89;:::i;:::-;67331:98;;67154:281;67082:353;;;;:::o;67441:522::-;67520:6;67569:2;67557:9;67548:7;67544:23;67540:32;67537:119;;;67575:79;;:::i;:::-;67537:119;67716:1;67705:9;67701:17;67695:24;67746:18;67738:6;67735:30;67732:117;;;67768:79;;:::i;:::-;67732:117;67873:73;67938:7;67929:6;67918:9;67914:22;67873:73;:::i;:::-;67863:83;;67666:290;67441:522;;;;:::o;67969:180::-;68017:77;68014:1;68007:88;68114:4;68111:1;68104:15;68138:4;68135:1;68128:15"},"methodIdentifiers":{"answerQuestion(uint256,string)":"447e52a0","authorizeOperator(address,uint256,bytes)":"b49506fd","authorizedAmountFor(address,address)":"65aeaa95","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","claimFreeToken()":"adcea55a","decimals()":"313ce567","decreaseAllowance(address,address,uint256,bytes)":"78381670","getAllQuestions()":"2af9338e","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","getFQTBalance(address)":"821dc5d1","getOperatorsOf(address)":"d72fc29a","hasReceivedToken(address)":"73a6f6a6","hasSubmittedQuestion(address)":"0f86c618","increaseAllowance(address,uint256,bytes)":"2bc1da82","owner()":"8da5cb5b","profileOwner()":"ac0f05f6","questionCounter()":"b7b064a8","questions(uint256)":"31b1b978","renounceOwnership()":"715018a6","revokeOperator(address,address,bool,bytes)":"30d0dc37","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","submitQuestion(string)":"099ee6f2","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,address,uint256,bool,bytes)":"760d9bba","transferBatch(address[],address[],uint256[],bool[],bytes[])":"2d7667c9","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"storedData\",\"type\":\"bytes\"}],\"name\":\"InvalidExtensionAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"InvalidFunctionSelector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"authorizedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LSP7AmountExceedsAuthorizedAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LSP7AmountExceedsBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callIndex\",\"type\":\"uint256\"}],\"name\":\"LSP7BatchCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7CannotSendWithAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"LSP7DecreaseAllowanceNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7DecreasedAllowanceBelowZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP7NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP7NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"LSP7RevokeOperatorNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7TokenContractCannotHoldValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7TokenOwnerCannotBeOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"name\":\"NoExtensionFoundForFunctionSelector\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorAllowanceCannotBeIncreasedFromZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_questionId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_answerText\",\"type\":\"string\"}],\"name\":\"answerQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"authorizedAmountFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFreeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"decreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllQuestions\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"questionText\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"answerText\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"answered\",\"type\":\"bool\"}],\"internalType\":\"struct SimpleAMA.Question[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getFQTBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasReceivedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasSubmittedQuestion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"increaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profileOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"questionCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"questions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"questionText\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"answerText\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"answered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_questionText\",\"type\":\"string\"}],\"name\":\"submitQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"InvalidExtensionAddress(bytes)\":[{\"details\":\"reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\"}],\"InvalidFunctionSelector(bytes)\":[{\"details\":\"reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP7AmountExceedsAuthorizedAmount(address,uint256,address,uint256)\":[{\"details\":\"reverts when `operator` of `tokenOwner` send an `amount` of tokens larger than the `authorizedAmount`.\"}],\"LSP7AmountExceedsBalance(uint256,address,uint256)\":[{\"details\":\"reverts when sending an `amount` of tokens larger than the current `balance` of the `tokenOwner`.\"}],\"LSP7BatchCallFailed(uint256)\":[{\"details\":\"Reverts when a batch call failed.\"}],\"LSP7CannotSendWithAddressZero()\":[{\"details\":\"reverts when trying to: - mint tokens to the zero address. - burn tokens from the zero address. - transfer tokens from or to the zero address.\"}],\"LSP7CannotUseAddressZeroAsOperator()\":[{\"details\":\"reverts when trying to set the zero address as an operator.\"}],\"LSP7DecreaseAllowanceNotAuthorized(address,address,address)\":[{\"details\":\"Reverts when the call to decrease allowance is not authorized.\"}],\"LSP7DecreasedAllowanceBelowZero()\":[{\"details\":\"Reverts when trying to decrease an operator's allowance to more than its current allowance.\"}],\"LSP7InvalidTransferBatch()\":[{\"details\":\"reverts when the array parameters used in {transferBatch} have different lengths.\"}],\"LSP7NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP7NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP7RevokeOperatorNotAuthorized(address,address,address)\":[{\"details\":\"Reverts when the call to revoke operator is not authorized.\"}],\"LSP7TokenContractCannotHoldValue()\":[{\"details\":\"Error occurs when sending native tokens to the LSP7 contract without sending any data. E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\"}],\"LSP7TokenOwnerCannotBeOperator()\":[{\"details\":\"reverts when trying to authorize or revoke the token's owner as an operator.\"}],\"NoExtensionFoundForFunctionSelector(bytes4)\":[{\"details\":\"reverts when there is no extension for the function selector being called with\"}],\"OperatorAllowanceCannotBeIncreasedFromZero(address)\":[{\"details\":\"Reverts when token owner call {increaseAllowance} for an operator that does not have any allowance\"}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}},\"OperatorAuthorizationChanged(address,address,uint256,bytes)\":{\"details\":\"Emitted when `tokenOwner` enables `operator` for `amount` tokens.\",\"params\":{\"amount\":\"The amount of tokens `operator` address has access to from `tokenOwner`\",\"operator\":\"The address authorized as an operator\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenOwner\":\"The token owner\"}},\"OperatorRevoked(address,address,bool,bytes)\":{\"details\":\"Emitted when `tokenOwner` disables `operator` for `amount` tokens and set its {`authorizedAmountFor(...)`} to `0`.\",\"params\":{\"notified\":\"Bool indicating whether the operator has been notified or not\",\"operator\":\"The address revoked from operating\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenOwner\":\"The token owner\"}},\"Transfer(address,address,address,uint256,bool,bytes)\":{\"details\":\"Emitted when the `from` transferred successfully `amount` of tokens to `to`.\",\"params\":{\"amount\":\"The amount of tokens transferred.\",\"data\":\"Any additional data included by the caller during the transfer, and sent in the LSP1 hooks to the `from` and `to` addresses.\",\"force\":\"if the transferred enforced the `to` recipient address to be a contract that implements the LSP1 standard or not.\",\"from\":\"The address which tokens were sent from (balance decreased by `-amount`).\",\"operator\":\"The address of the operator that executed the transfer.\",\"to\":\"The address that received the tokens (balance increased by `+amount`).\"}}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,uint256,bytes)\":{\"custom:danger\":\"To avoid front-running and Allowance Double-Spend Exploit when increasing or decreasing the authorized amount of an operator, it is advised to use the {increaseAllowance} and {decreaseAllowance} functions. For more information, see: https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/\",\"details\":\"Sets an `amount` of tokens that an `operator` has access from the caller's balance (allowance). See {authorizedAmountFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"amount\":\"The allowance amount of tokens operator has access to.\",\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\"}},\"authorizedAmountFor(address,address)\":{\"details\":\"Get the amount of tokens `operator` address has access to from `tokenOwner`. Operators can send and burn tokens on behalf of their owners.\",\"params\":{\"operator\":\"The operator's address to query the authorized amount for.\",\"tokenOwner\":\"The token owner that `operator` has allowance on.\"},\"returns\":{\"_0\":\"The amount of tokens the `operator`'s address has access on the `tokenOwner`'s balance.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of tokens owned by `tokenOwner`. If the token is divisible (the {decimals} function returns `18`), the amount returned should be divided by 1e18 to get a better picture of the actual balance of the `tokenOwner`. _Example:_ ``` balanceOf(someAddress) -> 42_000_000_000_000_000_000 / 1e18 = 42 tokens ```\",\"params\":{\"tokenOwner\":\"The address of the token holder to query the balance for.\"},\"returns\":{\"_0\":\"The amount of tokens owned by `tokenOwner`.\"}},\"batchCalls(bytes[])\":{\"custom:info\":\"It's not possible to send value along the functions call due to the use of `delegatecall`.\",\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. If the asset contract has been set to be non-divisible via the `isNonDivisible_` parameter in the `constructor`, the decimals returned will be `0`. Otherwise `18` is the common value.\",\"returns\":{\"_0\":\"the number of decimals. If `0` is returned, the asset is non-divisible.\"}},\"decreaseAllowance(address,address,uint256,bytes)\":{\"details\":\"Atomically decreases the allowance granted to `operator` by the caller. This is an alternative approach to {authorizeOperator} that can be used as a mitigation for the double spending allowance problem. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The operator to decrease allowance for `msg.sender`\",\"subtractedAmount\":\"The amount to decrease by in the operator's allowance.\",\"tokenOwner\":\"The address of the token owner.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getOperatorsOf(address)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn on behalf of `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The token owner to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn tokens on behalf of `tokenOwner`.\"}},\"increaseAllowance(address,uint256,bytes)\":{\"details\":\"Atomically increases the allowance granted to `operator` by the caller. This is an alternative approach to {authorizeOperator} that can be used as a mitigation for the double spending allowance problem. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"addedAmount\":\"The additional amount to add on top of the current operator's allowance\",\"operator\":\"The operator to increase the allowance for `msg.sender`\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeOperator(address,address,bool,bytes)\":{\"details\":\"Enables `tokenOwner` to remove `operator` for its tokens, disallowing it to send any amount of tokens on its behalf. This function also allows the `operator` to remove itself if it is the caller of this function\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not.\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenOwner\":\"The address of the token owner.\"}},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,uint256,bool,bytes)\":{\"details\":\"Transfers an `amount` of tokens from the `from` address to the `to` address and notify both sender and recipients via the LSP1 {`universalReceiver(...)`} function. If the tokens are transferred by an operator on behalf of a token holder, the allowance for the operator will be decreased by `amount` once the token transfer has been completed (See {authorizedAmountFor}).\",\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The sender address.\",\"to\":\"The recipient address.\"}},\"transferBatch(address[],address[],uint256[],bool[],bytes[])\":{\"details\":\"Same as {`transfer(...)`} but transfer multiple tokens based on the arrays of `from`, `to`, `amount`.\",\"params\":{\"amount\":\"An array of amount of tokens to transfer for each `from -> to` transfer.\",\"data\":\"An array of additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"For each transfer, when set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of receiving addresses.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"LSP7BatchCallFailed(uint256)\":[{\"notice\":\"Batch call failed.\"}],\"LSP7TokenContractCannotHoldValue()\":[{\"notice\":\"LSP7 contract cannot receive native tokens.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"decreaseAllowance(address,address,uint256,bytes)\":{\"notice\":\"Decrease the allowance of `operator` by -`subtractedAmount`\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"increaseAllowance(address,uint256,bytes)\":{\"notice\":\"Increase the allowance of `operator` by +`addedAmount`\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ama.sol\":\"SimpleAMA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\":{\"keccak256\":\"0x209d6b52eb0d5dcb8c180773dd67e507f603c98ede7e5a64457752159a52ad3d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dbfa427c80ba998d30c721fb41795502d19aa09acb8e1f59f6982d080f029692\",\"dweb:/ipfs/QmPQXeYEU7kaDtskZ1ha2umRuGSrFTfXfpyiGgBSQfwZBn\"]},\"@erc725/smart-contracts-v8/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts-v8/contracts/errors.sol\":{\"keccak256\":\"0x198fece17fcfec61d40d3453ebbaa49760968ea8caa128dd5314a12b98ecec66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e705131b03cf4167ff312e7ebaa679cf56c22b01de518dfa4d2163d7e1ddb8b\",\"dweb:/ipfs/QmbH8q7MgrR7fJm1QEmYoKcnZCxWwejt4Jum2DUYmLJAGA\"]},\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x943d0f67d6455cfb1bed5d1fb77995df0b202ecdbb028fa0e85bc26bcd3219a5\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c3b8b0daa2fed9c0513444120b87beec7c2b102eadbcbeccae73ece67819a658\",\"dweb:/ipfs/QmaSb9Xhma6UwhK1FosJtbP8EkBn8i9PTcLKg5FU1VAJSH\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":{\"keccak256\":\"0xa81bf1910c3b56b43bf58d0be2105c434ed3b65cfb3674e282b5aba3fd35afb0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://374e7bef39522d65cf8e45c365178eb54d159b9267d0c2a2b97dfea10e52d41f\",\"dweb:/ipfs/QmfVYVnVSTRVAAifFSyFk8icePgw3eeqpjAKWAwfHMu6vX\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":{\"keccak256\":\"0x4536ed09238f33ca9d40ed2e7c6254aac84bf81010b3524711524ae7fd30227c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://abaed57358cb811d3b368d52f66db3c1327b96c38301d6eccf2ffaa6d5fa5928\",\"dweb:/ipfs/QmS1FtQH4Gn6xYrHCTHWJwxgAURvGvvfypsuQ2rRhrkPgi\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0x6a718979925b05064c15e4de4b376dadec8d107d720aa762d22a06e44ed67fa4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c82f6c8133c4d35d8cbbfc4da647204989acc5f38980be787263881e9f732f5\",\"dweb:/ipfs/QmdhHBnJvvo4Ax183HgHkL7w5A4w3ADXDQuewocnTVqsW6\"]},\"@lukso/lsp4-contracts/contracts/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol\":{\"keccak256\":\"0xed4d99a44fa7f33938b35e46c181bb6ed90b6f9dd659af93670a406ececa64da\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6431975ac7b6951c1d6f9c27352b113074faf10319499d51bafc4f38d3cb31a7\",\"dweb:/ipfs/Qmd7MForQ2P1T3jZp4CbdCEPoPg7HfgwtkNAg34EahqWwn\"]},\"@lukso/lsp7-contracts/contracts/LSP7Constants.sol\":{\"keccak256\":\"0x449280dee4ad5f85da5d3eecc624c084cf6edaffb560c98b911dcd47169d846e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9bf9a6ab9124b365f1e2f2178f048587e75af27216ab638127f14b79c114ee79\",\"dweb:/ipfs/QmVUVkPstmvBvx1xchN2dvDqgg4L72KSmkbgHLmiHZvAEk\"]},\"@lukso/lsp7-contracts/contracts/LSP7DigitalAsset.sol\":{\"keccak256\":\"0xfbba5c0e4cfac4431f8e53996c0d3911d38129b57ca47e317c1cc1d97de4dfd0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1701aab7c67ad6bae9a0df8d72d2741a2280f626758fd4df2f14ceb5d25900b2\",\"dweb:/ipfs/QmSTBM3sXPkAGPohid4bg7YiLZAhiJFDw5HjukGvW6g7PR\"]},\"@lukso/lsp7-contracts/contracts/LSP7Errors.sol\":{\"keccak256\":\"0x5bd6d23f61d45a390041b788c5e341bd0e1972b4112c7700af1addcfa284e821\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d41b3e6e9eaea0a53886d33536d0e83b8878f3b5fb17d7683592742f78a66938\",\"dweb:/ipfs/QmetTsJ7RWXF733TtHTyBLvjGJf7oLxzCSKYRpJnK61we7\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"contracts/ama.sol\":{\"keccak256\":\"0x9b376499a51441ab098e80bad6e4b698773a57546985b37f59f5701c5cb1a309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af6ec45a0df6a4a18259634c11366c26ccf95df226be32f9e5a7451e4536c7e2\",\"dweb:/ipfs/QmPxeazM2iLK3hpgqMACCaFsaM6wNHEwwcGvPgs4YZbXdc\"]}},\"version\":1}"}}}}}